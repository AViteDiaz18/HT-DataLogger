
Attiny426_V2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00803e00  00000fdd  00001091  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f9e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000003f  00008f9e  00000f9e  00001052  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000008  00803e16  00803e16  000010a7  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  000010a7  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001104  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000098  00000000  00000000  00001140  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002afd  00000000  00000000  000011d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001bc0  00000000  00000000  00003cd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000007dd  00000000  00000000  00005895  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000248  00000000  00000000  00006074  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000017d4  00000000  00000000  000062bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000099f  00000000  00000000  00007a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  0000842f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1d c0       	rjmp	.+58     	; 0x3c <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	57 c2       	rjmp	.+1198   	; 0x4d2 <__vector_17>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>
  26:	25 c0       	rjmp	.+74     	; 0x72 <__bad_interrupt>
  28:	24 c0       	rjmp	.+72     	; 0x72 <__bad_interrupt>
  2a:	23 c0       	rjmp	.+70     	; 0x72 <__bad_interrupt>
  2c:	22 c0       	rjmp	.+68     	; 0x72 <__bad_interrupt>
  2e:	21 c0       	rjmp	.+66     	; 0x72 <__bad_interrupt>
  30:	9a c2       	rjmp	.+1332   	; 0x566 <__vector_24>
  32:	1f c0       	rjmp	.+62     	; 0x72 <__bad_interrupt>
  34:	1e c0       	rjmp	.+60     	; 0x72 <__bad_interrupt>
  36:	1d c0       	rjmp	.+58     	; 0x72 <__bad_interrupt>
  38:	1c c0       	rjmp	.+56     	; 0x72 <__bad_interrupt>
  3a:	1b c0       	rjmp	.+54     	; 0x72 <__bad_interrupt>

0000003c <__ctors_end>:
  3c:	11 24       	eor	r1, r1
  3e:	1f be       	out	0x3f, r1	; 63
  40:	cf ef       	ldi	r28, 0xFF	; 255
  42:	cd bf       	out	0x3d, r28	; 61
  44:	df e3       	ldi	r29, 0x3F	; 63
  46:	de bf       	out	0x3e, r29	; 62

00000048 <__do_copy_data>:
  48:	1e e3       	ldi	r17, 0x3E	; 62
  4a:	a0 e0       	ldi	r26, 0x00	; 0
  4c:	be e3       	ldi	r27, 0x3E	; 62
  4e:	ed ed       	ldi	r30, 0xDD	; 221
  50:	ff e0       	ldi	r31, 0x0F	; 15
  52:	02 c0       	rjmp	.+4      	; 0x58 <__do_copy_data+0x10>
  54:	05 90       	lpm	r0, Z+
  56:	0d 92       	st	X+, r0
  58:	a6 31       	cpi	r26, 0x16	; 22
  5a:	b1 07       	cpc	r27, r17
  5c:	d9 f7       	brne	.-10     	; 0x54 <__do_copy_data+0xc>

0000005e <__do_clear_bss>:
  5e:	2e e3       	ldi	r18, 0x3E	; 62
  60:	a6 e1       	ldi	r26, 0x16	; 22
  62:	be e3       	ldi	r27, 0x3E	; 62
  64:	01 c0       	rjmp	.+2      	; 0x68 <.do_clear_bss_start>

00000066 <.do_clear_bss_loop>:
  66:	1d 92       	st	X+, r1

00000068 <.do_clear_bss_start>:
  68:	ae 31       	cpi	r26, 0x1E	; 30
  6a:	b2 07       	cpc	r27, r18
  6c:	e1 f7       	brne	.-8      	; 0x66 <.do_clear_bss_loop>
  6e:	2b d2       	rcall	.+1110   	; 0x4c6 <main>
  70:	94 c7       	rjmp	.+3880   	; 0xf9a <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <USART0_sendChar>:
	return auxiliar;
}

//*********** Section USART ************* 
static void USART0_sendChar(char c){
	while (!(USART0.STATUS & USART_DREIF_bm)){
  74:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
  78:	95 ff       	sbrs	r25, 5
  7a:	fc cf       	rjmp	.-8      	; 0x74 <USART0_sendChar>
		;
	}
	USART0.TXDATAL = c;
  7c:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
  80:	08 95       	ret

00000082 <USART0_printChar>:
	}
}


static int USART0_printChar(char c, FILE *stream){
	USART0_sendChar(c);
  82:	f8 df       	rcall	.-16     	; 0x74 <USART0_sendChar>
	return 0;
}
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	08 95       	ret

0000008a <USART0_init>:

static FILE USART_stream = FDEV_SETUP_STREAM(USART0_printChar, NULL, _FDEV_SETUP_WRITE);

static void USART0_init(void){
	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(1200);
  8a:	e0 e0       	ldi	r30, 0x00	; 0
  8c:	f8 e0       	ldi	r31, 0x08	; 8
  8e:	8d e6       	ldi	r24, 0x6D	; 109
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	80 87       	std	Z+8, r24	; 0x08
  94:	91 87       	std	Z+9, r25	; 0x09
	USART0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
  96:	80 ec       	ldi	r24, 0xC0	; 192
  98:	86 83       	std	Z+6, r24	; 0x06
	USART0_CTRLA = (1<<USART_RXCIE_bp)|(0<<USART_TXCIE_bp);
  9a:	80 e8       	ldi	r24, 0x80	; 128
  9c:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__RODATA_PM_OFFSET__+0x7f8805>
	PORTMUX.USARTROUTEA = PORTMUX_USART0_ALT1_gc; 
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__RODATA_PM_OFFSET__+0x7f85e2>
	stdout = &USART_stream;
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	9e e3       	ldi	r25, 0x3E	; 62
  aa:	80 93 1a 3e 	sts	0x3E1A, r24	; 0x803e1a <__iob+0x2>
  ae:	90 93 1b 3e 	sts	0x3E1B, r25	; 0x803e1b <__iob+0x3>
  b2:	08 95       	ret

000000b4 <CLOCK32K_init>:
}

//************* Section Clock ************** 
static void CLOCK32K_init(){
	CPU_CCP = CCP_IOREG_gc;
  b4:	88 ed       	ldi	r24, 0xD8	; 216
  b6:	84 bf       	out	0x34, r24	; 52
	CPUINT.CTRLA = CPUINT_IVSEL_bm;
  b8:	90 e4       	ldi	r25, 0x40	; 64
  ba:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <__RODATA_PM_OFFSET__+0x7f8110>
	CPU_CCP = CCP_IOREG_gc;
  be:	84 bf       	out	0x34, r24	; 52
	CLKCTRL_MCLKCTRLB = 0 << CLKCTRL_PEN_bp;
  c0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
	CPU_CCP = CCP_IOREG_gc;
  c4:	84 bf       	out	0x34, r24	; 52
	CLKCTRL_MCLKCTRLA = CLKCTRL_CLKSEL_OSCULP32K_gc;
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__RODATA_PM_OFFSET__+0x7f8060>
  cc:	08 95       	ret

000000ce <Pin_init>:
}

//************ Section Pulse Counter **************
static void Pin_init(){
	//Contador de pulsos
	PORTC.DIR &= ~(1<<3);
  ce:	e0 e4       	ldi	r30, 0x40	; 64
  d0:	f4 e0       	ldi	r31, 0x04	; 4
  d2:	80 81       	ld	r24, Z
  d4:	87 7f       	andi	r24, 0xF7	; 247
  d6:	80 83       	st	Z, r24
	PORTC.PIN3CTRL |= PORT_ISC_RISING_gc;
  d8:	83 89       	ldd	r24, Z+19	; 0x13
  da:	82 60       	ori	r24, 0x02	; 2
  dc:	83 8b       	std	Z+19, r24	; 0x13
	//USART
	PORTA.DIR &= ~PIN2_bm;
  de:	e0 e0       	ldi	r30, 0x00	; 0
  e0:	f4 e0       	ldi	r31, 0x04	; 4
  e2:	80 81       	ld	r24, Z
  e4:	8b 7f       	andi	r24, 0xFB	; 251
  e6:	80 83       	st	Z, r24
	PORTA.DIR |= PIN1_bm;
  e8:	80 81       	ld	r24, Z
  ea:	82 60       	ori	r24, 0x02	; 2
  ec:	80 83       	st	Z, r24
	//Iniciador ADC
	PORTB.DIR |= PIN5_bm;
  ee:	a0 e2       	ldi	r26, 0x20	; 32
  f0:	b4 e0       	ldi	r27, 0x04	; 4
  f2:	8c 91       	ld	r24, X
  f4:	80 62       	ori	r24, 0x20	; 32
  f6:	8c 93       	st	X, r24
	PORTB.OUT |= PIN5_bm;
  f8:	14 96       	adiw	r26, 0x04	; 4
  fa:	8c 91       	ld	r24, X
  fc:	14 97       	sbiw	r26, 0x04	; 4
  fe:	80 62       	ori	r24, 0x20	; 32
 100:	14 96       	adiw	r26, 0x04	; 4
 102:	8c 93       	st	X, r24
 104:	14 97       	sbiw	r26, 0x04	; 4
	//Presion 1
	PORTB.PIN4CTRL &= ~PORT_ISC_gm;
 106:	54 96       	adiw	r26, 0x14	; 20
 108:	8c 91       	ld	r24, X
 10a:	54 97       	sbiw	r26, 0x14	; 20
 10c:	88 7f       	andi	r24, 0xF8	; 248
 10e:	54 96       	adiw	r26, 0x14	; 20
 110:	8c 93       	st	X, r24
 112:	54 97       	sbiw	r26, 0x14	; 20
	PORTB.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 114:	54 96       	adiw	r26, 0x14	; 20
 116:	8c 91       	ld	r24, X
 118:	54 97       	sbiw	r26, 0x14	; 20
 11a:	84 60       	ori	r24, 0x04	; 4
 11c:	54 96       	adiw	r26, 0x14	; 20
 11e:	8c 93       	st	X, r24
 120:	54 97       	sbiw	r26, 0x14	; 20
	PORTB.PIN4CTRL &= ~PORT_PULLUPEN_bm;
 122:	54 96       	adiw	r26, 0x14	; 20
 124:	8c 91       	ld	r24, X
 126:	54 97       	sbiw	r26, 0x14	; 20
 128:	87 7f       	andi	r24, 0xF7	; 247
 12a:	54 96       	adiw	r26, 0x14	; 20
 12c:	8c 93       	st	X, r24
	//Presion 2
	PORTA.PIN5CTRL &= ~PORT_ISC_gm;
 12e:	85 89       	ldd	r24, Z+21	; 0x15
 130:	88 7f       	andi	r24, 0xF8	; 248
 132:	85 8b       	std	Z+21, r24	; 0x15
	PORTA.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 134:	85 89       	ldd	r24, Z+21	; 0x15
 136:	84 60       	ori	r24, 0x04	; 4
 138:	85 8b       	std	Z+21, r24	; 0x15
	PORTA.PIN5CTRL &= ~PORT_PULLUPEN_bm;
 13a:	85 89       	ldd	r24, Z+21	; 0x15
 13c:	87 7f       	andi	r24, 0xF7	; 247
 13e:	85 8b       	std	Z+21, r24	; 0x15
	//Bateria
	PORTA.PIN6CTRL &= ~PORT_ISC_gm;
 140:	86 89       	ldd	r24, Z+22	; 0x16
 142:	88 7f       	andi	r24, 0xF8	; 248
 144:	86 8b       	std	Z+22, r24	; 0x16
	PORTA.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 146:	86 89       	ldd	r24, Z+22	; 0x16
 148:	84 60       	ori	r24, 0x04	; 4
 14a:	86 8b       	std	Z+22, r24	; 0x16
	PORTA.PIN6CTRL &= ~PORT_PULLUPEN_bm;
 14c:	86 89       	ldd	r24, Z+22	; 0x16
 14e:	87 7f       	andi	r24, 0xF7	; 247
 150:	86 8b       	std	Z+22, r24	; 0x16
 152:	08 95       	ret

00000154 <ReportCount>:
uint8_t index1 = 0;
char c;

//******** Section ReportCount **********

unsigned long ReportCount(){
 154:	0f 93       	push	r16
 156:	1f 93       	push	r17
	unsigned long actual = 0;
	unsigned long vuelta = 0;
	unsigned long completo = 32385;
	vuelta = *(uint8_t *)(5247) * completo;
 158:	20 91 7f 14 	lds	r18, 0x147F	; 0x80147f <__RODATA_PM_OFFSET__+0x7f947f>
 15c:	30 e0       	ldi	r19, 0x00	; 0
 15e:	a1 e8       	ldi	r26, 0x81	; 129
 160:	be e7       	ldi	r27, 0x7E	; 126
 162:	40 d4       	rcall	.+2176   	; 0x9e4 <__umulhisi3>
 164:	ab 01       	movw	r20, r22
 166:	bc 01       	movw	r22, r24
	for(int i = 5120; i <= 5246; i++){
 168:	e0 e0       	ldi	r30, 0x00	; 0
 16a:	f4 e1       	ldi	r31, 0x14	; 20
char c;

//******** Section ReportCount **********

unsigned long ReportCount(){
	unsigned long actual = 0;
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	dc 01       	movw	r26, r24
	unsigned long vuelta = 0;
	unsigned long completo = 32385;
	vuelta = *(uint8_t *)(5247) * completo;
	for(int i = 5120; i <= 5246; i++){
 172:	05 c0       	rjmp	.+10     	; 0x17e <ReportCount+0x2a>
		actual += *(uint8_t *)(i);
 174:	21 91       	ld	r18, Z+
 176:	82 0f       	add	r24, r18
 178:	91 1d       	adc	r25, r1
 17a:	a1 1d       	adc	r26, r1
 17c:	b1 1d       	adc	r27, r1
unsigned long ReportCount(){
	unsigned long actual = 0;
	unsigned long vuelta = 0;
	unsigned long completo = 32385;
	vuelta = *(uint8_t *)(5247) * completo;
	for(int i = 5120; i <= 5246; i++){
 17e:	ef 37       	cpi	r30, 0x7F	; 127
 180:	04 e1       	ldi	r16, 0x14	; 20
 182:	f0 07       	cpc	r31, r16
 184:	bc f3       	brlt	.-18     	; 0x174 <ReportCount+0x20>
		actual += *(uint8_t *)(i);
	}
	return vuelta+actual;
 186:	8c 01       	movw	r16, r24
 188:	9d 01       	movw	r18, r26
 18a:	04 0f       	add	r16, r20
 18c:	15 1f       	adc	r17, r21
 18e:	26 1f       	adc	r18, r22
 190:	37 1f       	adc	r19, r23
 192:	c9 01       	movw	r24, r18
 194:	b8 01       	movw	r22, r16
}
 196:	1f 91       	pop	r17
 198:	0f 91       	pop	r16
 19a:	08 95       	ret

0000019c <get_Float>:
		int decimal1;
		int decimal2;
	};
}Flotante;

Flotante get_Float(float a){
 19c:	cf 92       	push	r12
 19e:	df 92       	push	r13
 1a0:	ef 92       	push	r14
 1a2:	ff 92       	push	r15
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	cd b7       	in	r28, 0x3d	; 61
 1aa:	de b7       	in	r29, 0x3e	; 62
 1ac:	2c 97       	sbiw	r28, 0x0c	; 12
 1ae:	cd bf       	out	0x3d, r28	; 61
 1b0:	de bf       	out	0x3e, r29	; 62
 1b2:	6b 01       	movw	r12, r22
 1b4:	7c 01       	movw	r14, r24
	Flotante auxiliar;
	float aux = a;
	auxiliar.entero = (int)a;
 1b6:	c1 d2       	rcall	.+1410   	; 0x73a <__fixsfsi>
 1b8:	6f 83       	std	Y+7, r22	; 0x07
 1ba:	78 87       	std	Y+8, r23	; 0x08
	aux = aux-auxiliar.entero;
 1bc:	07 2e       	mov	r0, r23
 1be:	00 0c       	add	r0, r0
 1c0:	88 0b       	sbc	r24, r24
 1c2:	99 0b       	sbc	r25, r25
 1c4:	f2 d2       	rcall	.+1508   	; 0x7aa <__floatsisf>
 1c6:	9b 01       	movw	r18, r22
 1c8:	ac 01       	movw	r20, r24
 1ca:	c7 01       	movw	r24, r14
 1cc:	b6 01       	movw	r22, r12
 1ce:	43 d2       	rcall	.+1158   	; 0x656 <__subsf3>
	aux = aux*10;
 1d0:	20 e0       	ldi	r18, 0x00	; 0
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	40 e2       	ldi	r20, 0x20	; 32
 1d6:	51 e4       	ldi	r21, 0x41	; 65
 1d8:	98 d3       	rcall	.+1840   	; 0x90a <__mulsf3>
 1da:	6b 01       	movw	r12, r22
 1dc:	7c 01       	movw	r14, r24
	auxiliar.decimal1 = (int)aux;
 1de:	ad d2       	rcall	.+1370   	; 0x73a <__fixsfsi>
 1e0:	69 87       	std	Y+9, r22	; 0x09
 1e2:	7a 87       	std	Y+10, r23	; 0x0a
	aux = aux - auxiliar.decimal1;
 1e4:	07 2e       	mov	r0, r23
 1e6:	00 0c       	add	r0, r0
 1e8:	88 0b       	sbc	r24, r24
 1ea:	99 0b       	sbc	r25, r25
 1ec:	de d2       	rcall	.+1468   	; 0x7aa <__floatsisf>
 1ee:	9b 01       	movw	r18, r22
 1f0:	ac 01       	movw	r20, r24
 1f2:	c7 01       	movw	r24, r14
 1f4:	b6 01       	movw	r22, r12
 1f6:	2f d2       	rcall	.+1118   	; 0x656 <__subsf3>
	aux = aux*10;
 1f8:	20 e0       	ldi	r18, 0x00	; 0
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	40 e2       	ldi	r20, 0x20	; 32
 1fe:	51 e4       	ldi	r21, 0x41	; 65
 200:	84 d3       	rcall	.+1800   	; 0x90a <__mulsf3>
	auxiliar.decimal2 = (int)aux;
 202:	9b d2       	rcall	.+1334   	; 0x73a <__fixsfsi>
 204:	6b 87       	std	Y+11, r22	; 0x0b
 206:	7c 87       	std	Y+12, r23	; 0x0c
	return auxiliar;
 208:	86 e0       	ldi	r24, 0x06	; 6
 20a:	fe 01       	movw	r30, r28
 20c:	37 96       	adiw	r30, 0x07	; 7
 20e:	de 01       	movw	r26, r28
 210:	11 96       	adiw	r26, 0x01	; 1
 212:	01 90       	ld	r0, Z+
 214:	0d 92       	st	X+, r0
 216:	8a 95       	dec	r24
 218:	e1 f7       	brne	.-8      	; 0x212 <__DATA_REGION_LENGTH__+0x12>
 21a:	29 81       	ldd	r18, Y+1	; 0x01
 21c:	3a 81       	ldd	r19, Y+2	; 0x02
 21e:	4b 81       	ldd	r20, Y+3	; 0x03
 220:	5c 81       	ldd	r21, Y+4	; 0x04
 222:	6d 81       	ldd	r22, Y+5	; 0x05
 224:	7e 81       	ldd	r23, Y+6	; 0x06
}
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	2c 96       	adiw	r28, 0x0c	; 12
 22c:	cd bf       	out	0x3d, r28	; 61
 22e:	de bf       	out	0x3e, r29	; 62
 230:	df 91       	pop	r29
 232:	cf 91       	pop	r28
 234:	ff 90       	pop	r15
 236:	ef 90       	pop	r14
 238:	df 90       	pop	r13
 23a:	cf 90       	pop	r12
 23c:	08 95       	ret

0000023e <USART0_sendString>:
	}
	USART0.TXDATAL = c;
}

void USART0_sendString(char *str)
{
 23e:	0f 93       	push	r16
 240:	1f 93       	push	r17
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	8c 01       	movw	r16, r24
	for(size_t i = 0; i < strlen(str); i++)
 248:	c0 e0       	ldi	r28, 0x00	; 0
 24a:	d0 e0       	ldi	r29, 0x00	; 0
 24c:	06 c0       	rjmp	.+12     	; 0x25a <USART0_sendString+0x1c>
	{
		USART0_sendChar(str[i]);
 24e:	f8 01       	movw	r30, r16
 250:	ec 0f       	add	r30, r28
 252:	fd 1f       	adc	r31, r29
 254:	80 81       	ld	r24, Z
 256:	0e df       	rcall	.-484    	; 0x74 <USART0_sendChar>
	USART0.TXDATAL = c;
}

void USART0_sendString(char *str)
{
	for(size_t i = 0; i < strlen(str); i++)
 258:	21 96       	adiw	r28, 0x01	; 1
 25a:	f8 01       	movw	r30, r16
 25c:	01 90       	ld	r0, Z+
 25e:	00 20       	and	r0, r0
 260:	e9 f7       	brne	.-6      	; 0x25c <USART0_sendString+0x1e>
 262:	31 97       	sbiw	r30, 0x01	; 1
 264:	e0 1b       	sub	r30, r16
 266:	f1 0b       	sbc	r31, r17
 268:	ce 17       	cp	r28, r30
 26a:	df 07       	cpc	r29, r31
 26c:	80 f3       	brcs	.-32     	; 0x24e <USART0_sendString+0x10>
	{
		USART0_sendChar(str[i]);
	}
}
 26e:	df 91       	pop	r29
 270:	cf 91       	pop	r28
 272:	1f 91       	pop	r17
 274:	0f 91       	pop	r16
 276:	08 95       	ret

00000278 <ADC0_init>:
	PORTA.PIN6CTRL &= ~PORT_PULLUPEN_bm;
}

//************** Section ADC ************************
void ADC0_init(){
	ADC0.CTRLB = ADC_PRESC_DIV4_gc;
 278:	e0 e0       	ldi	r30, 0x00	; 0
 27a:	f6 e0       	ldi	r31, 0x06	; 6
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	81 83       	std	Z+1, r24	; 0x01
	ADC0.CTRLC = ADC_REFSEL_2500MV_gc;
 280:	86 e0       	ldi	r24, 0x06	; 6
 282:	82 83       	std	Z+2, r24	; 0x02
 284:	08 95       	ret

00000286 <ADC0_read>:
}

uint16_t ADC0_read(void)
{
	ADC0.COMMAND = ADC_START_IMMEDIATE_gc | ADC_MODE_SINGLE_12BIT_gc;
 286:	81 e1       	ldi	r24, 0x11	; 17
 288:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__RODATA_PM_OFFSET__+0x7f860a>
	while ( !(ADC0.INTFLAGS & ADC_RESRDY_bm) )
 28c:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
 290:	80 ff       	sbrs	r24, 0
 292:	fc cf       	rjmp	.-8      	; 0x28c <ADC0_read+0x6>
	{
		;
	}
	ADC0.INTFLAGS = ADC_RESRDY_bm;
 294:	e0 e0       	ldi	r30, 0x00	; 0
 296:	f6 e0       	ldi	r31, 0x06	; 6
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	85 83       	std	Z+5, r24	; 0x05
	return ADC0.RESULT;
 29c:	80 89       	ldd	r24, Z+16	; 0x10
 29e:	91 89       	ldd	r25, Z+17	; 0x11
 2a0:	a2 89       	ldd	r26, Z+18	; 0x12
 2a2:	b3 89       	ldd	r27, Z+19	; 0x13
}
 2a4:	08 95       	ret

000002a6 <get_Voltage>:

float get_Voltage(int pin){
 2a6:	8f 92       	push	r8
 2a8:	9f 92       	push	r9
 2aa:	af 92       	push	r10
 2ac:	bf 92       	push	r11
 2ae:	cf 92       	push	r12
 2b0:	df 92       	push	r13
 2b2:	ef 92       	push	r14
 2b4:	ff 92       	push	r15
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
	float lectura = 0;
	float Voltage = 0;
	int a = 0;
	switch (pin){
 2ba:	8a 30       	cpi	r24, 0x0A	; 10
 2bc:	91 05       	cpc	r25, r1
 2be:	31 f0       	breq	.+12     	; 0x2cc <get_Voltage+0x26>
 2c0:	8b 30       	cpi	r24, 0x0B	; 11
 2c2:	91 05       	cpc	r25, r1
 2c4:	51 f0       	breq	.+20     	; 0x2da <get_Voltage+0x34>
 2c6:	06 97       	sbiw	r24, 0x06	; 6
 2c8:	71 f4       	brne	.+28     	; 0x2e6 <get_Voltage+0x40>
 2ca:	13 c0       	rjmp	.+38     	; 0x2f2 <get_Voltage+0x4c>
		case 10:
			ADC0.CTRLA = ADC_ENABLE_bm;
 2cc:	e0 e0       	ldi	r30, 0x00	; 0
 2ce:	f6 e0       	ldi	r31, 0x06	; 6
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	80 83       	st	Z, r24
			ADC0.MUXPOS = ADC_MUXPOS_AIN9_gc;
 2d4:	89 e0       	ldi	r24, 0x09	; 9
 2d6:	84 87       	std	Z+12, r24	; 0x0c
			break;
 2d8:	06 c0       	rjmp	.+12     	; 0x2e6 <get_Voltage+0x40>
		case 11:
			ADC0.CTRLA = ADC_ENABLE_bm;
 2da:	e0 e0       	ldi	r30, 0x00	; 0
 2dc:	f6 e0       	ldi	r31, 0x06	; 6
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	80 83       	st	Z, r24
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
 2e2:	85 e0       	ldi	r24, 0x05	; 5
 2e4:	84 87       	std	Z+12, r24	; 0x0c
	}
	ADC0.INTFLAGS = ADC_RESRDY_bm;
	return ADC0.RESULT;
}

float get_Voltage(int pin){
 2e6:	c0 e0       	ldi	r28, 0x00	; 0
 2e8:	d0 e0       	ldi	r29, 0x00	; 0
 2ea:	c1 2c       	mov	r12, r1
 2ec:	d1 2c       	mov	r13, r1
 2ee:	76 01       	movw	r14, r12
 2f0:	31 c0       	rjmp	.+98     	; 0x354 <get_Voltage+0xae>
		case 11:
			ADC0.CTRLA = ADC_ENABLE_bm;
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
			break;
		case 6:
			ADC0.CTRLA = ADC_ENABLE_bm;
 2f2:	e0 e0       	ldi	r30, 0x00	; 0
 2f4:	f6 e0       	ldi	r31, 0x06	; 6
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	80 83       	st	Z, r24
			ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
 2fa:	86 e0       	ldi	r24, 0x06	; 6
 2fc:	84 87       	std	Z+12, r24	; 0x0c
			break;
 2fe:	f3 cf       	rjmp	.-26     	; 0x2e6 <get_Voltage+0x40>
	}
	while(a < 20){
		lectura = ((ADC0_read()*2.5)/4096);
 300:	c2 df       	rcall	.-124    	; 0x286 <ADC0_read>
 302:	bc 01       	movw	r22, r24
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	4e d2       	rcall	.+1180   	; 0x7a6 <__floatunsisf>
 30a:	20 e0       	ldi	r18, 0x00	; 0
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	40 e2       	ldi	r20, 0x20	; 32
 310:	50 e4       	ldi	r21, 0x40	; 64
 312:	fb d2       	rcall	.+1526   	; 0x90a <__mulsf3>
 314:	20 e0       	ldi	r18, 0x00	; 0
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	40 e8       	ldi	r20, 0x80	; 128
 31a:	59 e3       	ldi	r21, 0x39	; 57
 31c:	f6 d2       	rcall	.+1516   	; 0x90a <__mulsf3>
		Voltage = (0.5*lectura) + ((1.0 - 0.5)*Voltage);
 31e:	20 e0       	ldi	r18, 0x00	; 0
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	40 e0       	ldi	r20, 0x00	; 0
 324:	5f e3       	ldi	r21, 0x3F	; 63
 326:	f1 d2       	rcall	.+1506   	; 0x90a <__mulsf3>
 328:	4b 01       	movw	r8, r22
 32a:	5c 01       	movw	r10, r24
 32c:	20 e0       	ldi	r18, 0x00	; 0
 32e:	30 e0       	ldi	r19, 0x00	; 0
 330:	40 e0       	ldi	r20, 0x00	; 0
 332:	5f e3       	ldi	r21, 0x3F	; 63
 334:	c7 01       	movw	r24, r14
 336:	b6 01       	movw	r22, r12
 338:	e8 d2       	rcall	.+1488   	; 0x90a <__mulsf3>
 33a:	9b 01       	movw	r18, r22
 33c:	ac 01       	movw	r20, r24
 33e:	c5 01       	movw	r24, r10
 340:	b4 01       	movw	r22, r8
 342:	8a d1       	rcall	.+788    	; 0x658 <__addsf3>
 344:	6b 01       	movw	r12, r22
 346:	7c 01       	movw	r14, r24
		a++;
 348:	21 96       	adiw	r28, 0x01	; 1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34a:	89 e9       	ldi	r24, 0x99	; 153
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <get_Voltage+0xa8>
 352:	00 c0       	rjmp	.+0      	; 0x354 <get_Voltage+0xae>
		case 6:
			ADC0.CTRLA = ADC_ENABLE_bm;
			ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
			break;
	}
	while(a < 20){
 354:	c4 31       	cpi	r28, 0x14	; 20
 356:	d1 05       	cpc	r29, r1
 358:	9c f2       	brlt	.-90     	; 0x300 <get_Voltage+0x5a>
		lectura = ((ADC0_read()*2.5)/4096);
		Voltage = (0.5*lectura) + ((1.0 - 0.5)*Voltage);
		a++;
		_delay_ms(50);
	}
	ADC0.CTRLA &= ~ADC_ENABLE_bm;
 35a:	e0 e0       	ldi	r30, 0x00	; 0
 35c:	f6 e0       	ldi	r31, 0x06	; 6
 35e:	80 81       	ld	r24, Z
 360:	8e 7f       	andi	r24, 0xFE	; 254
 362:	80 83       	st	Z, r24
	return Voltage;
}
 364:	c7 01       	movw	r24, r14
 366:	b6 01       	movw	r22, r12
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	ff 90       	pop	r15
 36e:	ef 90       	pop	r14
 370:	df 90       	pop	r13
 372:	cf 90       	pop	r12
 374:	bf 90       	pop	r11
 376:	af 90       	pop	r10
 378:	9f 90       	pop	r9
 37a:	8f 90       	pop	r8
 37c:	08 95       	ret

0000037e <get_Presure>:

float get_Presure(float vol){
 37e:	cf 92       	push	r12
 380:	df 92       	push	r13
 382:	ef 92       	push	r14
 384:	ff 92       	push	r15
 386:	6b 01       	movw	r12, r22
 388:	7c 01       	movw	r14, r24
	//float Pressure;
	if(vol <=  0.491214){
 38a:	27 e6       	ldi	r18, 0x67	; 103
 38c:	30 e8       	ldi	r19, 0x80	; 128
 38e:	4b ef       	ldi	r20, 0xFB	; 251
 390:	5e e3       	ldi	r21, 0x3E	; 62
 392:	ce d1       	rcall	.+924    	; 0x730 <__cmpsf2>
 394:	18 16       	cp	r1, r24
 396:	94 f4       	brge	.+36     	; 0x3bc <get_Presure+0x3e>
		vol = 0.0;
		//Pressure = 0.0;
	}
	else{
		vol = (8.9775485 * vol - 4.4099)*10.2;
 398:	2a e0       	ldi	r18, 0x0A	; 10
 39a:	34 ea       	ldi	r19, 0xA4	; 164
 39c:	4f e0       	ldi	r20, 0x0F	; 15
 39e:	51 e4       	ldi	r21, 0x41	; 65
 3a0:	c7 01       	movw	r24, r14
 3a2:	b6 01       	movw	r22, r12
 3a4:	b2 d2       	rcall	.+1380   	; 0x90a <__mulsf3>
 3a6:	27 ee       	ldi	r18, 0xE7	; 231
 3a8:	3d e1       	ldi	r19, 0x1D	; 29
 3aa:	4d e8       	ldi	r20, 0x8D	; 141
 3ac:	50 e4       	ldi	r21, 0x40	; 64
 3ae:	53 d1       	rcall	.+678    	; 0x656 <__subsf3>
 3b0:	23 e3       	ldi	r18, 0x33	; 51
 3b2:	33 e3       	ldi	r19, 0x33	; 51
 3b4:	43 e2       	ldi	r20, 0x23	; 35
 3b6:	51 e4       	ldi	r21, 0x41	; 65
 3b8:	a8 d2       	rcall	.+1360   	; 0x90a <__mulsf3>
 3ba:	03 c0       	rjmp	.+6      	; 0x3c2 <get_Presure+0x44>
}

float get_Presure(float vol){
	//float Pressure;
	if(vol <=  0.491214){
		vol = 0.0;
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	cb 01       	movw	r24, r22
		vol = (8.9775485 * vol - 4.4099)*10.2;
		//Pressure = (8.9775485 * vol - 4.4099)*10.2;
	}
	return vol;
	//return Pressure;	
}
 3c2:	ff 90       	pop	r15
 3c4:	ef 90       	pop	r14
 3c6:	df 90       	pop	r13
 3c8:	cf 90       	pop	r12
 3ca:	08 95       	ret

000003cc <executeCommand>:

static void executeCommand(char *command)
{	
 3cc:	cf 92       	push	r12
 3ce:	df 92       	push	r13
 3d0:	ef 92       	push	r14
 3d2:	ff 92       	push	r15
 3d4:	0f 93       	push	r16
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	cd b7       	in	r28, 0x3d	; 61
 3de:	de b7       	in	r29, 0x3e	; 62
 3e0:	62 97       	sbiw	r28, 0x12	; 18
 3e2:	cd bf       	out	0x3d, r28	; 61
 3e4:	de bf       	out	0x3e, r29	; 62
 3e6:	8c 01       	movw	r16, r24
	
	/*B1 = get_Voltage(6)*5;
	P1 = get_Presure(get_Voltage(10));
	P2 = get_Presure(get_Voltage(11));*/
	
	presion1 = get_Float(get_Presure(get_Voltage(10)));
 3e8:	8a e0       	ldi	r24, 0x0A	; 10
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	5c df       	rcall	.-328    	; 0x2a6 <get_Voltage>
 3ee:	c7 df       	rcall	.-114    	; 0x37e <get_Presure>
 3f0:	d5 de       	rcall	.-598    	; 0x19c <get_Float>
 3f2:	29 83       	std	Y+1, r18	; 0x01
 3f4:	3a 83       	std	Y+2, r19	; 0x02
 3f6:	4b 83       	std	Y+3, r20	; 0x03
 3f8:	5c 83       	std	Y+4, r21	; 0x04
 3fa:	6d 83       	std	Y+5, r22	; 0x05
 3fc:	7e 83       	std	Y+6, r23	; 0x06
	presion2 = get_Float(get_Presure(get_Voltage(11)));
 3fe:	8b e0       	ldi	r24, 0x0B	; 11
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	51 df       	rcall	.-350    	; 0x2a6 <get_Voltage>
 404:	bc df       	rcall	.-136    	; 0x37e <get_Presure>
 406:	ca de       	rcall	.-620    	; 0x19c <get_Float>
 408:	2f 83       	std	Y+7, r18	; 0x07
 40a:	38 87       	std	Y+8, r19	; 0x08
 40c:	49 87       	std	Y+9, r20	; 0x09
 40e:	5a 87       	std	Y+10, r21	; 0x0a
 410:	6b 87       	std	Y+11, r22	; 0x0b
 412:	7c 87       	std	Y+12, r23	; 0x0c
	bateria = get_Float(get_Voltage(6)*5);
 414:	86 e0       	ldi	r24, 0x06	; 6
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	46 df       	rcall	.-372    	; 0x2a6 <get_Voltage>
 41a:	20 e0       	ldi	r18, 0x00	; 0
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	40 ea       	ldi	r20, 0xA0	; 160
 420:	50 e4       	ldi	r21, 0x40	; 64
 422:	73 d2       	rcall	.+1254   	; 0x90a <__mulsf3>
 424:	bb de       	rcall	.-650    	; 0x19c <get_Float>
 426:	2d 87       	std	Y+13, r18	; 0x0d
 428:	3e 87       	std	Y+14, r19	; 0x0e
 42a:	4f 87       	std	Y+15, r20	; 0x0f
 42c:	58 8b       	std	Y+16, r21	; 0x10
 42e:	69 8b       	std	Y+17, r22	; 0x11
 430:	7a 8b       	std	Y+18, r23	; 0x12
		
	/*presion1 = get_Float(P1);
	presion2 = get_Float(P2);
	bateria = get_Float(B1);*/
	cont = ReportCount();
 432:	90 de       	rcall	.-736    	; 0x154 <ReportCount>
 434:	f6 2e       	mov	r15, r22
 436:	e7 2e       	mov	r14, r23
 438:	d8 2e       	mov	r13, r24
 43a:	c9 2e       	mov	r12, r25
	
	if(strcmp(command,"MS\r") == 0){
 43c:	6e e9       	ldi	r22, 0x9E	; 158
 43e:	7f e8       	ldi	r23, 0x8F	; 143
 440:	c8 01       	movw	r24, r16
 442:	dc d2       	rcall	.+1464   	; 0x9fc <strcmp>
 444:	89 2b       	or	r24, r25
 446:	81 f5       	brne	.+96     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
		printf("RP1%d.%d%dRP2%d.%d%dRQ1%lu.0RV1%d.%d%d\r",presion1.entero,presion1.decimal1,presion1.decimal2,presion2.entero,presion2.decimal1,presion2.decimal2,cont,bateria.entero,bateria.decimal1,bateria.decimal2);
 448:	8a 89       	ldd	r24, Y+18	; 0x12
 44a:	8f 93       	push	r24
 44c:	89 89       	ldd	r24, Y+17	; 0x11
 44e:	8f 93       	push	r24
 450:	88 89       	ldd	r24, Y+16	; 0x10
 452:	8f 93       	push	r24
 454:	8f 85       	ldd	r24, Y+15	; 0x0f
 456:	8f 93       	push	r24
 458:	8e 85       	ldd	r24, Y+14	; 0x0e
 45a:	8f 93       	push	r24
 45c:	8d 85       	ldd	r24, Y+13	; 0x0d
 45e:	8f 93       	push	r24
 460:	cf 92       	push	r12
 462:	df 92       	push	r13
 464:	ef 92       	push	r14
 466:	ff 92       	push	r15
 468:	8c 85       	ldd	r24, Y+12	; 0x0c
 46a:	8f 93       	push	r24
 46c:	8b 85       	ldd	r24, Y+11	; 0x0b
 46e:	8f 93       	push	r24
 470:	8a 85       	ldd	r24, Y+10	; 0x0a
 472:	8f 93       	push	r24
 474:	89 85       	ldd	r24, Y+9	; 0x09
 476:	8f 93       	push	r24
 478:	88 85       	ldd	r24, Y+8	; 0x08
 47a:	8f 93       	push	r24
 47c:	8f 81       	ldd	r24, Y+7	; 0x07
 47e:	8f 93       	push	r24
 480:	8e 81       	ldd	r24, Y+6	; 0x06
 482:	8f 93       	push	r24
 484:	8d 81       	ldd	r24, Y+5	; 0x05
 486:	8f 93       	push	r24
 488:	8c 81       	ldd	r24, Y+4	; 0x04
 48a:	8f 93       	push	r24
 48c:	8b 81       	ldd	r24, Y+3	; 0x03
 48e:	8f 93       	push	r24
 490:	8a 81       	ldd	r24, Y+2	; 0x02
 492:	8f 93       	push	r24
 494:	89 81       	ldd	r24, Y+1	; 0x01
 496:	8f 93       	push	r24
 498:	82 ea       	ldi	r24, 0xA2	; 162
 49a:	9f e8       	ldi	r25, 0x8F	; 143
 49c:	9f 93       	push	r25
 49e:	8f 93       	push	r24
 4a0:	b6 d2       	rcall	.+1388   	; 0xa0e <printf>
 4a2:	cd bf       	out	0x3d, r28	; 61
 4a4:	de bf       	out	0x3e, r29	; 62
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
	}
	else{
		USART0_sendString("Incorrect Command\r");
 4a8:	8a ec       	ldi	r24, 0xCA	; 202
 4aa:	9f e8       	ldi	r25, 0x8F	; 143
 4ac:	c8 de       	rcall	.-624    	; 0x23e <USART0_sendString>
	}
}
 4ae:	62 96       	adiw	r28, 0x12	; 18
 4b0:	cd bf       	out	0x3d, r28	; 61
 4b2:	de bf       	out	0x3e, r29	; 62
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	1f 91       	pop	r17
 4ba:	0f 91       	pop	r16
 4bc:	ff 90       	pop	r15
 4be:	ef 90       	pop	r14
 4c0:	df 90       	pop	r13
 4c2:	cf 90       	pop	r12
 4c4:	08 95       	ret

000004c6 <main>:

int main(void){
	CLOCK32K_init();
 4c6:	f6 dd       	rcall	.-1044   	; 0xb4 <CLOCK32K_init>
	ADC0_init();
 4c8:	d7 de       	rcall	.-594    	; 0x278 <ADC0_init>
	Pin_init();
 4ca:	01 de       	rcall	.-1022   	; 0xce <Pin_init>
	USART0_init();
 4cc:	de dd       	rcall	.-1092   	; 0x8a <USART0_init>
	sei();
 4ce:	78 94       	sei
 4d0:	ff cf       	rjmp	.-2      	; 0x4d0 <main+0xa>

000004d2 <__vector_17>:
	}
}

//************** Section Interruptions **************

ISR(USART0_RXC_vect) { 
 4d2:	1f 92       	push	r1
 4d4:	0f 92       	push	r0
 4d6:	0f b6       	in	r0, 0x3f	; 63
 4d8:	0f 92       	push	r0
 4da:	11 24       	eor	r1, r1
 4dc:	2f 93       	push	r18
 4de:	3f 93       	push	r19
 4e0:	4f 93       	push	r20
 4e2:	5f 93       	push	r21
 4e4:	6f 93       	push	r22
 4e6:	7f 93       	push	r23
 4e8:	8f 93       	push	r24
 4ea:	9f 93       	push	r25
 4ec:	af 93       	push	r26
 4ee:	bf 93       	push	r27
 4f0:	ef 93       	push	r30
 4f2:	ff 93       	push	r31
 4f4:	89 e9       	ldi	r24, 0x99	; 153
 4f6:	91 e0       	ldi	r25, 0x01	; 1
 4f8:	01 97       	sbiw	r24, 0x01	; 1
 4fa:	f1 f7       	brne	.-4      	; 0x4f8 <__vector_17+0x26>
 4fc:	00 c0       	rjmp	.+0      	; 0x4fe <__vector_17+0x2c>
	_delay_ms(50);
	c = USART0_RXDATAL;
 4fe:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__RODATA_PM_OFFSET__+0x7f8800>
 502:	80 93 17 3e 	sts	0x3E17, r24	; 0x803e17 <c>
	if(c != 0 && c != '\r')
 506:	88 23       	and	r24, r24
 508:	81 f0       	breq	.+32     	; 0x52a <__vector_17+0x58>
 50a:	8d 30       	cpi	r24, 0x0D	; 13
 50c:	71 f0       	breq	.+28     	; 0x52a <__vector_17+0x58>
	{
		command[index1] = c;
 50e:	90 91 16 3e 	lds	r25, 0x3E16	; 0x803e16 <__data_end>
 512:	e9 2f       	mov	r30, r25
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	e2 5f       	subi	r30, 0xF2	; 242
 518:	f1 4c       	sbci	r31, 0xC1	; 193
 51a:	80 83       	st	Z, r24
		index1++;
 51c:	9f 5f       	subi	r25, 0xFF	; 255
 51e:	90 93 16 3e 	sts	0x3E16, r25	; 0x803e16 <__data_end>
		if(index1 > MAX_COMMAND_LEN)
 522:	99 30       	cpi	r25, 0x09	; 9
 524:	10 f0       	brcs	.+4      	; 0x52a <__vector_17+0x58>
		{
			index1 = 0;
 526:	10 92 16 3e 	sts	0x3E16, r1	; 0x803e16 <__data_end>
		}
	}
	if(c == '\r')
 52a:	8d 30       	cpi	r24, 0x0D	; 13
 52c:	59 f4       	brne	.+22     	; 0x544 <__vector_17+0x72>
	{
		command[index1] = '\r';
 52e:	e0 91 16 3e 	lds	r30, 0x3E16	; 0x803e16 <__data_end>
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	e2 5f       	subi	r30, 0xF2	; 242
 536:	f1 4c       	sbci	r31, 0xC1	; 193
 538:	80 83       	st	Z, r24
		index1 = 0;
 53a:	10 92 16 3e 	sts	0x3E16, r1	; 0x803e16 <__data_end>
		
		executeCommand(command);
 53e:	8e e0       	ldi	r24, 0x0E	; 14
 540:	9e e3       	ldi	r25, 0x3E	; 62
 542:	44 df       	rcall	.-376    	; 0x3cc <executeCommand>
	}
}
 544:	ff 91       	pop	r31
 546:	ef 91       	pop	r30
 548:	bf 91       	pop	r27
 54a:	af 91       	pop	r26
 54c:	9f 91       	pop	r25
 54e:	8f 91       	pop	r24
 550:	7f 91       	pop	r23
 552:	6f 91       	pop	r22
 554:	5f 91       	pop	r21
 556:	4f 91       	pop	r20
 558:	3f 91       	pop	r19
 55a:	2f 91       	pop	r18
 55c:	0f 90       	pop	r0
 55e:	0f be       	out	0x3f, r0	; 63
 560:	0f 90       	pop	r0
 562:	1f 90       	pop	r1
 564:	18 95       	reti

00000566 <__vector_24>:

ISR (PORTC_PORT_vect){
 566:	1f 92       	push	r1
 568:	0f 92       	push	r0
 56a:	0f b6       	in	r0, 0x3f	; 63
 56c:	0f 92       	push	r0
 56e:	11 24       	eor	r1, r1
 570:	2f 93       	push	r18
 572:	8f 93       	push	r24
 574:	9f 93       	push	r25
 576:	af 93       	push	r26
 578:	bf 93       	push	r27
 57a:	ef 93       	push	r30
 57c:	ff 93       	push	r31
 57e:	2a ed       	ldi	r18, 0xDA	; 218
 580:	2a 95       	dec	r18
 582:	f1 f7       	brne	.-4      	; 0x580 <__vector_24+0x1a>
 584:	00 c0       	rjmp	.+0      	; 0x586 <__vector_24+0x20>
	_delay_ms(20);
	PORTC_INTFLAGS |= PIN3_bm;
 586:	e9 e4       	ldi	r30, 0x49	; 73
 588:	f4 e0       	ldi	r31, 0x04	; 4
 58a:	80 81       	ld	r24, Z
 58c:	88 60       	ori	r24, 0x08	; 8
 58e:	80 83       	st	Z, r24
	//count++;
	//printf("%u\r", count);
	uint8_t aux = 0;
	uint8_t ant = 0;
	if(*(uint8_t*)(5247) == 0xFF){
 590:	80 91 7f 14 	lds	r24, 0x147F	; 0x80147f <__RODATA_PM_OFFSET__+0x7f947f>
 594:	8f 3f       	cpi	r24, 0xFF	; 255
 596:	09 f4       	brne	.+2      	; 0x59a <__vector_24+0x34>
 598:	52 c0       	rjmp	.+164    	; 0x63e <__vector_24+0xd8>
 59a:	e0 e0       	ldi	r30, 0x00	; 0
 59c:	f4 e1       	ldi	r31, 0x14	; 20
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	49 c0       	rjmp	.+146    	; 0x634 <__vector_24+0xce>
		;
	}
	else{
		for(int i = 5120; i <= 5246; i++){
			ant = aux;
			aux = *(uint8_t*)(i);
 5a2:	df 01       	movw	r26, r30
 5a4:	80 81       	ld	r24, Z
			if(aux == 0 && i == 5120){
 5a6:	81 11       	cpse	r24, r1
 5a8:	0d c0       	rjmp	.+26     	; 0x5c4 <__vector_24+0x5e>
 5aa:	e1 15       	cp	r30, r1
 5ac:	24 e1       	ldi	r18, 0x14	; 20
 5ae:	f2 07       	cpc	r31, r18
 5b0:	49 f4       	brne	.+18     	; 0x5c4 <__vector_24+0x5e>
				*(uint8_t*)(5120) = aux+1;
 5b2:	8f 5f       	subi	r24, 0xFF	; 255
 5b4:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__RODATA_PM_OFFSET__+0x7f9400>
				CPU_CCP = CCP_SPM_gc;
 5b8:	8d e9       	ldi	r24, 0x9D	; 157
 5ba:	84 bf       	out	0x34, r24	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
 5bc:	83 e0       	ldi	r24, 0x03	; 3
 5be:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
				break;
 5c2:	3d c0       	rjmp	.+122    	; 0x63e <__vector_24+0xd8>
			}
			if(aux < ant){
 5c4:	89 17       	cp	r24, r25
 5c6:	40 f4       	brcc	.+16     	; 0x5d8 <__vector_24+0x72>
				*(uint8_t*)(i) = aux+1;
 5c8:	8f 5f       	subi	r24, 0xFF	; 255
 5ca:	8c 93       	st	X, r24
				CPU_CCP = CCP_SPM_gc;
 5cc:	8d e9       	ldi	r24, 0x9D	; 157
 5ce:	84 bf       	out	0x34, r24	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
 5d0:	83 e0       	ldi	r24, 0x03	; 3
 5d2:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
				break;
 5d6:	33 c0       	rjmp	.+102    	; 0x63e <__vector_24+0xd8>
			}
			if(i == 5246 && aux == 0xFF){
 5d8:	ee 37       	cpi	r30, 0x7E	; 126
 5da:	24 e1       	ldi	r18, 0x14	; 20
 5dc:	f2 07       	cpc	r31, r18
 5de:	c9 f4       	brne	.+50     	; 0x612 <__vector_24+0xac>
 5e0:	8f 3f       	cpi	r24, 0xFF	; 255
 5e2:	b9 f4       	brne	.+46     	; 0x612 <__vector_24+0xac>
				*(uint8_t*)(5247) = *(uint8_t*)(5247)+1;
 5e4:	af e7       	ldi	r26, 0x7F	; 127
 5e6:	b4 e1       	ldi	r27, 0x14	; 20
 5e8:	2c 91       	ld	r18, X
 5ea:	2f 5f       	subi	r18, 0xFF	; 255
 5ec:	2c 93       	st	X, r18
				CPU_CCP = CCP_SPM_gc;
 5ee:	2d e9       	ldi	r18, 0x9D	; 157
 5f0:	24 bf       	out	0x34, r18	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
 5f2:	23 e0       	ldi	r18, 0x03	; 3
 5f4:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
				for(int i=5120; i<=5246; i++){
 5f8:	a0 e0       	ldi	r26, 0x00	; 0
 5fa:	b4 e1       	ldi	r27, 0x14	; 20
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <__vector_24+0xa4>
					*(uint8_t *)(i) = 0x00;
 5fe:	1d 92       	st	X+, r1
					CPU_CCP = CCP_SPM_gc;
 600:	2d e9       	ldi	r18, 0x9D	; 157
 602:	24 bf       	out	0x34, r18	; 52
					NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
 604:	23 e0       	ldi	r18, 0x03	; 3
 606:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
			}
			if(i == 5246 && aux == 0xFF){
				*(uint8_t*)(5247) = *(uint8_t*)(5247)+1;
				CPU_CCP = CCP_SPM_gc;
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
				for(int i=5120; i<=5246; i++){
 60a:	af 37       	cpi	r26, 0x7F	; 127
 60c:	24 e1       	ldi	r18, 0x14	; 20
 60e:	b2 07       	cpc	r27, r18
 610:	b4 f3       	brlt	.-20     	; 0x5fe <__vector_24+0x98>
					*(uint8_t *)(i) = 0x00;
					CPU_CCP = CCP_SPM_gc;
					NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
				}
			}
			if(i == 5246 && ant == aux){
 612:	ee 37       	cpi	r30, 0x7E	; 126
 614:	24 e1       	ldi	r18, 0x14	; 20
 616:	f2 07       	cpc	r31, r18
 618:	59 f4       	brne	.+22     	; 0x630 <__vector_24+0xca>
 61a:	98 13       	cpse	r25, r24
 61c:	09 c0       	rjmp	.+18     	; 0x630 <__vector_24+0xca>
				*(uint8_t*)(5120) = aux+1;
 61e:	91 e0       	ldi	r25, 0x01	; 1
 620:	98 0f       	add	r25, r24
 622:	90 93 00 14 	sts	0x1400, r25	; 0x801400 <__RODATA_PM_OFFSET__+0x7f9400>
				CPU_CCP = CCP_SPM_gc;
 626:	9d e9       	ldi	r25, 0x9D	; 157
 628:	94 bf       	out	0x34, r25	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
 62a:	93 e0       	ldi	r25, 0x03	; 3
 62c:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
	uint8_t ant = 0;
	if(*(uint8_t*)(5247) == 0xFF){
		;
	}
	else{
		for(int i = 5120; i <= 5246; i++){
 630:	31 96       	adiw	r30, 0x01	; 1
			ant = aux;
			aux = *(uint8_t*)(i);
 632:	98 2f       	mov	r25, r24
	uint8_t ant = 0;
	if(*(uint8_t*)(5247) == 0xFF){
		;
	}
	else{
		for(int i = 5120; i <= 5246; i++){
 634:	ef 37       	cpi	r30, 0x7F	; 127
 636:	84 e1       	ldi	r24, 0x14	; 20
 638:	f8 07       	cpc	r31, r24
 63a:	0c f4       	brge	.+2      	; 0x63e <__vector_24+0xd8>
 63c:	b2 cf       	rjmp	.-156    	; 0x5a2 <__vector_24+0x3c>
		help2 = help2 + 1;
		*(uint8_t *)(5247) = help2;
		CPU_CCP = CCP_SPM_gc;
		NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
	}*/
}
 63e:	ff 91       	pop	r31
 640:	ef 91       	pop	r30
 642:	bf 91       	pop	r27
 644:	af 91       	pop	r26
 646:	9f 91       	pop	r25
 648:	8f 91       	pop	r24
 64a:	2f 91       	pop	r18
 64c:	0f 90       	pop	r0
 64e:	0f be       	out	0x3f, r0	; 63
 650:	0f 90       	pop	r0
 652:	1f 90       	pop	r1
 654:	18 95       	reti

00000656 <__subsf3>:
 656:	50 58       	subi	r21, 0x80	; 128

00000658 <__addsf3>:
 658:	bb 27       	eor	r27, r27
 65a:	aa 27       	eor	r26, r26
 65c:	0e 94 43 03 	call	0x686	; 0x686 <__addsf3x>
 660:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_round>
 664:	0e 94 3d 04 	call	0x87a	; 0x87a <__fp_pscA>
 668:	38 f0       	brcs	.+14     	; 0x678 <__addsf3+0x20>
 66a:	0e 94 44 04 	call	0x888	; 0x888 <__fp_pscB>
 66e:	20 f0       	brcs	.+8      	; 0x678 <__addsf3+0x20>
 670:	39 f4       	brne	.+14     	; 0x680 <__addsf3+0x28>
 672:	9f 3f       	cpi	r25, 0xFF	; 255
 674:	19 f4       	brne	.+6      	; 0x67c <__addsf3+0x24>
 676:	26 f4       	brtc	.+8      	; 0x680 <__addsf3+0x28>
 678:	0c 94 3a 04 	jmp	0x874	; 0x874 <__fp_nan>
 67c:	0e f4       	brtc	.+2      	; 0x680 <__addsf3+0x28>
 67e:	e0 95       	com	r30
 680:	e7 fb       	bst	r30, 7
 682:	0c 94 34 04 	jmp	0x868	; 0x868 <__fp_inf>

00000686 <__addsf3x>:
 686:	e9 2f       	mov	r30, r25
 688:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fp_split3>
 68c:	58 f3       	brcs	.-42     	; 0x664 <__addsf3+0xc>
 68e:	ba 17       	cp	r27, r26
 690:	62 07       	cpc	r22, r18
 692:	73 07       	cpc	r23, r19
 694:	84 07       	cpc	r24, r20
 696:	95 07       	cpc	r25, r21
 698:	20 f0       	brcs	.+8      	; 0x6a2 <__addsf3x+0x1c>
 69a:	79 f4       	brne	.+30     	; 0x6ba <__addsf3x+0x34>
 69c:	a6 f5       	brtc	.+104    	; 0x706 <__addsf3x+0x80>
 69e:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_zero>
 6a2:	0e f4       	brtc	.+2      	; 0x6a6 <__addsf3x+0x20>
 6a4:	e0 95       	com	r30
 6a6:	0b 2e       	mov	r0, r27
 6a8:	ba 2f       	mov	r27, r26
 6aa:	a0 2d       	mov	r26, r0
 6ac:	0b 01       	movw	r0, r22
 6ae:	b9 01       	movw	r22, r18
 6b0:	90 01       	movw	r18, r0
 6b2:	0c 01       	movw	r0, r24
 6b4:	ca 01       	movw	r24, r20
 6b6:	a0 01       	movw	r20, r0
 6b8:	11 24       	eor	r1, r1
 6ba:	ff 27       	eor	r31, r31
 6bc:	59 1b       	sub	r21, r25
 6be:	99 f0       	breq	.+38     	; 0x6e6 <__addsf3x+0x60>
 6c0:	59 3f       	cpi	r21, 0xF9	; 249
 6c2:	50 f4       	brcc	.+20     	; 0x6d8 <__addsf3x+0x52>
 6c4:	50 3e       	cpi	r21, 0xE0	; 224
 6c6:	68 f1       	brcs	.+90     	; 0x722 <__addsf3x+0x9c>
 6c8:	1a 16       	cp	r1, r26
 6ca:	f0 40       	sbci	r31, 0x00	; 0
 6cc:	a2 2f       	mov	r26, r18
 6ce:	23 2f       	mov	r18, r19
 6d0:	34 2f       	mov	r19, r20
 6d2:	44 27       	eor	r20, r20
 6d4:	58 5f       	subi	r21, 0xF8	; 248
 6d6:	f3 cf       	rjmp	.-26     	; 0x6be <__addsf3x+0x38>
 6d8:	46 95       	lsr	r20
 6da:	37 95       	ror	r19
 6dc:	27 95       	ror	r18
 6de:	a7 95       	ror	r26
 6e0:	f0 40       	sbci	r31, 0x00	; 0
 6e2:	53 95       	inc	r21
 6e4:	c9 f7       	brne	.-14     	; 0x6d8 <__addsf3x+0x52>
 6e6:	7e f4       	brtc	.+30     	; 0x706 <__addsf3x+0x80>
 6e8:	1f 16       	cp	r1, r31
 6ea:	ba 0b       	sbc	r27, r26
 6ec:	62 0b       	sbc	r22, r18
 6ee:	73 0b       	sbc	r23, r19
 6f0:	84 0b       	sbc	r24, r20
 6f2:	ba f0       	brmi	.+46     	; 0x722 <__addsf3x+0x9c>
 6f4:	91 50       	subi	r25, 0x01	; 1
 6f6:	a1 f0       	breq	.+40     	; 0x720 <__addsf3x+0x9a>
 6f8:	ff 0f       	add	r31, r31
 6fa:	bb 1f       	adc	r27, r27
 6fc:	66 1f       	adc	r22, r22
 6fe:	77 1f       	adc	r23, r23
 700:	88 1f       	adc	r24, r24
 702:	c2 f7       	brpl	.-16     	; 0x6f4 <__addsf3x+0x6e>
 704:	0e c0       	rjmp	.+28     	; 0x722 <__addsf3x+0x9c>
 706:	ba 0f       	add	r27, r26
 708:	62 1f       	adc	r22, r18
 70a:	73 1f       	adc	r23, r19
 70c:	84 1f       	adc	r24, r20
 70e:	48 f4       	brcc	.+18     	; 0x722 <__addsf3x+0x9c>
 710:	87 95       	ror	r24
 712:	77 95       	ror	r23
 714:	67 95       	ror	r22
 716:	b7 95       	ror	r27
 718:	f7 95       	ror	r31
 71a:	9e 3f       	cpi	r25, 0xFE	; 254
 71c:	08 f0       	brcs	.+2      	; 0x720 <__addsf3x+0x9a>
 71e:	b0 cf       	rjmp	.-160    	; 0x680 <__addsf3+0x28>
 720:	93 95       	inc	r25
 722:	88 0f       	add	r24, r24
 724:	08 f0       	brcs	.+2      	; 0x728 <__addsf3x+0xa2>
 726:	99 27       	eor	r25, r25
 728:	ee 0f       	add	r30, r30
 72a:	97 95       	ror	r25
 72c:	87 95       	ror	r24
 72e:	08 95       	ret

00000730 <__cmpsf2>:
 730:	0e 94 10 04 	call	0x820	; 0x820 <__fp_cmp>
 734:	08 f4       	brcc	.+2      	; 0x738 <__cmpsf2+0x8>
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	08 95       	ret

0000073a <__fixsfsi>:
 73a:	0e 94 a4 03 	call	0x748	; 0x748 <__fixunssfsi>
 73e:	68 94       	set
 740:	b1 11       	cpse	r27, r1
 742:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <__fp_szero>
 746:	08 95       	ret

00000748 <__fixunssfsi>:
 748:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__fp_splitA>
 74c:	88 f0       	brcs	.+34     	; 0x770 <__fixunssfsi+0x28>
 74e:	9f 57       	subi	r25, 0x7F	; 127
 750:	98 f0       	brcs	.+38     	; 0x778 <__fixunssfsi+0x30>
 752:	b9 2f       	mov	r27, r25
 754:	99 27       	eor	r25, r25
 756:	b7 51       	subi	r27, 0x17	; 23
 758:	b0 f0       	brcs	.+44     	; 0x786 <__fixunssfsi+0x3e>
 75a:	e1 f0       	breq	.+56     	; 0x794 <__fixunssfsi+0x4c>
 75c:	66 0f       	add	r22, r22
 75e:	77 1f       	adc	r23, r23
 760:	88 1f       	adc	r24, r24
 762:	99 1f       	adc	r25, r25
 764:	1a f0       	brmi	.+6      	; 0x76c <__fixunssfsi+0x24>
 766:	ba 95       	dec	r27
 768:	c9 f7       	brne	.-14     	; 0x75c <__fixunssfsi+0x14>
 76a:	14 c0       	rjmp	.+40     	; 0x794 <__fixunssfsi+0x4c>
 76c:	b1 30       	cpi	r27, 0x01	; 1
 76e:	91 f0       	breq	.+36     	; 0x794 <__fixunssfsi+0x4c>
 770:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_zero>
 774:	b1 e0       	ldi	r27, 0x01	; 1
 776:	08 95       	ret
 778:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_zero>
 77c:	67 2f       	mov	r22, r23
 77e:	78 2f       	mov	r23, r24
 780:	88 27       	eor	r24, r24
 782:	b8 5f       	subi	r27, 0xF8	; 248
 784:	39 f0       	breq	.+14     	; 0x794 <__fixunssfsi+0x4c>
 786:	b9 3f       	cpi	r27, 0xF9	; 249
 788:	cc f3       	brlt	.-14     	; 0x77c <__fixunssfsi+0x34>
 78a:	86 95       	lsr	r24
 78c:	77 95       	ror	r23
 78e:	67 95       	ror	r22
 790:	b3 95       	inc	r27
 792:	d9 f7       	brne	.-10     	; 0x78a <__fixunssfsi+0x42>
 794:	3e f4       	brtc	.+14     	; 0x7a4 <__fixunssfsi+0x5c>
 796:	90 95       	com	r25
 798:	80 95       	com	r24
 79a:	70 95       	com	r23
 79c:	61 95       	neg	r22
 79e:	7f 4f       	sbci	r23, 0xFF	; 255
 7a0:	8f 4f       	sbci	r24, 0xFF	; 255
 7a2:	9f 4f       	sbci	r25, 0xFF	; 255
 7a4:	08 95       	ret

000007a6 <__floatunsisf>:
 7a6:	e8 94       	clt
 7a8:	09 c0       	rjmp	.+18     	; 0x7bc <__floatsisf+0x12>

000007aa <__floatsisf>:
 7aa:	97 fb       	bst	r25, 7
 7ac:	3e f4       	brtc	.+14     	; 0x7bc <__floatsisf+0x12>
 7ae:	90 95       	com	r25
 7b0:	80 95       	com	r24
 7b2:	70 95       	com	r23
 7b4:	61 95       	neg	r22
 7b6:	7f 4f       	sbci	r23, 0xFF	; 255
 7b8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ba:	9f 4f       	sbci	r25, 0xFF	; 255
 7bc:	99 23       	and	r25, r25
 7be:	a9 f0       	breq	.+42     	; 0x7ea <__floatsisf+0x40>
 7c0:	f9 2f       	mov	r31, r25
 7c2:	96 e9       	ldi	r25, 0x96	; 150
 7c4:	bb 27       	eor	r27, r27
 7c6:	93 95       	inc	r25
 7c8:	f6 95       	lsr	r31
 7ca:	87 95       	ror	r24
 7cc:	77 95       	ror	r23
 7ce:	67 95       	ror	r22
 7d0:	b7 95       	ror	r27
 7d2:	f1 11       	cpse	r31, r1
 7d4:	f8 cf       	rjmp	.-16     	; 0x7c6 <__floatsisf+0x1c>
 7d6:	fa f4       	brpl	.+62     	; 0x816 <__floatsisf+0x6c>
 7d8:	bb 0f       	add	r27, r27
 7da:	11 f4       	brne	.+4      	; 0x7e0 <__floatsisf+0x36>
 7dc:	60 ff       	sbrs	r22, 0
 7de:	1b c0       	rjmp	.+54     	; 0x816 <__floatsisf+0x6c>
 7e0:	6f 5f       	subi	r22, 0xFF	; 255
 7e2:	7f 4f       	sbci	r23, 0xFF	; 255
 7e4:	8f 4f       	sbci	r24, 0xFF	; 255
 7e6:	9f 4f       	sbci	r25, 0xFF	; 255
 7e8:	16 c0       	rjmp	.+44     	; 0x816 <__floatsisf+0x6c>
 7ea:	88 23       	and	r24, r24
 7ec:	11 f0       	breq	.+4      	; 0x7f2 <__floatsisf+0x48>
 7ee:	96 e9       	ldi	r25, 0x96	; 150
 7f0:	11 c0       	rjmp	.+34     	; 0x814 <__floatsisf+0x6a>
 7f2:	77 23       	and	r23, r23
 7f4:	21 f0       	breq	.+8      	; 0x7fe <__floatsisf+0x54>
 7f6:	9e e8       	ldi	r25, 0x8E	; 142
 7f8:	87 2f       	mov	r24, r23
 7fa:	76 2f       	mov	r23, r22
 7fc:	05 c0       	rjmp	.+10     	; 0x808 <__floatsisf+0x5e>
 7fe:	66 23       	and	r22, r22
 800:	71 f0       	breq	.+28     	; 0x81e <__floatsisf+0x74>
 802:	96 e8       	ldi	r25, 0x86	; 134
 804:	86 2f       	mov	r24, r22
 806:	70 e0       	ldi	r23, 0x00	; 0
 808:	60 e0       	ldi	r22, 0x00	; 0
 80a:	2a f0       	brmi	.+10     	; 0x816 <__floatsisf+0x6c>
 80c:	9a 95       	dec	r25
 80e:	66 0f       	add	r22, r22
 810:	77 1f       	adc	r23, r23
 812:	88 1f       	adc	r24, r24
 814:	da f7       	brpl	.-10     	; 0x80c <__floatsisf+0x62>
 816:	88 0f       	add	r24, r24
 818:	96 95       	lsr	r25
 81a:	87 95       	ror	r24
 81c:	97 f9       	bld	r25, 7
 81e:	08 95       	ret

00000820 <__fp_cmp>:
 820:	99 0f       	add	r25, r25
 822:	00 08       	sbc	r0, r0
 824:	55 0f       	add	r21, r21
 826:	aa 0b       	sbc	r26, r26
 828:	e0 e8       	ldi	r30, 0x80	; 128
 82a:	fe ef       	ldi	r31, 0xFE	; 254
 82c:	16 16       	cp	r1, r22
 82e:	17 06       	cpc	r1, r23
 830:	e8 07       	cpc	r30, r24
 832:	f9 07       	cpc	r31, r25
 834:	c0 f0       	brcs	.+48     	; 0x866 <__fp_cmp+0x46>
 836:	12 16       	cp	r1, r18
 838:	13 06       	cpc	r1, r19
 83a:	e4 07       	cpc	r30, r20
 83c:	f5 07       	cpc	r31, r21
 83e:	98 f0       	brcs	.+38     	; 0x866 <__fp_cmp+0x46>
 840:	62 1b       	sub	r22, r18
 842:	73 0b       	sbc	r23, r19
 844:	84 0b       	sbc	r24, r20
 846:	95 0b       	sbc	r25, r21
 848:	39 f4       	brne	.+14     	; 0x858 <__fp_cmp+0x38>
 84a:	0a 26       	eor	r0, r26
 84c:	61 f0       	breq	.+24     	; 0x866 <__fp_cmp+0x46>
 84e:	23 2b       	or	r18, r19
 850:	24 2b       	or	r18, r20
 852:	25 2b       	or	r18, r21
 854:	21 f4       	brne	.+8      	; 0x85e <__fp_cmp+0x3e>
 856:	08 95       	ret
 858:	0a 26       	eor	r0, r26
 85a:	09 f4       	brne	.+2      	; 0x85e <__fp_cmp+0x3e>
 85c:	a1 40       	sbci	r26, 0x01	; 1
 85e:	a6 95       	lsr	r26
 860:	8f ef       	ldi	r24, 0xFF	; 255
 862:	81 1d       	adc	r24, r1
 864:	81 1d       	adc	r24, r1
 866:	08 95       	ret

00000868 <__fp_inf>:
 868:	97 f9       	bld	r25, 7
 86a:	9f 67       	ori	r25, 0x7F	; 127
 86c:	80 e8       	ldi	r24, 0x80	; 128
 86e:	70 e0       	ldi	r23, 0x00	; 0
 870:	60 e0       	ldi	r22, 0x00	; 0
 872:	08 95       	ret

00000874 <__fp_nan>:
 874:	9f ef       	ldi	r25, 0xFF	; 255
 876:	80 ec       	ldi	r24, 0xC0	; 192
 878:	08 95       	ret

0000087a <__fp_pscA>:
 87a:	00 24       	eor	r0, r0
 87c:	0a 94       	dec	r0
 87e:	16 16       	cp	r1, r22
 880:	17 06       	cpc	r1, r23
 882:	18 06       	cpc	r1, r24
 884:	09 06       	cpc	r0, r25
 886:	08 95       	ret

00000888 <__fp_pscB>:
 888:	00 24       	eor	r0, r0
 88a:	0a 94       	dec	r0
 88c:	12 16       	cp	r1, r18
 88e:	13 06       	cpc	r1, r19
 890:	14 06       	cpc	r1, r20
 892:	05 06       	cpc	r0, r21
 894:	08 95       	ret

00000896 <__fp_round>:
 896:	09 2e       	mov	r0, r25
 898:	03 94       	inc	r0
 89a:	00 0c       	add	r0, r0
 89c:	11 f4       	brne	.+4      	; 0x8a2 <__fp_round+0xc>
 89e:	88 23       	and	r24, r24
 8a0:	52 f0       	brmi	.+20     	; 0x8b6 <__fp_round+0x20>
 8a2:	bb 0f       	add	r27, r27
 8a4:	40 f4       	brcc	.+16     	; 0x8b6 <__fp_round+0x20>
 8a6:	bf 2b       	or	r27, r31
 8a8:	11 f4       	brne	.+4      	; 0x8ae <__fp_round+0x18>
 8aa:	60 ff       	sbrs	r22, 0
 8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__fp_round+0x20>
 8ae:	6f 5f       	subi	r22, 0xFF	; 255
 8b0:	7f 4f       	sbci	r23, 0xFF	; 255
 8b2:	8f 4f       	sbci	r24, 0xFF	; 255
 8b4:	9f 4f       	sbci	r25, 0xFF	; 255
 8b6:	08 95       	ret

000008b8 <__fp_split3>:
 8b8:	57 fd       	sbrc	r21, 7
 8ba:	90 58       	subi	r25, 0x80	; 128
 8bc:	44 0f       	add	r20, r20
 8be:	55 1f       	adc	r21, r21
 8c0:	59 f0       	breq	.+22     	; 0x8d8 <__fp_splitA+0x10>
 8c2:	5f 3f       	cpi	r21, 0xFF	; 255
 8c4:	71 f0       	breq	.+28     	; 0x8e2 <__fp_splitA+0x1a>
 8c6:	47 95       	ror	r20

000008c8 <__fp_splitA>:
 8c8:	88 0f       	add	r24, r24
 8ca:	97 fb       	bst	r25, 7
 8cc:	99 1f       	adc	r25, r25
 8ce:	61 f0       	breq	.+24     	; 0x8e8 <__fp_splitA+0x20>
 8d0:	9f 3f       	cpi	r25, 0xFF	; 255
 8d2:	79 f0       	breq	.+30     	; 0x8f2 <__fp_splitA+0x2a>
 8d4:	87 95       	ror	r24
 8d6:	08 95       	ret
 8d8:	12 16       	cp	r1, r18
 8da:	13 06       	cpc	r1, r19
 8dc:	14 06       	cpc	r1, r20
 8de:	55 1f       	adc	r21, r21
 8e0:	f2 cf       	rjmp	.-28     	; 0x8c6 <__fp_split3+0xe>
 8e2:	46 95       	lsr	r20
 8e4:	f1 df       	rcall	.-30     	; 0x8c8 <__fp_splitA>
 8e6:	08 c0       	rjmp	.+16     	; 0x8f8 <__fp_splitA+0x30>
 8e8:	16 16       	cp	r1, r22
 8ea:	17 06       	cpc	r1, r23
 8ec:	18 06       	cpc	r1, r24
 8ee:	99 1f       	adc	r25, r25
 8f0:	f1 cf       	rjmp	.-30     	; 0x8d4 <__fp_splitA+0xc>
 8f2:	86 95       	lsr	r24
 8f4:	71 05       	cpc	r23, r1
 8f6:	61 05       	cpc	r22, r1
 8f8:	08 94       	sec
 8fa:	08 95       	ret

000008fc <__fp_zero>:
 8fc:	e8 94       	clt

000008fe <__fp_szero>:
 8fe:	bb 27       	eor	r27, r27
 900:	66 27       	eor	r22, r22
 902:	77 27       	eor	r23, r23
 904:	cb 01       	movw	r24, r22
 906:	97 f9       	bld	r25, 7
 908:	08 95       	ret

0000090a <__mulsf3>:
 90a:	0e 94 98 04 	call	0x930	; 0x930 <__mulsf3x>
 90e:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_round>
 912:	0e 94 3d 04 	call	0x87a	; 0x87a <__fp_pscA>
 916:	38 f0       	brcs	.+14     	; 0x926 <__mulsf3+0x1c>
 918:	0e 94 44 04 	call	0x888	; 0x888 <__fp_pscB>
 91c:	20 f0       	brcs	.+8      	; 0x926 <__mulsf3+0x1c>
 91e:	95 23       	and	r25, r21
 920:	11 f0       	breq	.+4      	; 0x926 <__mulsf3+0x1c>
 922:	0c 94 34 04 	jmp	0x868	; 0x868 <__fp_inf>
 926:	0c 94 3a 04 	jmp	0x874	; 0x874 <__fp_nan>
 92a:	11 24       	eor	r1, r1
 92c:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <__fp_szero>

00000930 <__mulsf3x>:
 930:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fp_split3>
 934:	70 f3       	brcs	.-36     	; 0x912 <__mulsf3+0x8>

00000936 <__mulsf3_pse>:
 936:	95 9f       	mul	r25, r21
 938:	c1 f3       	breq	.-16     	; 0x92a <__mulsf3+0x20>
 93a:	95 0f       	add	r25, r21
 93c:	50 e0       	ldi	r21, 0x00	; 0
 93e:	55 1f       	adc	r21, r21
 940:	62 9f       	mul	r22, r18
 942:	f0 01       	movw	r30, r0
 944:	72 9f       	mul	r23, r18
 946:	bb 27       	eor	r27, r27
 948:	f0 0d       	add	r31, r0
 94a:	b1 1d       	adc	r27, r1
 94c:	63 9f       	mul	r22, r19
 94e:	aa 27       	eor	r26, r26
 950:	f0 0d       	add	r31, r0
 952:	b1 1d       	adc	r27, r1
 954:	aa 1f       	adc	r26, r26
 956:	64 9f       	mul	r22, r20
 958:	66 27       	eor	r22, r22
 95a:	b0 0d       	add	r27, r0
 95c:	a1 1d       	adc	r26, r1
 95e:	66 1f       	adc	r22, r22
 960:	82 9f       	mul	r24, r18
 962:	22 27       	eor	r18, r18
 964:	b0 0d       	add	r27, r0
 966:	a1 1d       	adc	r26, r1
 968:	62 1f       	adc	r22, r18
 96a:	73 9f       	mul	r23, r19
 96c:	b0 0d       	add	r27, r0
 96e:	a1 1d       	adc	r26, r1
 970:	62 1f       	adc	r22, r18
 972:	83 9f       	mul	r24, r19
 974:	a0 0d       	add	r26, r0
 976:	61 1d       	adc	r22, r1
 978:	22 1f       	adc	r18, r18
 97a:	74 9f       	mul	r23, r20
 97c:	33 27       	eor	r19, r19
 97e:	a0 0d       	add	r26, r0
 980:	61 1d       	adc	r22, r1
 982:	23 1f       	adc	r18, r19
 984:	84 9f       	mul	r24, r20
 986:	60 0d       	add	r22, r0
 988:	21 1d       	adc	r18, r1
 98a:	82 2f       	mov	r24, r18
 98c:	76 2f       	mov	r23, r22
 98e:	6a 2f       	mov	r22, r26
 990:	11 24       	eor	r1, r1
 992:	9f 57       	subi	r25, 0x7F	; 127
 994:	50 40       	sbci	r21, 0x00	; 0
 996:	9a f0       	brmi	.+38     	; 0x9be <__mulsf3_pse+0x88>
 998:	f1 f0       	breq	.+60     	; 0x9d6 <__mulsf3_pse+0xa0>
 99a:	88 23       	and	r24, r24
 99c:	4a f0       	brmi	.+18     	; 0x9b0 <__mulsf3_pse+0x7a>
 99e:	ee 0f       	add	r30, r30
 9a0:	ff 1f       	adc	r31, r31
 9a2:	bb 1f       	adc	r27, r27
 9a4:	66 1f       	adc	r22, r22
 9a6:	77 1f       	adc	r23, r23
 9a8:	88 1f       	adc	r24, r24
 9aa:	91 50       	subi	r25, 0x01	; 1
 9ac:	50 40       	sbci	r21, 0x00	; 0
 9ae:	a9 f7       	brne	.-22     	; 0x99a <__mulsf3_pse+0x64>
 9b0:	9e 3f       	cpi	r25, 0xFE	; 254
 9b2:	51 05       	cpc	r21, r1
 9b4:	80 f0       	brcs	.+32     	; 0x9d6 <__mulsf3_pse+0xa0>
 9b6:	0c 94 34 04 	jmp	0x868	; 0x868 <__fp_inf>
 9ba:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <__fp_szero>
 9be:	5f 3f       	cpi	r21, 0xFF	; 255
 9c0:	e4 f3       	brlt	.-8      	; 0x9ba <__mulsf3_pse+0x84>
 9c2:	98 3e       	cpi	r25, 0xE8	; 232
 9c4:	d4 f3       	brlt	.-12     	; 0x9ba <__mulsf3_pse+0x84>
 9c6:	86 95       	lsr	r24
 9c8:	77 95       	ror	r23
 9ca:	67 95       	ror	r22
 9cc:	b7 95       	ror	r27
 9ce:	f7 95       	ror	r31
 9d0:	e7 95       	ror	r30
 9d2:	9f 5f       	subi	r25, 0xFF	; 255
 9d4:	c1 f7       	brne	.-16     	; 0x9c6 <__mulsf3_pse+0x90>
 9d6:	fe 2b       	or	r31, r30
 9d8:	88 0f       	add	r24, r24
 9da:	91 1d       	adc	r25, r1
 9dc:	96 95       	lsr	r25
 9de:	87 95       	ror	r24
 9e0:	97 f9       	bld	r25, 7
 9e2:	08 95       	ret

000009e4 <__umulhisi3>:
 9e4:	a2 9f       	mul	r26, r18
 9e6:	b0 01       	movw	r22, r0
 9e8:	b3 9f       	mul	r27, r19
 9ea:	c0 01       	movw	r24, r0
 9ec:	a3 9f       	mul	r26, r19
 9ee:	01 d0       	rcall	.+2      	; 0x9f2 <__umulhisi3+0xe>
 9f0:	b2 9f       	mul	r27, r18
 9f2:	70 0d       	add	r23, r0
 9f4:	81 1d       	adc	r24, r1
 9f6:	11 24       	eor	r1, r1
 9f8:	91 1d       	adc	r25, r1
 9fa:	08 95       	ret

000009fc <strcmp>:
 9fc:	fb 01       	movw	r30, r22
 9fe:	dc 01       	movw	r26, r24
 a00:	8d 91       	ld	r24, X+
 a02:	01 90       	ld	r0, Z+
 a04:	80 19       	sub	r24, r0
 a06:	01 10       	cpse	r0, r1
 a08:	d9 f3       	breq	.-10     	; 0xa00 <strcmp+0x4>
 a0a:	99 0b       	sbc	r25, r25
 a0c:	08 95       	ret

00000a0e <printf>:
 a0e:	a0 e0       	ldi	r26, 0x00	; 0
 a10:	b0 e0       	ldi	r27, 0x00	; 0
 a12:	ec e0       	ldi	r30, 0x0C	; 12
 a14:	f5 e0       	ldi	r31, 0x05	; 5
 a16:	a0 c2       	rjmp	.+1344   	; 0xf58 <__prologue_saves__+0x20>
 a18:	ae 01       	movw	r20, r28
 a1a:	4b 5f       	subi	r20, 0xFB	; 251
 a1c:	5f 4f       	sbci	r21, 0xFF	; 255
 a1e:	fa 01       	movw	r30, r20
 a20:	61 91       	ld	r22, Z+
 a22:	71 91       	ld	r23, Z+
 a24:	af 01       	movw	r20, r30
 a26:	80 91 1a 3e 	lds	r24, 0x3E1A	; 0x803e1a <__iob+0x2>
 a2a:	90 91 1b 3e 	lds	r25, 0x3E1B	; 0x803e1b <__iob+0x3>
 a2e:	02 d0       	rcall	.+4      	; 0xa34 <vfprintf>
 a30:	e2 e0       	ldi	r30, 0x02	; 2
 a32:	ab c2       	rjmp	.+1366   	; 0xf8a <__epilogue_restores__+0x20>

00000a34 <vfprintf>:
 a34:	ab e0       	ldi	r26, 0x0B	; 11
 a36:	b0 e0       	ldi	r27, 0x00	; 0
 a38:	ef e1       	ldi	r30, 0x1F	; 31
 a3a:	f5 e0       	ldi	r31, 0x05	; 5
 a3c:	7d c2       	rjmp	.+1274   	; 0xf38 <__prologue_saves__>
 a3e:	6c 01       	movw	r12, r24
 a40:	7b 01       	movw	r14, r22
 a42:	8a 01       	movw	r16, r20
 a44:	fc 01       	movw	r30, r24
 a46:	16 82       	std	Z+6, r1	; 0x06
 a48:	17 82       	std	Z+7, r1	; 0x07
 a4a:	83 81       	ldd	r24, Z+3	; 0x03
 a4c:	81 ff       	sbrs	r24, 1
 a4e:	bf c1       	rjmp	.+894    	; 0xdce <vfprintf+0x39a>
 a50:	ce 01       	movw	r24, r28
 a52:	01 96       	adiw	r24, 0x01	; 1
 a54:	3c 01       	movw	r6, r24
 a56:	f6 01       	movw	r30, r12
 a58:	93 81       	ldd	r25, Z+3	; 0x03
 a5a:	f7 01       	movw	r30, r14
 a5c:	93 fd       	sbrc	r25, 3
 a5e:	85 91       	lpm	r24, Z+
 a60:	93 ff       	sbrs	r25, 3
 a62:	81 91       	ld	r24, Z+
 a64:	7f 01       	movw	r14, r30
 a66:	88 23       	and	r24, r24
 a68:	09 f4       	brne	.+2      	; 0xa6c <vfprintf+0x38>
 a6a:	ad c1       	rjmp	.+858    	; 0xdc6 <vfprintf+0x392>
 a6c:	85 32       	cpi	r24, 0x25	; 37
 a6e:	39 f4       	brne	.+14     	; 0xa7e <vfprintf+0x4a>
 a70:	93 fd       	sbrc	r25, 3
 a72:	85 91       	lpm	r24, Z+
 a74:	93 ff       	sbrs	r25, 3
 a76:	81 91       	ld	r24, Z+
 a78:	7f 01       	movw	r14, r30
 a7a:	85 32       	cpi	r24, 0x25	; 37
 a7c:	21 f4       	brne	.+8      	; 0xa86 <vfprintf+0x52>
 a7e:	b6 01       	movw	r22, r12
 a80:	90 e0       	ldi	r25, 0x00	; 0
 a82:	c0 d1       	rcall	.+896    	; 0xe04 <fputc>
 a84:	e8 cf       	rjmp	.-48     	; 0xa56 <vfprintf+0x22>
 a86:	91 2c       	mov	r9, r1
 a88:	21 2c       	mov	r2, r1
 a8a:	31 2c       	mov	r3, r1
 a8c:	ff e1       	ldi	r31, 0x1F	; 31
 a8e:	f3 15       	cp	r31, r3
 a90:	d8 f0       	brcs	.+54     	; 0xac8 <vfprintf+0x94>
 a92:	8b 32       	cpi	r24, 0x2B	; 43
 a94:	79 f0       	breq	.+30     	; 0xab4 <vfprintf+0x80>
 a96:	38 f4       	brcc	.+14     	; 0xaa6 <vfprintf+0x72>
 a98:	80 32       	cpi	r24, 0x20	; 32
 a9a:	79 f0       	breq	.+30     	; 0xaba <vfprintf+0x86>
 a9c:	83 32       	cpi	r24, 0x23	; 35
 a9e:	a1 f4       	brne	.+40     	; 0xac8 <vfprintf+0x94>
 aa0:	23 2d       	mov	r18, r3
 aa2:	20 61       	ori	r18, 0x10	; 16
 aa4:	1d c0       	rjmp	.+58     	; 0xae0 <vfprintf+0xac>
 aa6:	8d 32       	cpi	r24, 0x2D	; 45
 aa8:	61 f0       	breq	.+24     	; 0xac2 <vfprintf+0x8e>
 aaa:	80 33       	cpi	r24, 0x30	; 48
 aac:	69 f4       	brne	.+26     	; 0xac8 <vfprintf+0x94>
 aae:	23 2d       	mov	r18, r3
 ab0:	21 60       	ori	r18, 0x01	; 1
 ab2:	16 c0       	rjmp	.+44     	; 0xae0 <vfprintf+0xac>
 ab4:	83 2d       	mov	r24, r3
 ab6:	82 60       	ori	r24, 0x02	; 2
 ab8:	38 2e       	mov	r3, r24
 aba:	e3 2d       	mov	r30, r3
 abc:	e4 60       	ori	r30, 0x04	; 4
 abe:	3e 2e       	mov	r3, r30
 ac0:	2a c0       	rjmp	.+84     	; 0xb16 <vfprintf+0xe2>
 ac2:	f3 2d       	mov	r31, r3
 ac4:	f8 60       	ori	r31, 0x08	; 8
 ac6:	1d c0       	rjmp	.+58     	; 0xb02 <vfprintf+0xce>
 ac8:	37 fc       	sbrc	r3, 7
 aca:	2d c0       	rjmp	.+90     	; 0xb26 <vfprintf+0xf2>
 acc:	20 ed       	ldi	r18, 0xD0	; 208
 ace:	28 0f       	add	r18, r24
 ad0:	2a 30       	cpi	r18, 0x0A	; 10
 ad2:	40 f0       	brcs	.+16     	; 0xae4 <vfprintf+0xb0>
 ad4:	8e 32       	cpi	r24, 0x2E	; 46
 ad6:	b9 f4       	brne	.+46     	; 0xb06 <vfprintf+0xd2>
 ad8:	36 fc       	sbrc	r3, 6
 ada:	75 c1       	rjmp	.+746    	; 0xdc6 <vfprintf+0x392>
 adc:	23 2d       	mov	r18, r3
 ade:	20 64       	ori	r18, 0x40	; 64
 ae0:	32 2e       	mov	r3, r18
 ae2:	19 c0       	rjmp	.+50     	; 0xb16 <vfprintf+0xe2>
 ae4:	36 fe       	sbrs	r3, 6
 ae6:	06 c0       	rjmp	.+12     	; 0xaf4 <vfprintf+0xc0>
 ae8:	8a e0       	ldi	r24, 0x0A	; 10
 aea:	98 9e       	mul	r9, r24
 aec:	20 0d       	add	r18, r0
 aee:	11 24       	eor	r1, r1
 af0:	92 2e       	mov	r9, r18
 af2:	11 c0       	rjmp	.+34     	; 0xb16 <vfprintf+0xe2>
 af4:	ea e0       	ldi	r30, 0x0A	; 10
 af6:	2e 9e       	mul	r2, r30
 af8:	20 0d       	add	r18, r0
 afa:	11 24       	eor	r1, r1
 afc:	22 2e       	mov	r2, r18
 afe:	f3 2d       	mov	r31, r3
 b00:	f0 62       	ori	r31, 0x20	; 32
 b02:	3f 2e       	mov	r3, r31
 b04:	08 c0       	rjmp	.+16     	; 0xb16 <vfprintf+0xe2>
 b06:	8c 36       	cpi	r24, 0x6C	; 108
 b08:	21 f4       	brne	.+8      	; 0xb12 <vfprintf+0xde>
 b0a:	83 2d       	mov	r24, r3
 b0c:	80 68       	ori	r24, 0x80	; 128
 b0e:	38 2e       	mov	r3, r24
 b10:	02 c0       	rjmp	.+4      	; 0xb16 <vfprintf+0xe2>
 b12:	88 36       	cpi	r24, 0x68	; 104
 b14:	41 f4       	brne	.+16     	; 0xb26 <vfprintf+0xf2>
 b16:	f7 01       	movw	r30, r14
 b18:	93 fd       	sbrc	r25, 3
 b1a:	85 91       	lpm	r24, Z+
 b1c:	93 ff       	sbrs	r25, 3
 b1e:	81 91       	ld	r24, Z+
 b20:	7f 01       	movw	r14, r30
 b22:	81 11       	cpse	r24, r1
 b24:	b3 cf       	rjmp	.-154    	; 0xa8c <vfprintf+0x58>
 b26:	98 2f       	mov	r25, r24
 b28:	9f 7d       	andi	r25, 0xDF	; 223
 b2a:	95 54       	subi	r25, 0x45	; 69
 b2c:	93 30       	cpi	r25, 0x03	; 3
 b2e:	28 f4       	brcc	.+10     	; 0xb3a <vfprintf+0x106>
 b30:	0c 5f       	subi	r16, 0xFC	; 252
 b32:	1f 4f       	sbci	r17, 0xFF	; 255
 b34:	9f e3       	ldi	r25, 0x3F	; 63
 b36:	99 83       	std	Y+1, r25	; 0x01
 b38:	0d c0       	rjmp	.+26     	; 0xb54 <vfprintf+0x120>
 b3a:	83 36       	cpi	r24, 0x63	; 99
 b3c:	31 f0       	breq	.+12     	; 0xb4a <vfprintf+0x116>
 b3e:	83 37       	cpi	r24, 0x73	; 115
 b40:	71 f0       	breq	.+28     	; 0xb5e <vfprintf+0x12a>
 b42:	83 35       	cpi	r24, 0x53	; 83
 b44:	09 f0       	breq	.+2      	; 0xb48 <vfprintf+0x114>
 b46:	55 c0       	rjmp	.+170    	; 0xbf2 <vfprintf+0x1be>
 b48:	20 c0       	rjmp	.+64     	; 0xb8a <vfprintf+0x156>
 b4a:	f8 01       	movw	r30, r16
 b4c:	80 81       	ld	r24, Z
 b4e:	89 83       	std	Y+1, r24	; 0x01
 b50:	0e 5f       	subi	r16, 0xFE	; 254
 b52:	1f 4f       	sbci	r17, 0xFF	; 255
 b54:	88 24       	eor	r8, r8
 b56:	83 94       	inc	r8
 b58:	91 2c       	mov	r9, r1
 b5a:	53 01       	movw	r10, r6
 b5c:	12 c0       	rjmp	.+36     	; 0xb82 <vfprintf+0x14e>
 b5e:	28 01       	movw	r4, r16
 b60:	f2 e0       	ldi	r31, 0x02	; 2
 b62:	4f 0e       	add	r4, r31
 b64:	51 1c       	adc	r5, r1
 b66:	f8 01       	movw	r30, r16
 b68:	a0 80       	ld	r10, Z
 b6a:	b1 80       	ldd	r11, Z+1	; 0x01
 b6c:	36 fe       	sbrs	r3, 6
 b6e:	03 c0       	rjmp	.+6      	; 0xb76 <vfprintf+0x142>
 b70:	69 2d       	mov	r22, r9
 b72:	70 e0       	ldi	r23, 0x00	; 0
 b74:	02 c0       	rjmp	.+4      	; 0xb7a <vfprintf+0x146>
 b76:	6f ef       	ldi	r22, 0xFF	; 255
 b78:	7f ef       	ldi	r23, 0xFF	; 255
 b7a:	c5 01       	movw	r24, r10
 b7c:	38 d1       	rcall	.+624    	; 0xdee <strnlen>
 b7e:	4c 01       	movw	r8, r24
 b80:	82 01       	movw	r16, r4
 b82:	f3 2d       	mov	r31, r3
 b84:	ff 77       	andi	r31, 0x7F	; 127
 b86:	3f 2e       	mov	r3, r31
 b88:	15 c0       	rjmp	.+42     	; 0xbb4 <vfprintf+0x180>
 b8a:	28 01       	movw	r4, r16
 b8c:	22 e0       	ldi	r18, 0x02	; 2
 b8e:	42 0e       	add	r4, r18
 b90:	51 1c       	adc	r5, r1
 b92:	f8 01       	movw	r30, r16
 b94:	a0 80       	ld	r10, Z
 b96:	b1 80       	ldd	r11, Z+1	; 0x01
 b98:	36 fe       	sbrs	r3, 6
 b9a:	03 c0       	rjmp	.+6      	; 0xba2 <vfprintf+0x16e>
 b9c:	69 2d       	mov	r22, r9
 b9e:	70 e0       	ldi	r23, 0x00	; 0
 ba0:	02 c0       	rjmp	.+4      	; 0xba6 <vfprintf+0x172>
 ba2:	6f ef       	ldi	r22, 0xFF	; 255
 ba4:	7f ef       	ldi	r23, 0xFF	; 255
 ba6:	c5 01       	movw	r24, r10
 ba8:	17 d1       	rcall	.+558    	; 0xdd8 <strnlen_P>
 baa:	4c 01       	movw	r8, r24
 bac:	f3 2d       	mov	r31, r3
 bae:	f0 68       	ori	r31, 0x80	; 128
 bb0:	3f 2e       	mov	r3, r31
 bb2:	82 01       	movw	r16, r4
 bb4:	33 fc       	sbrc	r3, 3
 bb6:	19 c0       	rjmp	.+50     	; 0xbea <vfprintf+0x1b6>
 bb8:	82 2d       	mov	r24, r2
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	88 16       	cp	r8, r24
 bbe:	99 06       	cpc	r9, r25
 bc0:	a0 f4       	brcc	.+40     	; 0xbea <vfprintf+0x1b6>
 bc2:	b6 01       	movw	r22, r12
 bc4:	80 e2       	ldi	r24, 0x20	; 32
 bc6:	90 e0       	ldi	r25, 0x00	; 0
 bc8:	1d d1       	rcall	.+570    	; 0xe04 <fputc>
 bca:	2a 94       	dec	r2
 bcc:	f5 cf       	rjmp	.-22     	; 0xbb8 <vfprintf+0x184>
 bce:	f5 01       	movw	r30, r10
 bd0:	37 fc       	sbrc	r3, 7
 bd2:	85 91       	lpm	r24, Z+
 bd4:	37 fe       	sbrs	r3, 7
 bd6:	81 91       	ld	r24, Z+
 bd8:	5f 01       	movw	r10, r30
 bda:	b6 01       	movw	r22, r12
 bdc:	90 e0       	ldi	r25, 0x00	; 0
 bde:	12 d1       	rcall	.+548    	; 0xe04 <fputc>
 be0:	21 10       	cpse	r2, r1
 be2:	2a 94       	dec	r2
 be4:	21 e0       	ldi	r18, 0x01	; 1
 be6:	82 1a       	sub	r8, r18
 be8:	91 08       	sbc	r9, r1
 bea:	81 14       	cp	r8, r1
 bec:	91 04       	cpc	r9, r1
 bee:	79 f7       	brne	.-34     	; 0xbce <vfprintf+0x19a>
 bf0:	e1 c0       	rjmp	.+450    	; 0xdb4 <vfprintf+0x380>
 bf2:	84 36       	cpi	r24, 0x64	; 100
 bf4:	11 f0       	breq	.+4      	; 0xbfa <vfprintf+0x1c6>
 bf6:	89 36       	cpi	r24, 0x69	; 105
 bf8:	39 f5       	brne	.+78     	; 0xc48 <vfprintf+0x214>
 bfa:	f8 01       	movw	r30, r16
 bfc:	37 fe       	sbrs	r3, 7
 bfe:	07 c0       	rjmp	.+14     	; 0xc0e <vfprintf+0x1da>
 c00:	60 81       	ld	r22, Z
 c02:	71 81       	ldd	r23, Z+1	; 0x01
 c04:	82 81       	ldd	r24, Z+2	; 0x02
 c06:	93 81       	ldd	r25, Z+3	; 0x03
 c08:	0c 5f       	subi	r16, 0xFC	; 252
 c0a:	1f 4f       	sbci	r17, 0xFF	; 255
 c0c:	08 c0       	rjmp	.+16     	; 0xc1e <vfprintf+0x1ea>
 c0e:	60 81       	ld	r22, Z
 c10:	71 81       	ldd	r23, Z+1	; 0x01
 c12:	07 2e       	mov	r0, r23
 c14:	00 0c       	add	r0, r0
 c16:	88 0b       	sbc	r24, r24
 c18:	99 0b       	sbc	r25, r25
 c1a:	0e 5f       	subi	r16, 0xFE	; 254
 c1c:	1f 4f       	sbci	r17, 0xFF	; 255
 c1e:	f3 2d       	mov	r31, r3
 c20:	ff 76       	andi	r31, 0x6F	; 111
 c22:	3f 2e       	mov	r3, r31
 c24:	97 ff       	sbrs	r25, 7
 c26:	09 c0       	rjmp	.+18     	; 0xc3a <vfprintf+0x206>
 c28:	90 95       	com	r25
 c2a:	80 95       	com	r24
 c2c:	70 95       	com	r23
 c2e:	61 95       	neg	r22
 c30:	7f 4f       	sbci	r23, 0xFF	; 255
 c32:	8f 4f       	sbci	r24, 0xFF	; 255
 c34:	9f 4f       	sbci	r25, 0xFF	; 255
 c36:	f0 68       	ori	r31, 0x80	; 128
 c38:	3f 2e       	mov	r3, r31
 c3a:	2a e0       	ldi	r18, 0x0A	; 10
 c3c:	30 e0       	ldi	r19, 0x00	; 0
 c3e:	a3 01       	movw	r20, r6
 c40:	1d d1       	rcall	.+570    	; 0xe7c <__ultoa_invert>
 c42:	88 2e       	mov	r8, r24
 c44:	86 18       	sub	r8, r6
 c46:	44 c0       	rjmp	.+136    	; 0xcd0 <vfprintf+0x29c>
 c48:	85 37       	cpi	r24, 0x75	; 117
 c4a:	31 f4       	brne	.+12     	; 0xc58 <vfprintf+0x224>
 c4c:	23 2d       	mov	r18, r3
 c4e:	2f 7e       	andi	r18, 0xEF	; 239
 c50:	b2 2e       	mov	r11, r18
 c52:	2a e0       	ldi	r18, 0x0A	; 10
 c54:	30 e0       	ldi	r19, 0x00	; 0
 c56:	25 c0       	rjmp	.+74     	; 0xca2 <vfprintf+0x26e>
 c58:	93 2d       	mov	r25, r3
 c5a:	99 7f       	andi	r25, 0xF9	; 249
 c5c:	b9 2e       	mov	r11, r25
 c5e:	8f 36       	cpi	r24, 0x6F	; 111
 c60:	c1 f0       	breq	.+48     	; 0xc92 <vfprintf+0x25e>
 c62:	18 f4       	brcc	.+6      	; 0xc6a <vfprintf+0x236>
 c64:	88 35       	cpi	r24, 0x58	; 88
 c66:	79 f0       	breq	.+30     	; 0xc86 <vfprintf+0x252>
 c68:	ae c0       	rjmp	.+348    	; 0xdc6 <vfprintf+0x392>
 c6a:	80 37       	cpi	r24, 0x70	; 112
 c6c:	19 f0       	breq	.+6      	; 0xc74 <vfprintf+0x240>
 c6e:	88 37       	cpi	r24, 0x78	; 120
 c70:	21 f0       	breq	.+8      	; 0xc7a <vfprintf+0x246>
 c72:	a9 c0       	rjmp	.+338    	; 0xdc6 <vfprintf+0x392>
 c74:	e9 2f       	mov	r30, r25
 c76:	e0 61       	ori	r30, 0x10	; 16
 c78:	be 2e       	mov	r11, r30
 c7a:	b4 fe       	sbrs	r11, 4
 c7c:	0d c0       	rjmp	.+26     	; 0xc98 <vfprintf+0x264>
 c7e:	fb 2d       	mov	r31, r11
 c80:	f4 60       	ori	r31, 0x04	; 4
 c82:	bf 2e       	mov	r11, r31
 c84:	09 c0       	rjmp	.+18     	; 0xc98 <vfprintf+0x264>
 c86:	34 fe       	sbrs	r3, 4
 c88:	0a c0       	rjmp	.+20     	; 0xc9e <vfprintf+0x26a>
 c8a:	29 2f       	mov	r18, r25
 c8c:	26 60       	ori	r18, 0x06	; 6
 c8e:	b2 2e       	mov	r11, r18
 c90:	06 c0       	rjmp	.+12     	; 0xc9e <vfprintf+0x26a>
 c92:	28 e0       	ldi	r18, 0x08	; 8
 c94:	30 e0       	ldi	r19, 0x00	; 0
 c96:	05 c0       	rjmp	.+10     	; 0xca2 <vfprintf+0x26e>
 c98:	20 e1       	ldi	r18, 0x10	; 16
 c9a:	30 e0       	ldi	r19, 0x00	; 0
 c9c:	02 c0       	rjmp	.+4      	; 0xca2 <vfprintf+0x26e>
 c9e:	20 e1       	ldi	r18, 0x10	; 16
 ca0:	32 e0       	ldi	r19, 0x02	; 2
 ca2:	f8 01       	movw	r30, r16
 ca4:	b7 fe       	sbrs	r11, 7
 ca6:	07 c0       	rjmp	.+14     	; 0xcb6 <vfprintf+0x282>
 ca8:	60 81       	ld	r22, Z
 caa:	71 81       	ldd	r23, Z+1	; 0x01
 cac:	82 81       	ldd	r24, Z+2	; 0x02
 cae:	93 81       	ldd	r25, Z+3	; 0x03
 cb0:	0c 5f       	subi	r16, 0xFC	; 252
 cb2:	1f 4f       	sbci	r17, 0xFF	; 255
 cb4:	06 c0       	rjmp	.+12     	; 0xcc2 <vfprintf+0x28e>
 cb6:	60 81       	ld	r22, Z
 cb8:	71 81       	ldd	r23, Z+1	; 0x01
 cba:	80 e0       	ldi	r24, 0x00	; 0
 cbc:	90 e0       	ldi	r25, 0x00	; 0
 cbe:	0e 5f       	subi	r16, 0xFE	; 254
 cc0:	1f 4f       	sbci	r17, 0xFF	; 255
 cc2:	a3 01       	movw	r20, r6
 cc4:	db d0       	rcall	.+438    	; 0xe7c <__ultoa_invert>
 cc6:	88 2e       	mov	r8, r24
 cc8:	86 18       	sub	r8, r6
 cca:	fb 2d       	mov	r31, r11
 ccc:	ff 77       	andi	r31, 0x7F	; 127
 cce:	3f 2e       	mov	r3, r31
 cd0:	36 fe       	sbrs	r3, 6
 cd2:	0d c0       	rjmp	.+26     	; 0xcee <vfprintf+0x2ba>
 cd4:	23 2d       	mov	r18, r3
 cd6:	2e 7f       	andi	r18, 0xFE	; 254
 cd8:	a2 2e       	mov	r10, r18
 cda:	89 14       	cp	r8, r9
 cdc:	58 f4       	brcc	.+22     	; 0xcf4 <vfprintf+0x2c0>
 cde:	34 fe       	sbrs	r3, 4
 ce0:	0b c0       	rjmp	.+22     	; 0xcf8 <vfprintf+0x2c4>
 ce2:	32 fc       	sbrc	r3, 2
 ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <vfprintf+0x2c4>
 ce6:	83 2d       	mov	r24, r3
 ce8:	8e 7e       	andi	r24, 0xEE	; 238
 cea:	a8 2e       	mov	r10, r24
 cec:	05 c0       	rjmp	.+10     	; 0xcf8 <vfprintf+0x2c4>
 cee:	b8 2c       	mov	r11, r8
 cf0:	a3 2c       	mov	r10, r3
 cf2:	03 c0       	rjmp	.+6      	; 0xcfa <vfprintf+0x2c6>
 cf4:	b8 2c       	mov	r11, r8
 cf6:	01 c0       	rjmp	.+2      	; 0xcfa <vfprintf+0x2c6>
 cf8:	b9 2c       	mov	r11, r9
 cfa:	a4 fe       	sbrs	r10, 4
 cfc:	0f c0       	rjmp	.+30     	; 0xd1c <vfprintf+0x2e8>
 cfe:	fe 01       	movw	r30, r28
 d00:	e8 0d       	add	r30, r8
 d02:	f1 1d       	adc	r31, r1
 d04:	80 81       	ld	r24, Z
 d06:	80 33       	cpi	r24, 0x30	; 48
 d08:	21 f4       	brne	.+8      	; 0xd12 <vfprintf+0x2de>
 d0a:	9a 2d       	mov	r25, r10
 d0c:	99 7e       	andi	r25, 0xE9	; 233
 d0e:	a9 2e       	mov	r10, r25
 d10:	09 c0       	rjmp	.+18     	; 0xd24 <vfprintf+0x2f0>
 d12:	a2 fe       	sbrs	r10, 2
 d14:	06 c0       	rjmp	.+12     	; 0xd22 <vfprintf+0x2ee>
 d16:	b3 94       	inc	r11
 d18:	b3 94       	inc	r11
 d1a:	04 c0       	rjmp	.+8      	; 0xd24 <vfprintf+0x2f0>
 d1c:	8a 2d       	mov	r24, r10
 d1e:	86 78       	andi	r24, 0x86	; 134
 d20:	09 f0       	breq	.+2      	; 0xd24 <vfprintf+0x2f0>
 d22:	b3 94       	inc	r11
 d24:	a3 fc       	sbrc	r10, 3
 d26:	10 c0       	rjmp	.+32     	; 0xd48 <vfprintf+0x314>
 d28:	a0 fe       	sbrs	r10, 0
 d2a:	06 c0       	rjmp	.+12     	; 0xd38 <vfprintf+0x304>
 d2c:	b2 14       	cp	r11, r2
 d2e:	80 f4       	brcc	.+32     	; 0xd50 <vfprintf+0x31c>
 d30:	28 0c       	add	r2, r8
 d32:	92 2c       	mov	r9, r2
 d34:	9b 18       	sub	r9, r11
 d36:	0d c0       	rjmp	.+26     	; 0xd52 <vfprintf+0x31e>
 d38:	b2 14       	cp	r11, r2
 d3a:	58 f4       	brcc	.+22     	; 0xd52 <vfprintf+0x31e>
 d3c:	b6 01       	movw	r22, r12
 d3e:	80 e2       	ldi	r24, 0x20	; 32
 d40:	90 e0       	ldi	r25, 0x00	; 0
 d42:	60 d0       	rcall	.+192    	; 0xe04 <fputc>
 d44:	b3 94       	inc	r11
 d46:	f8 cf       	rjmp	.-16     	; 0xd38 <vfprintf+0x304>
 d48:	b2 14       	cp	r11, r2
 d4a:	18 f4       	brcc	.+6      	; 0xd52 <vfprintf+0x31e>
 d4c:	2b 18       	sub	r2, r11
 d4e:	02 c0       	rjmp	.+4      	; 0xd54 <vfprintf+0x320>
 d50:	98 2c       	mov	r9, r8
 d52:	21 2c       	mov	r2, r1
 d54:	a4 fe       	sbrs	r10, 4
 d56:	0f c0       	rjmp	.+30     	; 0xd76 <vfprintf+0x342>
 d58:	b6 01       	movw	r22, r12
 d5a:	80 e3       	ldi	r24, 0x30	; 48
 d5c:	90 e0       	ldi	r25, 0x00	; 0
 d5e:	52 d0       	rcall	.+164    	; 0xe04 <fputc>
 d60:	a2 fe       	sbrs	r10, 2
 d62:	16 c0       	rjmp	.+44     	; 0xd90 <vfprintf+0x35c>
 d64:	a1 fc       	sbrc	r10, 1
 d66:	03 c0       	rjmp	.+6      	; 0xd6e <vfprintf+0x33a>
 d68:	88 e7       	ldi	r24, 0x78	; 120
 d6a:	90 e0       	ldi	r25, 0x00	; 0
 d6c:	02 c0       	rjmp	.+4      	; 0xd72 <vfprintf+0x33e>
 d6e:	88 e5       	ldi	r24, 0x58	; 88
 d70:	90 e0       	ldi	r25, 0x00	; 0
 d72:	b6 01       	movw	r22, r12
 d74:	0c c0       	rjmp	.+24     	; 0xd8e <vfprintf+0x35a>
 d76:	8a 2d       	mov	r24, r10
 d78:	86 78       	andi	r24, 0x86	; 134
 d7a:	51 f0       	breq	.+20     	; 0xd90 <vfprintf+0x35c>
 d7c:	a1 fe       	sbrs	r10, 1
 d7e:	02 c0       	rjmp	.+4      	; 0xd84 <vfprintf+0x350>
 d80:	8b e2       	ldi	r24, 0x2B	; 43
 d82:	01 c0       	rjmp	.+2      	; 0xd86 <vfprintf+0x352>
 d84:	80 e2       	ldi	r24, 0x20	; 32
 d86:	a7 fc       	sbrc	r10, 7
 d88:	8d e2       	ldi	r24, 0x2D	; 45
 d8a:	b6 01       	movw	r22, r12
 d8c:	90 e0       	ldi	r25, 0x00	; 0
 d8e:	3a d0       	rcall	.+116    	; 0xe04 <fputc>
 d90:	89 14       	cp	r8, r9
 d92:	30 f4       	brcc	.+12     	; 0xda0 <vfprintf+0x36c>
 d94:	b6 01       	movw	r22, r12
 d96:	80 e3       	ldi	r24, 0x30	; 48
 d98:	90 e0       	ldi	r25, 0x00	; 0
 d9a:	34 d0       	rcall	.+104    	; 0xe04 <fputc>
 d9c:	9a 94       	dec	r9
 d9e:	f8 cf       	rjmp	.-16     	; 0xd90 <vfprintf+0x35c>
 da0:	8a 94       	dec	r8
 da2:	f3 01       	movw	r30, r6
 da4:	e8 0d       	add	r30, r8
 da6:	f1 1d       	adc	r31, r1
 da8:	80 81       	ld	r24, Z
 daa:	b6 01       	movw	r22, r12
 dac:	90 e0       	ldi	r25, 0x00	; 0
 dae:	2a d0       	rcall	.+84     	; 0xe04 <fputc>
 db0:	81 10       	cpse	r8, r1
 db2:	f6 cf       	rjmp	.-20     	; 0xda0 <vfprintf+0x36c>
 db4:	22 20       	and	r2, r2
 db6:	09 f4       	brne	.+2      	; 0xdba <vfprintf+0x386>
 db8:	4e ce       	rjmp	.-868    	; 0xa56 <vfprintf+0x22>
 dba:	b6 01       	movw	r22, r12
 dbc:	80 e2       	ldi	r24, 0x20	; 32
 dbe:	90 e0       	ldi	r25, 0x00	; 0
 dc0:	21 d0       	rcall	.+66     	; 0xe04 <fputc>
 dc2:	2a 94       	dec	r2
 dc4:	f7 cf       	rjmp	.-18     	; 0xdb4 <vfprintf+0x380>
 dc6:	f6 01       	movw	r30, r12
 dc8:	86 81       	ldd	r24, Z+6	; 0x06
 dca:	97 81       	ldd	r25, Z+7	; 0x07
 dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <vfprintf+0x39e>
 dce:	8f ef       	ldi	r24, 0xFF	; 255
 dd0:	9f ef       	ldi	r25, 0xFF	; 255
 dd2:	2b 96       	adiw	r28, 0x0b	; 11
 dd4:	e2 e1       	ldi	r30, 0x12	; 18
 dd6:	c9 c0       	rjmp	.+402    	; 0xf6a <__epilogue_restores__>

00000dd8 <strnlen_P>:
 dd8:	fc 01       	movw	r30, r24
 dda:	05 90       	lpm	r0, Z+
 ddc:	61 50       	subi	r22, 0x01	; 1
 dde:	70 40       	sbci	r23, 0x00	; 0
 de0:	01 10       	cpse	r0, r1
 de2:	d8 f7       	brcc	.-10     	; 0xdda <strnlen_P+0x2>
 de4:	80 95       	com	r24
 de6:	90 95       	com	r25
 de8:	8e 0f       	add	r24, r30
 dea:	9f 1f       	adc	r25, r31
 dec:	08 95       	ret

00000dee <strnlen>:
 dee:	fc 01       	movw	r30, r24
 df0:	61 50       	subi	r22, 0x01	; 1
 df2:	70 40       	sbci	r23, 0x00	; 0
 df4:	01 90       	ld	r0, Z+
 df6:	01 10       	cpse	r0, r1
 df8:	d8 f7       	brcc	.-10     	; 0xdf0 <strnlen+0x2>
 dfa:	80 95       	com	r24
 dfc:	90 95       	com	r25
 dfe:	8e 0f       	add	r24, r30
 e00:	9f 1f       	adc	r25, r31
 e02:	08 95       	ret

00000e04 <fputc>:
 e04:	0f 93       	push	r16
 e06:	1f 93       	push	r17
 e08:	cf 93       	push	r28
 e0a:	df 93       	push	r29
 e0c:	fb 01       	movw	r30, r22
 e0e:	23 81       	ldd	r18, Z+3	; 0x03
 e10:	21 fd       	sbrc	r18, 1
 e12:	03 c0       	rjmp	.+6      	; 0xe1a <fputc+0x16>
 e14:	8f ef       	ldi	r24, 0xFF	; 255
 e16:	9f ef       	ldi	r25, 0xFF	; 255
 e18:	2c c0       	rjmp	.+88     	; 0xe72 <fputc+0x6e>
 e1a:	22 ff       	sbrs	r18, 2
 e1c:	16 c0       	rjmp	.+44     	; 0xe4a <fputc+0x46>
 e1e:	46 81       	ldd	r20, Z+6	; 0x06
 e20:	57 81       	ldd	r21, Z+7	; 0x07
 e22:	24 81       	ldd	r18, Z+4	; 0x04
 e24:	35 81       	ldd	r19, Z+5	; 0x05
 e26:	42 17       	cp	r20, r18
 e28:	53 07       	cpc	r21, r19
 e2a:	44 f4       	brge	.+16     	; 0xe3c <fputc+0x38>
 e2c:	a0 81       	ld	r26, Z
 e2e:	b1 81       	ldd	r27, Z+1	; 0x01
 e30:	9d 01       	movw	r18, r26
 e32:	2f 5f       	subi	r18, 0xFF	; 255
 e34:	3f 4f       	sbci	r19, 0xFF	; 255
 e36:	20 83       	st	Z, r18
 e38:	31 83       	std	Z+1, r19	; 0x01
 e3a:	8c 93       	st	X, r24
 e3c:	26 81       	ldd	r18, Z+6	; 0x06
 e3e:	37 81       	ldd	r19, Z+7	; 0x07
 e40:	2f 5f       	subi	r18, 0xFF	; 255
 e42:	3f 4f       	sbci	r19, 0xFF	; 255
 e44:	26 83       	std	Z+6, r18	; 0x06
 e46:	37 83       	std	Z+7, r19	; 0x07
 e48:	14 c0       	rjmp	.+40     	; 0xe72 <fputc+0x6e>
 e4a:	8b 01       	movw	r16, r22
 e4c:	ec 01       	movw	r28, r24
 e4e:	fb 01       	movw	r30, r22
 e50:	00 84       	ldd	r0, Z+8	; 0x08
 e52:	f1 85       	ldd	r31, Z+9	; 0x09
 e54:	e0 2d       	mov	r30, r0
 e56:	09 95       	icall
 e58:	89 2b       	or	r24, r25
 e5a:	e1 f6       	brne	.-72     	; 0xe14 <fputc+0x10>
 e5c:	d8 01       	movw	r26, r16
 e5e:	16 96       	adiw	r26, 0x06	; 6
 e60:	8d 91       	ld	r24, X+
 e62:	9c 91       	ld	r25, X
 e64:	17 97       	sbiw	r26, 0x07	; 7
 e66:	01 96       	adiw	r24, 0x01	; 1
 e68:	16 96       	adiw	r26, 0x06	; 6
 e6a:	8d 93       	st	X+, r24
 e6c:	9c 93       	st	X, r25
 e6e:	17 97       	sbiw	r26, 0x07	; 7
 e70:	ce 01       	movw	r24, r28
 e72:	df 91       	pop	r29
 e74:	cf 91       	pop	r28
 e76:	1f 91       	pop	r17
 e78:	0f 91       	pop	r16
 e7a:	08 95       	ret

00000e7c <__ultoa_invert>:
 e7c:	fa 01       	movw	r30, r20
 e7e:	aa 27       	eor	r26, r26
 e80:	28 30       	cpi	r18, 0x08	; 8
 e82:	51 f1       	breq	.+84     	; 0xed8 <__ultoa_invert+0x5c>
 e84:	20 31       	cpi	r18, 0x10	; 16
 e86:	81 f1       	breq	.+96     	; 0xee8 <__ultoa_invert+0x6c>
 e88:	e8 94       	clt
 e8a:	6f 93       	push	r22
 e8c:	6e 7f       	andi	r22, 0xFE	; 254
 e8e:	6e 5f       	subi	r22, 0xFE	; 254
 e90:	7f 4f       	sbci	r23, 0xFF	; 255
 e92:	8f 4f       	sbci	r24, 0xFF	; 255
 e94:	9f 4f       	sbci	r25, 0xFF	; 255
 e96:	af 4f       	sbci	r26, 0xFF	; 255
 e98:	b1 e0       	ldi	r27, 0x01	; 1
 e9a:	3e d0       	rcall	.+124    	; 0xf18 <__ultoa_invert+0x9c>
 e9c:	b4 e0       	ldi	r27, 0x04	; 4
 e9e:	3c d0       	rcall	.+120    	; 0xf18 <__ultoa_invert+0x9c>
 ea0:	67 0f       	add	r22, r23
 ea2:	78 1f       	adc	r23, r24
 ea4:	89 1f       	adc	r24, r25
 ea6:	9a 1f       	adc	r25, r26
 ea8:	a1 1d       	adc	r26, r1
 eaa:	68 0f       	add	r22, r24
 eac:	79 1f       	adc	r23, r25
 eae:	8a 1f       	adc	r24, r26
 eb0:	91 1d       	adc	r25, r1
 eb2:	a1 1d       	adc	r26, r1
 eb4:	6a 0f       	add	r22, r26
 eb6:	71 1d       	adc	r23, r1
 eb8:	81 1d       	adc	r24, r1
 eba:	91 1d       	adc	r25, r1
 ebc:	a1 1d       	adc	r26, r1
 ebe:	20 d0       	rcall	.+64     	; 0xf00 <__ultoa_invert+0x84>
 ec0:	09 f4       	brne	.+2      	; 0xec4 <__ultoa_invert+0x48>
 ec2:	68 94       	set
 ec4:	3f 91       	pop	r19
 ec6:	2a e0       	ldi	r18, 0x0A	; 10
 ec8:	26 9f       	mul	r18, r22
 eca:	11 24       	eor	r1, r1
 ecc:	30 19       	sub	r19, r0
 ece:	30 5d       	subi	r19, 0xD0	; 208
 ed0:	31 93       	st	Z+, r19
 ed2:	de f6       	brtc	.-74     	; 0xe8a <__ultoa_invert+0xe>
 ed4:	cf 01       	movw	r24, r30
 ed6:	08 95       	ret
 ed8:	46 2f       	mov	r20, r22
 eda:	47 70       	andi	r20, 0x07	; 7
 edc:	40 5d       	subi	r20, 0xD0	; 208
 ede:	41 93       	st	Z+, r20
 ee0:	b3 e0       	ldi	r27, 0x03	; 3
 ee2:	0f d0       	rcall	.+30     	; 0xf02 <__ultoa_invert+0x86>
 ee4:	c9 f7       	brne	.-14     	; 0xed8 <__ultoa_invert+0x5c>
 ee6:	f6 cf       	rjmp	.-20     	; 0xed4 <__ultoa_invert+0x58>
 ee8:	46 2f       	mov	r20, r22
 eea:	4f 70       	andi	r20, 0x0F	; 15
 eec:	40 5d       	subi	r20, 0xD0	; 208
 eee:	4a 33       	cpi	r20, 0x3A	; 58
 ef0:	18 f0       	brcs	.+6      	; 0xef8 <__ultoa_invert+0x7c>
 ef2:	49 5d       	subi	r20, 0xD9	; 217
 ef4:	31 fd       	sbrc	r19, 1
 ef6:	40 52       	subi	r20, 0x20	; 32
 ef8:	41 93       	st	Z+, r20
 efa:	02 d0       	rcall	.+4      	; 0xf00 <__ultoa_invert+0x84>
 efc:	a9 f7       	brne	.-22     	; 0xee8 <__ultoa_invert+0x6c>
 efe:	ea cf       	rjmp	.-44     	; 0xed4 <__ultoa_invert+0x58>
 f00:	b4 e0       	ldi	r27, 0x04	; 4
 f02:	a6 95       	lsr	r26
 f04:	97 95       	ror	r25
 f06:	87 95       	ror	r24
 f08:	77 95       	ror	r23
 f0a:	67 95       	ror	r22
 f0c:	ba 95       	dec	r27
 f0e:	c9 f7       	brne	.-14     	; 0xf02 <__ultoa_invert+0x86>
 f10:	00 97       	sbiw	r24, 0x00	; 0
 f12:	61 05       	cpc	r22, r1
 f14:	71 05       	cpc	r23, r1
 f16:	08 95       	ret
 f18:	9b 01       	movw	r18, r22
 f1a:	ac 01       	movw	r20, r24
 f1c:	0a 2e       	mov	r0, r26
 f1e:	06 94       	lsr	r0
 f20:	57 95       	ror	r21
 f22:	47 95       	ror	r20
 f24:	37 95       	ror	r19
 f26:	27 95       	ror	r18
 f28:	ba 95       	dec	r27
 f2a:	c9 f7       	brne	.-14     	; 0xf1e <__ultoa_invert+0xa2>
 f2c:	62 0f       	add	r22, r18
 f2e:	73 1f       	adc	r23, r19
 f30:	84 1f       	adc	r24, r20
 f32:	95 1f       	adc	r25, r21
 f34:	a0 1d       	adc	r26, r0
 f36:	08 95       	ret

00000f38 <__prologue_saves__>:
 f38:	2f 92       	push	r2
 f3a:	3f 92       	push	r3
 f3c:	4f 92       	push	r4
 f3e:	5f 92       	push	r5
 f40:	6f 92       	push	r6
 f42:	7f 92       	push	r7
 f44:	8f 92       	push	r8
 f46:	9f 92       	push	r9
 f48:	af 92       	push	r10
 f4a:	bf 92       	push	r11
 f4c:	cf 92       	push	r12
 f4e:	df 92       	push	r13
 f50:	ef 92       	push	r14
 f52:	ff 92       	push	r15
 f54:	0f 93       	push	r16
 f56:	1f 93       	push	r17
 f58:	cf 93       	push	r28
 f5a:	df 93       	push	r29
 f5c:	cd b7       	in	r28, 0x3d	; 61
 f5e:	de b7       	in	r29, 0x3e	; 62
 f60:	ca 1b       	sub	r28, r26
 f62:	db 0b       	sbc	r29, r27
 f64:	cd bf       	out	0x3d, r28	; 61
 f66:	de bf       	out	0x3e, r29	; 62
 f68:	09 94       	ijmp

00000f6a <__epilogue_restores__>:
 f6a:	2a 88       	ldd	r2, Y+18	; 0x12
 f6c:	39 88       	ldd	r3, Y+17	; 0x11
 f6e:	48 88       	ldd	r4, Y+16	; 0x10
 f70:	5f 84       	ldd	r5, Y+15	; 0x0f
 f72:	6e 84       	ldd	r6, Y+14	; 0x0e
 f74:	7d 84       	ldd	r7, Y+13	; 0x0d
 f76:	8c 84       	ldd	r8, Y+12	; 0x0c
 f78:	9b 84       	ldd	r9, Y+11	; 0x0b
 f7a:	aa 84       	ldd	r10, Y+10	; 0x0a
 f7c:	b9 84       	ldd	r11, Y+9	; 0x09
 f7e:	c8 84       	ldd	r12, Y+8	; 0x08
 f80:	df 80       	ldd	r13, Y+7	; 0x07
 f82:	ee 80       	ldd	r14, Y+6	; 0x06
 f84:	fd 80       	ldd	r15, Y+5	; 0x05
 f86:	0c 81       	ldd	r16, Y+4	; 0x04
 f88:	1b 81       	ldd	r17, Y+3	; 0x03
 f8a:	aa 81       	ldd	r26, Y+2	; 0x02
 f8c:	b9 81       	ldd	r27, Y+1	; 0x01
 f8e:	ce 0f       	add	r28, r30
 f90:	d1 1d       	adc	r29, r1
 f92:	cd bf       	out	0x3d, r28	; 61
 f94:	de bf       	out	0x3e, r29	; 62
 f96:	ed 01       	movw	r28, r26
 f98:	08 95       	ret

00000f9a <_exit>:
 f9a:	f8 94       	cli

00000f9c <__stop_program>:
 f9c:	ff cf       	rjmp	.-2      	; 0xf9c <__stop_program>
