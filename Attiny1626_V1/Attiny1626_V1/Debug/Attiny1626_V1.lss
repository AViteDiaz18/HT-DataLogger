
Attiny1626_V1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00803800  000010df  00001193  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000109c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000043  0000909c  0000109c  00001150  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000000a  00803816  00803816  000011a9  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  000011a9  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001208  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000098  00000000  00000000  00001248  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002ad8  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001bda  00000000  00000000  00003db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000007e0  00000000  00000000  00005992  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000270  00000000  00000000  00006174  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000017b0  00000000  00000000  000063e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009f7  00000000  00000000  00007b94  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a0  00000000  00000000  0000858b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
       4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
       8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
       c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      10:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      2c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      34:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      40:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      44:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__vector_17>
      48:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      54:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      58:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      5c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      60:	0c 94 02 03 	jmp	0x604	; 0x604 <__vector_24>
      64:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      68:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      6c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      70:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
      74:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>

00000078 <__ctors_end>:
      78:	11 24       	eor	r1, r1
      7a:	1f be       	out	0x3f, r1	; 63
      7c:	cf ef       	ldi	r28, 0xFF	; 255
      7e:	cd bf       	out	0x3d, r28	; 61
      80:	df e3       	ldi	r29, 0x3F	; 63
      82:	de bf       	out	0x3e, r29	; 62

00000084 <__do_copy_data>:
      84:	18 e3       	ldi	r17, 0x38	; 56
      86:	a0 e0       	ldi	r26, 0x00	; 0
      88:	b8 e3       	ldi	r27, 0x38	; 56
      8a:	ef ed       	ldi	r30, 0xDF	; 223
      8c:	f0 e1       	ldi	r31, 0x10	; 16
      8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
      90:	05 90       	lpm	r0, Z+
      92:	0d 92       	st	X+, r0
      94:	a6 31       	cpi	r26, 0x16	; 22
      96:	b1 07       	cpc	r27, r17
      98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
      9a:	28 e3       	ldi	r18, 0x38	; 56
      9c:	a6 e1       	ldi	r26, 0x16	; 22
      9e:	b8 e3       	ldi	r27, 0x38	; 56
      a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
      a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
      a4:	a0 32       	cpi	r26, 0x20	; 32
      a6:	b2 07       	cpc	r27, r18
      a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
      aa:	0e 94 ad 02 	call	0x55a	; 0x55a <main>
      ae:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <_exit>

000000b2 <__bad_interrupt>:
      b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <USART0_sendChar>:
	return auxiliar;
}

//*********** Section USART ************* 
static void USART0_sendChar(char c){
	while (!(USART0.STATUS & USART_DREIF_bm)){
      b6:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
      ba:	95 ff       	sbrs	r25, 5
      bc:	fc cf       	rjmp	.-8      	; 0xb6 <USART0_sendChar>
		;
	}
	USART0.TXDATAL = c;
      be:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
      c2:	08 95       	ret

000000c4 <USART0_printChar>:
	}
}


static int USART0_printChar(char c, FILE *stream){
	USART0_sendChar(c);
      c4:	0e 94 5b 00 	call	0xb6	; 0xb6 <USART0_sendChar>
	return 0;
}
      c8:	80 e0       	ldi	r24, 0x00	; 0
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	08 95       	ret

000000ce <USART0_init>:

static FILE USART_stream = FDEV_SETUP_STREAM(USART0_printChar, NULL, _FDEV_SETUP_WRITE);

static void USART0_init(void){
	USART0.BAUD = (uint16_t)USART0_BAUD_RATE(1200);
      ce:	e0 e0       	ldi	r30, 0x00	; 0
      d0:	f8 e0       	ldi	r31, 0x08	; 8
      d2:	8d e6       	ldi	r24, 0x6D	; 109
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	80 87       	std	Z+8, r24	; 0x08
      d8:	91 87       	std	Z+9, r25	; 0x09
	USART0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
      da:	80 ec       	ldi	r24, 0xC0	; 192
      dc:	86 83       	std	Z+6, r24	; 0x06
	USART0_CTRLA = (1<<USART_RXCIE_bp)|(0<<USART_TXCIE_bp);
      de:	80 e8       	ldi	r24, 0x80	; 128
      e0:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__RODATA_PM_OFFSET__+0x7f8805>
	PORTMUX.USARTROUTEA = PORTMUX_USART0_ALT1_gc; 
      e4:	81 e0       	ldi	r24, 0x01	; 1
      e6:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__RODATA_PM_OFFSET__+0x7f85e2>
	stdout = &USART_stream;
      ea:	80 e0       	ldi	r24, 0x00	; 0
      ec:	98 e3       	ldi	r25, 0x38	; 56
      ee:	80 93 1c 38 	sts	0x381C, r24	; 0x80381c <__iob+0x2>
      f2:	90 93 1d 38 	sts	0x381D, r25	; 0x80381d <__iob+0x3>
      f6:	08 95       	ret

000000f8 <CLOCK32K_init>:
}

//************* Section Clock ************** 
static void CLOCK32K_init(){
	CPU_CCP = CCP_IOREG_gc;
      f8:	88 ed       	ldi	r24, 0xD8	; 216
      fa:	84 bf       	out	0x34, r24	; 52
	CLKCTRL_MCLKCTRLB = 0 << CLKCTRL_PEN_bp;
      fc:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
	CPU_CCP = CCP_IOREG_gc;
     100:	84 bf       	out	0x34, r24	; 52
	CLKCTRL_MCLKCTRLA = CLKCTRL_CLKSEL_OSCULP32K_gc;
     102:	81 e0       	ldi	r24, 0x01	; 1
     104:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__RODATA_PM_OFFSET__+0x7f8060>
     108:	08 95       	ret

0000010a <Pin_init>:
}

//************ Section Pulse Counter **************
static void Pin_init(){
	//Contador de pulsos
	PORTC.DIR &= ~(1<<3);
     10a:	e0 e4       	ldi	r30, 0x40	; 64
     10c:	f4 e0       	ldi	r31, 0x04	; 4
     10e:	80 81       	ld	r24, Z
     110:	87 7f       	andi	r24, 0xF7	; 247
     112:	80 83       	st	Z, r24
	//PORTC.PIN3CTRL |= PORT_PULLUPEN_bm;
	PORTC.PIN3CTRL |= PORT_ISC_RISING_gc;
     114:	83 89       	ldd	r24, Z+19	; 0x13
     116:	82 60       	ori	r24, 0x02	; 2
     118:	83 8b       	std	Z+19, r24	; 0x13
	//USART
	PORTA.DIR &= ~PIN2_bm;
     11a:	e0 e0       	ldi	r30, 0x00	; 0
     11c:	f4 e0       	ldi	r31, 0x04	; 4
     11e:	80 81       	ld	r24, Z
     120:	8b 7f       	andi	r24, 0xFB	; 251
     122:	80 83       	st	Z, r24
	PORTA.DIR |= PIN1_bm;
     124:	80 81       	ld	r24, Z
     126:	82 60       	ori	r24, 0x02	; 2
     128:	80 83       	st	Z, r24
	//Iniciador ADC
	//Presion 1
	PORTB.PIN4CTRL &= ~PORT_ISC_gm;
     12a:	a0 e2       	ldi	r26, 0x20	; 32
     12c:	b4 e0       	ldi	r27, 0x04	; 4
     12e:	54 96       	adiw	r26, 0x14	; 20
     130:	8c 91       	ld	r24, X
     132:	54 97       	sbiw	r26, 0x14	; 20
     134:	88 7f       	andi	r24, 0xF8	; 248
     136:	54 96       	adiw	r26, 0x14	; 20
     138:	8c 93       	st	X, r24
     13a:	54 97       	sbiw	r26, 0x14	; 20
	PORTB.PIN4CTRL |= PORT_ISC_INPUT_DISABLE_gc;
     13c:	54 96       	adiw	r26, 0x14	; 20
     13e:	8c 91       	ld	r24, X
     140:	54 97       	sbiw	r26, 0x14	; 20
     142:	84 60       	ori	r24, 0x04	; 4
     144:	54 96       	adiw	r26, 0x14	; 20
     146:	8c 93       	st	X, r24
     148:	54 97       	sbiw	r26, 0x14	; 20
	PORTB.PIN4CTRL &= ~PORT_PULLUPEN_bm;
     14a:	54 96       	adiw	r26, 0x14	; 20
     14c:	8c 91       	ld	r24, X
     14e:	54 97       	sbiw	r26, 0x14	; 20
     150:	87 7f       	andi	r24, 0xF7	; 247
     152:	54 96       	adiw	r26, 0x14	; 20
     154:	8c 93       	st	X, r24
	//Presion 2
	PORTA.PIN5CTRL &= ~PORT_ISC_gm;
     156:	85 89       	ldd	r24, Z+21	; 0x15
     158:	88 7f       	andi	r24, 0xF8	; 248
     15a:	85 8b       	std	Z+21, r24	; 0x15
	PORTA.PIN5CTRL |= PORT_ISC_INPUT_DISABLE_gc;
     15c:	85 89       	ldd	r24, Z+21	; 0x15
     15e:	84 60       	ori	r24, 0x04	; 4
     160:	85 8b       	std	Z+21, r24	; 0x15
	PORTA.PIN5CTRL &= ~PORT_PULLUPEN_bm;
     162:	85 89       	ldd	r24, Z+21	; 0x15
     164:	87 7f       	andi	r24, 0xF7	; 247
     166:	85 8b       	std	Z+21, r24	; 0x15
	//Bateria
	PORTA.PIN6CTRL &= ~PORT_ISC_gm;
     168:	86 89       	ldd	r24, Z+22	; 0x16
     16a:	88 7f       	andi	r24, 0xF8	; 248
     16c:	86 8b       	std	Z+22, r24	; 0x16
	PORTA.PIN6CTRL |= PORT_ISC_INPUT_DISABLE_gc;
     16e:	86 89       	ldd	r24, Z+22	; 0x16
     170:	84 60       	ori	r24, 0x04	; 4
     172:	86 8b       	std	Z+22, r24	; 0x16
	PORTA.PIN6CTRL &= ~PORT_PULLUPEN_bm;
     174:	86 89       	ldd	r24, Z+22	; 0x16
     176:	87 7f       	andi	r24, 0xF7	; 247
     178:	86 8b       	std	Z+22, r24	; 0x16
     17a:	08 95       	ret

0000017c <ReportCount>:
uint8_t index1 = 0;
char c;

//******** Section ReportCount **********

unsigned long ReportCount(){
     17c:	0f 93       	push	r16
     17e:	1f 93       	push	r17
	unsigned long actual = 0;
	unsigned long vuelta = 0;
	unsigned long completo = 65026;
	vuelta = *(uint8_t *)(5375) * completo;
     180:	20 91 ff 14 	lds	r18, 0x14FF	; 0x8014ff <__RODATA_PM_OFFSET__+0x7f94ff>
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	a2 e0       	ldi	r26, 0x02	; 2
     188:	be ef       	ldi	r27, 0xFE	; 254
     18a:	0e 94 5c 05 	call	0xab8	; 0xab8 <__umulhisi3>
     18e:	ab 01       	movw	r20, r22
     190:	bc 01       	movw	r22, r24
	for(int i = 5120; i <= 5374; i++){
     192:	e0 e0       	ldi	r30, 0x00	; 0
     194:	f4 e1       	ldi	r31, 0x14	; 20
char c;

//******** Section ReportCount **********

unsigned long ReportCount(){
	unsigned long actual = 0;
     196:	80 e0       	ldi	r24, 0x00	; 0
     198:	90 e0       	ldi	r25, 0x00	; 0
     19a:	dc 01       	movw	r26, r24
	unsigned long vuelta = 0;
	unsigned long completo = 65026;
	vuelta = *(uint8_t *)(5375) * completo;
	for(int i = 5120; i <= 5374; i++){
     19c:	05 c0       	rjmp	.+10     	; 0x1a8 <ReportCount+0x2c>
		actual += *(uint8_t *)(i);
     19e:	21 91       	ld	r18, Z+
     1a0:	82 0f       	add	r24, r18
     1a2:	91 1d       	adc	r25, r1
     1a4:	a1 1d       	adc	r26, r1
     1a6:	b1 1d       	adc	r27, r1
unsigned long ReportCount(){
	unsigned long actual = 0;
	unsigned long vuelta = 0;
	unsigned long completo = 65026;
	vuelta = *(uint8_t *)(5375) * completo;
	for(int i = 5120; i <= 5374; i++){
     1a8:	ef 3f       	cpi	r30, 0xFF	; 255
     1aa:	04 e1       	ldi	r16, 0x14	; 20
     1ac:	f0 07       	cpc	r31, r16
     1ae:	bc f3       	brlt	.-18     	; 0x19e <ReportCount+0x22>
		actual += *(uint8_t *)(i);
	}
	return vuelta+actual;
     1b0:	8c 01       	movw	r16, r24
     1b2:	9d 01       	movw	r18, r26
     1b4:	04 0f       	add	r16, r20
     1b6:	15 1f       	adc	r17, r21
     1b8:	26 1f       	adc	r18, r22
     1ba:	37 1f       	adc	r19, r23
     1bc:	c9 01       	movw	r24, r18
     1be:	b8 01       	movw	r22, r16
}
     1c0:	1f 91       	pop	r17
     1c2:	0f 91       	pop	r16
     1c4:	08 95       	ret

000001c6 <get_Float>:
		int decimal1;
		int decimal2;
	};
}Flotante;

Flotante get_Float(float a){
     1c6:	cf 92       	push	r12
     1c8:	df 92       	push	r13
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
     1d2:	cd b7       	in	r28, 0x3d	; 61
     1d4:	de b7       	in	r29, 0x3e	; 62
     1d6:	2c 97       	sbiw	r28, 0x0c	; 12
     1d8:	cd bf       	out	0x3d, r28	; 61
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	6b 01       	movw	r12, r22
     1de:	7c 01       	movw	r14, r24
	Flotante auxiliar;
	float aux = a;
	auxiliar.entero = (int)a;
     1e0:	0e 94 07 04 	call	0x80e	; 0x80e <__fixsfsi>
     1e4:	6f 83       	std	Y+7, r22	; 0x07
     1e6:	78 87       	std	Y+8, r23	; 0x08
	aux = aux-auxiliar.entero;
     1e8:	07 2e       	mov	r0, r23
     1ea:	00 0c       	add	r0, r0
     1ec:	88 0b       	sbc	r24, r24
     1ee:	99 0b       	sbc	r25, r25
     1f0:	0e 94 3f 04 	call	0x87e	; 0x87e <__floatsisf>
     1f4:	9b 01       	movw	r18, r22
     1f6:	ac 01       	movw	r20, r24
     1f8:	c7 01       	movw	r24, r14
     1fa:	b6 01       	movw	r22, r12
     1fc:	0e 94 95 03 	call	0x72a	; 0x72a <__subsf3>
	aux = aux*10;
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	40 e2       	ldi	r20, 0x20	; 32
     206:	51 e4       	ldi	r21, 0x41	; 65
     208:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
     20c:	6b 01       	movw	r12, r22
     20e:	7c 01       	movw	r14, r24
	auxiliar.decimal1 = (int)aux;
     210:	0e 94 07 04 	call	0x80e	; 0x80e <__fixsfsi>
     214:	69 87       	std	Y+9, r22	; 0x09
     216:	7a 87       	std	Y+10, r23	; 0x0a
	aux = aux - auxiliar.decimal1;
     218:	07 2e       	mov	r0, r23
     21a:	00 0c       	add	r0, r0
     21c:	88 0b       	sbc	r24, r24
     21e:	99 0b       	sbc	r25, r25
     220:	0e 94 3f 04 	call	0x87e	; 0x87e <__floatsisf>
     224:	9b 01       	movw	r18, r22
     226:	ac 01       	movw	r20, r24
     228:	c7 01       	movw	r24, r14
     22a:	b6 01       	movw	r22, r12
     22c:	0e 94 95 03 	call	0x72a	; 0x72a <__subsf3>
	aux = aux*10;
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	40 e2       	ldi	r20, 0x20	; 32
     236:	51 e4       	ldi	r21, 0x41	; 65
     238:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
	auxiliar.decimal2 = (int)aux;
     23c:	0e 94 07 04 	call	0x80e	; 0x80e <__fixsfsi>
     240:	6b 87       	std	Y+11, r22	; 0x0b
     242:	7c 87       	std	Y+12, r23	; 0x0c
	return auxiliar;
     244:	86 e0       	ldi	r24, 0x06	; 6
     246:	fe 01       	movw	r30, r28
     248:	37 96       	adiw	r30, 0x07	; 7
     24a:	de 01       	movw	r26, r28
     24c:	11 96       	adiw	r26, 0x01	; 1
     24e:	01 90       	ld	r0, Z+
     250:	0d 92       	st	X+, r0
     252:	8a 95       	dec	r24
     254:	e1 f7       	brne	.-8      	; 0x24e <get_Float+0x88>
     256:	29 81       	ldd	r18, Y+1	; 0x01
     258:	3a 81       	ldd	r19, Y+2	; 0x02
     25a:	4b 81       	ldd	r20, Y+3	; 0x03
     25c:	5c 81       	ldd	r21, Y+4	; 0x04
     25e:	6d 81       	ldd	r22, Y+5	; 0x05
     260:	7e 81       	ldd	r23, Y+6	; 0x06
}
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	2c 96       	adiw	r28, 0x0c	; 12
     268:	cd bf       	out	0x3d, r28	; 61
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	ff 90       	pop	r15
     272:	ef 90       	pop	r14
     274:	df 90       	pop	r13
     276:	cf 90       	pop	r12
     278:	08 95       	ret

0000027a <USART0_sendString>:
	}
	USART0.TXDATAL = c;
}

void USART0_sendString(char *str)
{
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	8c 01       	movw	r16, r24
	for(size_t i = 0; i < strlen(str); i++)
     284:	c0 e0       	ldi	r28, 0x00	; 0
     286:	d0 e0       	ldi	r29, 0x00	; 0
     288:	07 c0       	rjmp	.+14     	; 0x298 <USART0_sendString+0x1e>
	{
		USART0_sendChar(str[i]);
     28a:	f8 01       	movw	r30, r16
     28c:	ec 0f       	add	r30, r28
     28e:	fd 1f       	adc	r31, r29
     290:	80 81       	ld	r24, Z
     292:	0e 94 5b 00 	call	0xb6	; 0xb6 <USART0_sendChar>
	USART0.TXDATAL = c;
}

void USART0_sendString(char *str)
{
	for(size_t i = 0; i < strlen(str); i++)
     296:	21 96       	adiw	r28, 0x01	; 1
     298:	f8 01       	movw	r30, r16
     29a:	01 90       	ld	r0, Z+
     29c:	00 20       	and	r0, r0
     29e:	e9 f7       	brne	.-6      	; 0x29a <USART0_sendString+0x20>
     2a0:	31 97       	sbiw	r30, 0x01	; 1
     2a2:	e0 1b       	sub	r30, r16
     2a4:	f1 0b       	sbc	r31, r17
     2a6:	ce 17       	cp	r28, r30
     2a8:	df 07       	cpc	r29, r31
     2aa:	78 f3       	brcs	.-34     	; 0x28a <USART0_sendString+0x10>
	{
		USART0_sendChar(str[i]);
	}
}
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	1f 91       	pop	r17
     2b2:	0f 91       	pop	r16
     2b4:	08 95       	ret

000002b6 <ADC0_init>:
	PORTA.PIN6CTRL &= ~PORT_PULLUPEN_bm;
}

//************** Section ADC ************************
void ADC0_init(){
	ADC0.CTRLB = ADC_PRESC_DIV4_gc;
     2b6:	e0 e0       	ldi	r30, 0x00	; 0
     2b8:	f6 e0       	ldi	r31, 0x06	; 6
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	81 83       	std	Z+1, r24	; 0x01
	ADC0.CTRLC = ADC_REFSEL_2500MV_gc;
     2be:	86 e0       	ldi	r24, 0x06	; 6
     2c0:	82 83       	std	Z+2, r24	; 0x02
     2c2:	08 95       	ret

000002c4 <ADC0_read>:
}

uint16_t ADC0_read(void)
{
	ADC0.COMMAND = ADC_START_IMMEDIATE_gc | ADC_MODE_SINGLE_12BIT_gc;
     2c4:	81 e1       	ldi	r24, 0x11	; 17
     2c6:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__RODATA_PM_OFFSET__+0x7f860a>
	while ( !(ADC0.INTFLAGS & ADC_RESRDY_bm) )
     2ca:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
     2ce:	80 ff       	sbrs	r24, 0
     2d0:	fc cf       	rjmp	.-8      	; 0x2ca <ADC0_read+0x6>
	{
		;
	}
	ADC0.INTFLAGS = ADC_RESRDY_bm;
     2d2:	e0 e0       	ldi	r30, 0x00	; 0
     2d4:	f6 e0       	ldi	r31, 0x06	; 6
     2d6:	81 e0       	ldi	r24, 0x01	; 1
     2d8:	85 83       	std	Z+5, r24	; 0x05
	return ADC0.RESULT;
     2da:	80 89       	ldd	r24, Z+16	; 0x10
     2dc:	91 89       	ldd	r25, Z+17	; 0x11
     2de:	a2 89       	ldd	r26, Z+18	; 0x12
     2e0:	b3 89       	ldd	r27, Z+19	; 0x13
}
     2e2:	08 95       	ret

000002e4 <get_Voltage>:

float get_Voltage(int pin){
     2e4:	8f 92       	push	r8
     2e6:	9f 92       	push	r9
     2e8:	af 92       	push	r10
     2ea:	bf 92       	push	r11
     2ec:	cf 92       	push	r12
     2ee:	df 92       	push	r13
     2f0:	ef 92       	push	r14
     2f2:	ff 92       	push	r15
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	9c 01       	movw	r18, r24
	float lectura = 0;
	float Voltage = 0;
	int a = 0;
	PORTB.DIR |= PIN5_bm;
     2fa:	e0 e2       	ldi	r30, 0x20	; 32
     2fc:	f4 e0       	ldi	r31, 0x04	; 4
     2fe:	90 81       	ld	r25, Z
     300:	90 62       	ori	r25, 0x20	; 32
     302:	90 83       	st	Z, r25
	PORTB.OUT |= PIN5_bm;
     304:	94 81       	ldd	r25, Z+4	; 0x04
     306:	90 62       	ori	r25, 0x20	; 32
     308:	94 83       	std	Z+4, r25	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     30a:	86 e6       	ldi	r24, 0x66	; 102
     30c:	96 e1       	ldi	r25, 0x16	; 22
     30e:	01 97       	sbiw	r24, 0x01	; 1
     310:	f1 f7       	brne	.-4      	; 0x30e <get_Voltage+0x2a>
     312:	00 00       	nop
	_delay_ms(700);
	switch (pin){
     314:	2a 30       	cpi	r18, 0x0A	; 10
     316:	31 05       	cpc	r19, r1
     318:	39 f0       	breq	.+14     	; 0x328 <get_Voltage+0x44>
     31a:	2b 30       	cpi	r18, 0x0B	; 11
     31c:	31 05       	cpc	r19, r1
     31e:	59 f0       	breq	.+22     	; 0x336 <get_Voltage+0x52>
     320:	26 30       	cpi	r18, 0x06	; 6
     322:	31 05       	cpc	r19, r1
     324:	71 f4       	brne	.+28     	; 0x342 <get_Voltage+0x5e>
     326:	13 c0       	rjmp	.+38     	; 0x34e <get_Voltage+0x6a>
		case 10:
			ADC0.CTRLA = ADC_ENABLE_bm;
     328:	e0 e0       	ldi	r30, 0x00	; 0
     32a:	f6 e0       	ldi	r31, 0x06	; 6
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	80 83       	st	Z, r24
			ADC0.MUXPOS = ADC_MUXPOS_AIN9_gc;
     330:	89 e0       	ldi	r24, 0x09	; 9
     332:	84 87       	std	Z+12, r24	; 0x0c
			break;
     334:	06 c0       	rjmp	.+12     	; 0x342 <get_Voltage+0x5e>
		case 11:
			ADC0.CTRLA = ADC_ENABLE_bm;
     336:	e0 e0       	ldi	r30, 0x00	; 0
     338:	f6 e0       	ldi	r31, 0x06	; 6
     33a:	81 e0       	ldi	r24, 0x01	; 1
     33c:	80 83       	st	Z, r24
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
     33e:	85 e0       	ldi	r24, 0x05	; 5
     340:	84 87       	std	Z+12, r24	; 0x0c
	}
	ADC0.INTFLAGS = ADC_RESRDY_bm;
	return ADC0.RESULT;
}

float get_Voltage(int pin){
     342:	c0 e0       	ldi	r28, 0x00	; 0
     344:	d0 e0       	ldi	r29, 0x00	; 0
     346:	c1 2c       	mov	r12, r1
     348:	d1 2c       	mov	r13, r1
     34a:	76 01       	movw	r14, r12
     34c:	37 c0       	rjmp	.+110    	; 0x3bc <get_Voltage+0xd8>
		case 11:
			ADC0.CTRLA = ADC_ENABLE_bm;
			ADC0.MUXPOS = ADC_MUXPOS_AIN5_gc;
			break;
		case 6:
			ADC0.CTRLA = ADC_ENABLE_bm;
     34e:	e0 e0       	ldi	r30, 0x00	; 0
     350:	f6 e0       	ldi	r31, 0x06	; 6
     352:	81 e0       	ldi	r24, 0x01	; 1
     354:	80 83       	st	Z, r24
			ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
     356:	86 e0       	ldi	r24, 0x06	; 6
     358:	84 87       	std	Z+12, r24	; 0x0c
			break;
     35a:	f3 cf       	rjmp	.-26     	; 0x342 <get_Voltage+0x5e>
	}
	while(a < 20){
		lectura = ((ADC0_read()*2.5)/4096);
     35c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <ADC0_read>
     360:	bc 01       	movw	r22, r24
     362:	80 e0       	ldi	r24, 0x00	; 0
     364:	90 e0       	ldi	r25, 0x00	; 0
     366:	0e 94 3d 04 	call	0x87a	; 0x87a <__floatunsisf>
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	40 e2       	ldi	r20, 0x20	; 32
     370:	50 e4       	ldi	r21, 0x40	; 64
     372:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	40 e8       	ldi	r20, 0x80	; 128
     37c:	59 e3       	ldi	r21, 0x39	; 57
     37e:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
		Voltage = (0.5*lectura) + ((1.0 - 0.5)*Voltage);
     382:	20 e0       	ldi	r18, 0x00	; 0
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	40 e0       	ldi	r20, 0x00	; 0
     388:	5f e3       	ldi	r21, 0x3F	; 63
     38a:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
     38e:	4b 01       	movw	r8, r22
     390:	5c 01       	movw	r10, r24
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	5f e3       	ldi	r21, 0x3F	; 63
     39a:	c7 01       	movw	r24, r14
     39c:	b6 01       	movw	r22, r12
     39e:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
     3a2:	9b 01       	movw	r18, r22
     3a4:	ac 01       	movw	r20, r24
     3a6:	c5 01       	movw	r24, r10
     3a8:	b4 01       	movw	r22, r8
     3aa:	0e 94 96 03 	call	0x72c	; 0x72c <__addsf3>
     3ae:	6b 01       	movw	r12, r22
     3b0:	7c 01       	movw	r14, r24
		a++;
     3b2:	21 96       	adiw	r28, 0x01	; 1
     3b4:	83 e3       	ldi	r24, 0x33	; 51
     3b6:	93 e0       	ldi	r25, 0x03	; 3
     3b8:	01 97       	sbiw	r24, 0x01	; 1
     3ba:	f1 f7       	brne	.-4      	; 0x3b8 <get_Voltage+0xd4>
		case 6:
			ADC0.CTRLA = ADC_ENABLE_bm;
			ADC0.MUXPOS = ADC_MUXPOS_AIN6_gc;
			break;
	}
	while(a < 20){
     3bc:	c4 31       	cpi	r28, 0x14	; 20
     3be:	d1 05       	cpc	r29, r1
     3c0:	6c f2       	brlt	.-102    	; 0x35c <get_Voltage+0x78>
		lectura = ((ADC0_read()*2.5)/4096);
		Voltage = (0.5*lectura) + ((1.0 - 0.5)*Voltage);
		a++;
		_delay_ms(100);
	}
	ADC0.CTRLA &= ~ADC_ENABLE_bm;
     3c2:	e0 e0       	ldi	r30, 0x00	; 0
     3c4:	f6 e0       	ldi	r31, 0x06	; 6
     3c6:	80 81       	ld	r24, Z
     3c8:	8e 7f       	andi	r24, 0xFE	; 254
     3ca:	80 83       	st	Z, r24
	PORTB.OUT &= ~PIN5_bm;
     3cc:	e0 e2       	ldi	r30, 0x20	; 32
     3ce:	f4 e0       	ldi	r31, 0x04	; 4
     3d0:	84 81       	ldd	r24, Z+4	; 0x04
     3d2:	8f 7d       	andi	r24, 0xDF	; 223
     3d4:	84 83       	std	Z+4, r24	; 0x04
	return Voltage;
}
     3d6:	c7 01       	movw	r24, r14
     3d8:	b6 01       	movw	r22, r12
     3da:	df 91       	pop	r29
     3dc:	cf 91       	pop	r28
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	df 90       	pop	r13
     3e4:	cf 90       	pop	r12
     3e6:	bf 90       	pop	r11
     3e8:	af 90       	pop	r10
     3ea:	9f 90       	pop	r9
     3ec:	8f 90       	pop	r8
     3ee:	08 95       	ret

000003f0 <get_Presure>:

float get_Presure(float vol){
     3f0:	cf 92       	push	r12
     3f2:	df 92       	push	r13
     3f4:	ef 92       	push	r14
     3f6:	ff 92       	push	r15
     3f8:	6b 01       	movw	r12, r22
     3fa:	7c 01       	movw	r14, r24
	float Pressure;
	if(vol <=  0.495){
     3fc:	24 ea       	ldi	r18, 0xA4	; 164
     3fe:	30 e7       	ldi	r19, 0x70	; 112
     400:	4d ef       	ldi	r20, 0xFD	; 253
     402:	5e e3       	ldi	r21, 0x3E	; 62
     404:	0e 94 02 04 	call	0x804	; 0x804 <__cmpsf2>
     408:	18 16       	cp	r1, r24
     40a:	ac f4       	brge	.+42     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
		//vol = 0.0;
		Pressure = 0.0;
	}
	else{
		//vol = (8.9775485 * vol - 4.4092)*10.2;
		Pressure = (8.9775485 * vol - 4.4092)*10.2;
     40c:	2a e0       	ldi	r18, 0x0A	; 10
     40e:	34 ea       	ldi	r19, 0xA4	; 164
     410:	4f e0       	ldi	r20, 0x0F	; 15
     412:	51 e4       	ldi	r21, 0x41	; 65
     414:	c7 01       	movw	r24, r14
     416:	b6 01       	movw	r22, r12
     418:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
     41c:	2b e2       	ldi	r18, 0x2B	; 43
     41e:	38 e1       	ldi	r19, 0x18	; 24
     420:	4d e8       	ldi	r20, 0x8D	; 141
     422:	50 e4       	ldi	r21, 0x40	; 64
     424:	0e 94 95 03 	call	0x72a	; 0x72a <__subsf3>
     428:	23 e3       	ldi	r18, 0x33	; 51
     42a:	33 e3       	ldi	r19, 0x33	; 51
     42c:	43 e2       	ldi	r20, 0x23	; 35
     42e:	51 e4       	ldi	r21, 0x41	; 65
     430:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
     434:	03 c0       	rjmp	.+6      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>

float get_Presure(float vol){
	float Pressure;
	if(vol <=  0.495){
		//vol = 0.0;
		Pressure = 0.0;
     436:	60 e0       	ldi	r22, 0x00	; 0
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	cb 01       	movw	r24, r22
		//vol = (8.9775485 * vol - 4.4092)*10.2;
		Pressure = (8.9775485 * vol - 4.4092)*10.2;
	}
	//return vol;
	return Pressure;	
}
     43c:	ff 90       	pop	r15
     43e:	ef 90       	pop	r14
     440:	df 90       	pop	r13
     442:	cf 90       	pop	r12
     444:	08 95       	ret

00000446 <executeCommand>:

static void executeCommand(char *command)
{	
     446:	cf 92       	push	r12
     448:	df 92       	push	r13
     44a:	ef 92       	push	r14
     44c:	ff 92       	push	r15
     44e:	0f 93       	push	r16
     450:	1f 93       	push	r17
     452:	cf 93       	push	r28
     454:	df 93       	push	r29
     456:	cd b7       	in	r28, 0x3d	; 61
     458:	de b7       	in	r29, 0x3e	; 62
     45a:	62 97       	sbiw	r28, 0x12	; 18
     45c:	cd bf       	out	0x3d, r28	; 61
     45e:	de bf       	out	0x3e, r29	; 62
     460:	8c 01       	movw	r16, r24
	
	/*B1 = get_Voltage(6)*5;
	P1 = get_Presure(get_Voltage(10));
	P2 = get_Presure(get_Voltage(11));*/
	
	presion1 = get_Float(get_Presure(get_Voltage(10)));
     462:	8a e0       	ldi	r24, 0x0A	; 10
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 72 01 	call	0x2e4	; 0x2e4 <get_Voltage>
     46a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_Presure>
     46e:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <get_Float>
     472:	29 83       	std	Y+1, r18	; 0x01
     474:	3a 83       	std	Y+2, r19	; 0x02
     476:	4b 83       	std	Y+3, r20	; 0x03
     478:	5c 83       	std	Y+4, r21	; 0x04
     47a:	6d 83       	std	Y+5, r22	; 0x05
     47c:	7e 83       	std	Y+6, r23	; 0x06
	presion2 = get_Float(get_Presure(get_Voltage(11)));
     47e:	8b e0       	ldi	r24, 0x0B	; 11
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	0e 94 72 01 	call	0x2e4	; 0x2e4 <get_Voltage>
     486:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <get_Presure>
     48a:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <get_Float>
     48e:	2f 83       	std	Y+7, r18	; 0x07
     490:	38 87       	std	Y+8, r19	; 0x08
     492:	49 87       	std	Y+9, r20	; 0x09
     494:	5a 87       	std	Y+10, r21	; 0x0a
     496:	6b 87       	std	Y+11, r22	; 0x0b
     498:	7c 87       	std	Y+12, r23	; 0x0c
	bateria = get_Float(get_Voltage(6)*5);
     49a:	86 e0       	ldi	r24, 0x06	; 6
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	0e 94 72 01 	call	0x2e4	; 0x2e4 <get_Voltage>
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	40 ea       	ldi	r20, 0xA0	; 160
     4a8:	50 e4       	ldi	r21, 0x40	; 64
     4aa:	0e 94 ef 04 	call	0x9de	; 0x9de <__mulsf3>
     4ae:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <get_Float>
     4b2:	2d 87       	std	Y+13, r18	; 0x0d
     4b4:	3e 87       	std	Y+14, r19	; 0x0e
     4b6:	4f 87       	std	Y+15, r20	; 0x0f
     4b8:	58 8b       	std	Y+16, r21	; 0x10
     4ba:	69 8b       	std	Y+17, r22	; 0x11
     4bc:	7a 8b       	std	Y+18, r23	; 0x12
		
	/*presion1 = get_Float(P1);
	presion2 = get_Float(P2);
	bateria = get_Float(B1);*/
	cont = ReportCount();
     4be:	0e 94 be 00 	call	0x17c	; 0x17c <ReportCount>
     4c2:	f6 2e       	mov	r15, r22
     4c4:	e7 2e       	mov	r14, r23
     4c6:	d8 2e       	mov	r13, r24
     4c8:	c9 2e       	mov	r12, r25
	
	if(strcmp(command,"MS\r") == 0){
     4ca:	6c e9       	ldi	r22, 0x9C	; 156
     4cc:	70 e9       	ldi	r23, 0x90	; 144
     4ce:	c8 01       	movw	r24, r16
     4d0:	0e 94 6b 05 	call	0xad6	; 0xad6 <strcmp>
     4d4:	89 2b       	or	r24, r25
     4d6:	89 f5       	brne	.+98     	; 0x53a <executeCommand+0xf4>
		printf("RP1%d.%d%dRP2%d.%d%dRQ1%lu.0RV1%d.%d%d\r",presion1.entero,presion1.decimal1,presion1.decimal2,presion2.entero,presion2.decimal1,presion2.decimal2,cont,bateria.entero,bateria.decimal1,bateria.decimal2);
     4d8:	8a 89       	ldd	r24, Y+18	; 0x12
     4da:	8f 93       	push	r24
     4dc:	89 89       	ldd	r24, Y+17	; 0x11
     4de:	8f 93       	push	r24
     4e0:	88 89       	ldd	r24, Y+16	; 0x10
     4e2:	8f 93       	push	r24
     4e4:	8f 85       	ldd	r24, Y+15	; 0x0f
     4e6:	8f 93       	push	r24
     4e8:	8e 85       	ldd	r24, Y+14	; 0x0e
     4ea:	8f 93       	push	r24
     4ec:	8d 85       	ldd	r24, Y+13	; 0x0d
     4ee:	8f 93       	push	r24
     4f0:	cf 92       	push	r12
     4f2:	df 92       	push	r13
     4f4:	ef 92       	push	r14
     4f6:	ff 92       	push	r15
     4f8:	8c 85       	ldd	r24, Y+12	; 0x0c
     4fa:	8f 93       	push	r24
     4fc:	8b 85       	ldd	r24, Y+11	; 0x0b
     4fe:	8f 93       	push	r24
     500:	8a 85       	ldd	r24, Y+10	; 0x0a
     502:	8f 93       	push	r24
     504:	89 85       	ldd	r24, Y+9	; 0x09
     506:	8f 93       	push	r24
     508:	88 85       	ldd	r24, Y+8	; 0x08
     50a:	8f 93       	push	r24
     50c:	8f 81       	ldd	r24, Y+7	; 0x07
     50e:	8f 93       	push	r24
     510:	8e 81       	ldd	r24, Y+6	; 0x06
     512:	8f 93       	push	r24
     514:	8d 81       	ldd	r24, Y+5	; 0x05
     516:	8f 93       	push	r24
     518:	8c 81       	ldd	r24, Y+4	; 0x04
     51a:	8f 93       	push	r24
     51c:	8b 81       	ldd	r24, Y+3	; 0x03
     51e:	8f 93       	push	r24
     520:	8a 81       	ldd	r24, Y+2	; 0x02
     522:	8f 93       	push	r24
     524:	89 81       	ldd	r24, Y+1	; 0x01
     526:	8f 93       	push	r24
     528:	80 ea       	ldi	r24, 0xA0	; 160
     52a:	90 e9       	ldi	r25, 0x90	; 144
     52c:	9f 93       	push	r25
     52e:	8f 93       	push	r24
     530:	0e 94 74 05 	call	0xae8	; 0xae8 <printf>
     534:	cd bf       	out	0x3d, r28	; 61
     536:	de bf       	out	0x3e, r29	; 62
     538:	04 c0       	rjmp	.+8      	; 0x542 <executeCommand+0xfc>
	}
	else{
		USART0_sendString("Incorrect Command\r");
     53a:	88 ec       	ldi	r24, 0xC8	; 200
     53c:	90 e9       	ldi	r25, 0x90	; 144
     53e:	0e 94 3d 01 	call	0x27a	; 0x27a <USART0_sendString>
	}
}
     542:	62 96       	adiw	r28, 0x12	; 18
     544:	cd bf       	out	0x3d, r28	; 61
     546:	de bf       	out	0x3e, r29	; 62
     548:	df 91       	pop	r29
     54a:	cf 91       	pop	r28
     54c:	1f 91       	pop	r17
     54e:	0f 91       	pop	r16
     550:	ff 90       	pop	r15
     552:	ef 90       	pop	r14
     554:	df 90       	pop	r13
     556:	cf 90       	pop	r12
     558:	08 95       	ret

0000055a <main>:

int main(void){
	CLOCK32K_init();
     55a:	0e 94 7c 00 	call	0xf8	; 0xf8 <CLOCK32K_init>
	ADC0_init();
     55e:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <ADC0_init>
	Pin_init();
     562:	0e 94 85 00 	call	0x10a	; 0x10a <Pin_init>
	USART0_init();
     566:	0e 94 67 00 	call	0xce	; 0xce <USART0_init>
		NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
	}
	*(uint8_t *)(5374) = 0x00;
	CPU_CCP = CCP_SPM_gc;
	NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;*/
	sei();
     56a:	78 94       	sei
     56c:	ff cf       	rjmp	.-2      	; 0x56c <main+0x12>

0000056e <__vector_17>:
	}
}

//************** Section Interruptions **************

ISR(USART0_RXC_vect) { 
     56e:	1f 92       	push	r1
     570:	0f 92       	push	r0
     572:	0f b6       	in	r0, 0x3f	; 63
     574:	0f 92       	push	r0
     576:	11 24       	eor	r1, r1
     578:	2f 93       	push	r18
     57a:	3f 93       	push	r19
     57c:	4f 93       	push	r20
     57e:	5f 93       	push	r21
     580:	6f 93       	push	r22
     582:	7f 93       	push	r23
     584:	8f 93       	push	r24
     586:	9f 93       	push	r25
     588:	af 93       	push	r26
     58a:	bf 93       	push	r27
     58c:	ef 93       	push	r30
     58e:	ff 93       	push	r31
     590:	89 e9       	ldi	r24, 0x99	; 153
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	01 97       	sbiw	r24, 0x01	; 1
     596:	f1 f7       	brne	.-4      	; 0x594 <__vector_17+0x26>
     598:	00 c0       	rjmp	.+0      	; 0x59a <__vector_17+0x2c>
	_delay_ms(50);
	c = USART0_RXDATAL;
     59a:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__RODATA_PM_OFFSET__+0x7f8800>
     59e:	80 93 19 38 	sts	0x3819, r24	; 0x803819 <c>
	if(c != 0 && c != '\r')
     5a2:	88 23       	and	r24, r24
     5a4:	81 f0       	breq	.+32     	; 0x5c6 <__vector_17+0x58>
     5a6:	8d 30       	cpi	r24, 0x0D	; 13
     5a8:	71 f0       	breq	.+28     	; 0x5c6 <__vector_17+0x58>
	{
		command[index1] = c;
     5aa:	90 91 16 38 	lds	r25, 0x3816	; 0x803816 <__data_end>
     5ae:	e9 2f       	mov	r30, r25
     5b0:	f0 e0       	ldi	r31, 0x00	; 0
     5b2:	e2 5f       	subi	r30, 0xF2	; 242
     5b4:	f7 4c       	sbci	r31, 0xC7	; 199
     5b6:	80 83       	st	Z, r24
		index1++;
     5b8:	9f 5f       	subi	r25, 0xFF	; 255
     5ba:	90 93 16 38 	sts	0x3816, r25	; 0x803816 <__data_end>
		if(index1 > MAX_COMMAND_LEN)
     5be:	99 30       	cpi	r25, 0x09	; 9
     5c0:	10 f0       	brcs	.+4      	; 0x5c6 <__vector_17+0x58>
		{
			index1 = 0;
     5c2:	10 92 16 38 	sts	0x3816, r1	; 0x803816 <__data_end>
		}
	}
	if(c == '\r')
     5c6:	8d 30       	cpi	r24, 0x0D	; 13
     5c8:	61 f4       	brne	.+24     	; 0x5e2 <__vector_17+0x74>
	{
		command[index1] = '\r';
     5ca:	e0 91 16 38 	lds	r30, 0x3816	; 0x803816 <__data_end>
     5ce:	f0 e0       	ldi	r31, 0x00	; 0
     5d0:	e2 5f       	subi	r30, 0xF2	; 242
     5d2:	f7 4c       	sbci	r31, 0xC7	; 199
     5d4:	80 83       	st	Z, r24
		index1 = 0;
     5d6:	10 92 16 38 	sts	0x3816, r1	; 0x803816 <__data_end>
		
		executeCommand(command);
     5da:	8e e0       	ldi	r24, 0x0E	; 14
     5dc:	98 e3       	ldi	r25, 0x38	; 56
     5de:	0e 94 23 02 	call	0x446	; 0x446 <executeCommand>
	}
}
     5e2:	ff 91       	pop	r31
     5e4:	ef 91       	pop	r30
     5e6:	bf 91       	pop	r27
     5e8:	af 91       	pop	r26
     5ea:	9f 91       	pop	r25
     5ec:	8f 91       	pop	r24
     5ee:	7f 91       	pop	r23
     5f0:	6f 91       	pop	r22
     5f2:	5f 91       	pop	r21
     5f4:	4f 91       	pop	r20
     5f6:	3f 91       	pop	r19
     5f8:	2f 91       	pop	r18
     5fa:	0f 90       	pop	r0
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	0f 90       	pop	r0
     600:	1f 90       	pop	r1
     602:	18 95       	reti

00000604 <__vector_24>:

ISR (PORTC_PORT_vect){
     604:	1f 92       	push	r1
     606:	0f 92       	push	r0
     608:	0f b6       	in	r0, 0x3f	; 63
     60a:	0f 92       	push	r0
     60c:	11 24       	eor	r1, r1
     60e:	2f 93       	push	r18
     610:	3f 93       	push	r19
     612:	4f 93       	push	r20
     614:	5f 93       	push	r21
     616:	6f 93       	push	r22
     618:	7f 93       	push	r23
     61a:	8f 93       	push	r24
     61c:	9f 93       	push	r25
     61e:	af 93       	push	r26
     620:	bf 93       	push	r27
     622:	ef 93       	push	r30
     624:	ff 93       	push	r31
	//Capacitor 20ms ReadSwitch
	//Normal Seametrics
	//_delay_ms(20);
	PORTC_INTFLAGS |= PIN3_bm;
     626:	e9 e4       	ldi	r30, 0x49	; 73
     628:	f4 e0       	ldi	r31, 0x04	; 4
     62a:	80 81       	ld	r24, Z
     62c:	88 60       	ori	r24, 0x08	; 8
     62e:	80 83       	st	Z, r24
	count++;
     630:	80 91 17 38 	lds	r24, 0x3817	; 0x803817 <count>
     634:	90 91 18 38 	lds	r25, 0x3818	; 0x803818 <count+0x1>
     638:	01 96       	adiw	r24, 0x01	; 1
     63a:	80 93 17 38 	sts	0x3817, r24	; 0x803817 <count>
     63e:	90 93 18 38 	sts	0x3818, r25	; 0x803818 <count+0x1>
	printf("%u\r", count);
     642:	9f 93       	push	r25
     644:	8f 93       	push	r24
     646:	8b ed       	ldi	r24, 0xDB	; 219
     648:	90 e9       	ldi	r25, 0x90	; 144
     64a:	9f 93       	push	r25
     64c:	8f 93       	push	r24
     64e:	0e 94 74 05 	call	0xae8	; 0xae8 <printf>
	uint8_t aux = 0;
	uint8_t ant = 0;
	if(*(uint8_t*)(5375) == 0xFF){
     652:	80 91 ff 14 	lds	r24, 0x14FF	; 0x8014ff <__RODATA_PM_OFFSET__+0x7f94ff>
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	8f 3f       	cpi	r24, 0xFF	; 255
     660:	09 f4       	brne	.+2      	; 0x664 <__vector_24+0x60>
     662:	52 c0       	rjmp	.+164    	; 0x708 <__vector_24+0x104>
     664:	e0 e0       	ldi	r30, 0x00	; 0
     666:	f4 e1       	ldi	r31, 0x14	; 20
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	49 c0       	rjmp	.+146    	; 0x6fe <__vector_24+0xfa>
		;
	}
	else{
		for(int i = 5120; i <= 5374; i++){
			ant = aux;
			aux = *(uint8_t*)(i);
     66c:	df 01       	movw	r26, r30
     66e:	80 81       	ld	r24, Z
			if(aux == 0 && i == 5120){
     670:	81 11       	cpse	r24, r1
     672:	0d c0       	rjmp	.+26     	; 0x68e <__vector_24+0x8a>
     674:	e1 15       	cp	r30, r1
     676:	24 e1       	ldi	r18, 0x14	; 20
     678:	f2 07       	cpc	r31, r18
     67a:	49 f4       	brne	.+18     	; 0x68e <__vector_24+0x8a>
				*(uint8_t*)(5120) = aux+1;
     67c:	8f 5f       	subi	r24, 0xFF	; 255
     67e:	80 93 00 14 	sts	0x1400, r24	; 0x801400 <__RODATA_PM_OFFSET__+0x7f9400>
				CPU_CCP = CCP_SPM_gc;
     682:	8d e9       	ldi	r24, 0x9D	; 157
     684:	84 bf       	out	0x34, r24	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
     686:	83 e0       	ldi	r24, 0x03	; 3
     688:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
				break;
     68c:	3d c0       	rjmp	.+122    	; 0x708 <__vector_24+0x104>
			}
			if(aux < ant){
     68e:	89 17       	cp	r24, r25
     690:	40 f4       	brcc	.+16     	; 0x6a2 <__vector_24+0x9e>
				*(uint8_t*)(i) = aux+1;
     692:	8f 5f       	subi	r24, 0xFF	; 255
     694:	8c 93       	st	X, r24
				CPU_CCP = CCP_SPM_gc;
     696:	8d e9       	ldi	r24, 0x9D	; 157
     698:	84 bf       	out	0x34, r24	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
     69a:	83 e0       	ldi	r24, 0x03	; 3
     69c:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
				break;
     6a0:	33 c0       	rjmp	.+102    	; 0x708 <__vector_24+0x104>
			}
			if(i == 5374 && aux == 0xFF){
     6a2:	ee 3f       	cpi	r30, 0xFE	; 254
     6a4:	24 e1       	ldi	r18, 0x14	; 20
     6a6:	f2 07       	cpc	r31, r18
     6a8:	c9 f4       	brne	.+50     	; 0x6dc <__vector_24+0xd8>
     6aa:	8f 3f       	cpi	r24, 0xFF	; 255
     6ac:	b9 f4       	brne	.+46     	; 0x6dc <__vector_24+0xd8>
				*(uint8_t*)(5375) = *(uint8_t*)(5375)+1;
     6ae:	af ef       	ldi	r26, 0xFF	; 255
     6b0:	b4 e1       	ldi	r27, 0x14	; 20
     6b2:	2c 91       	ld	r18, X
     6b4:	2f 5f       	subi	r18, 0xFF	; 255
     6b6:	2c 93       	st	X, r18
				CPU_CCP = CCP_SPM_gc;
     6b8:	2d e9       	ldi	r18, 0x9D	; 157
     6ba:	24 bf       	out	0x34, r18	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
     6bc:	23 e0       	ldi	r18, 0x03	; 3
     6be:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
				for(int i=5120; i<=5374; i++){
     6c2:	a0 e0       	ldi	r26, 0x00	; 0
     6c4:	b4 e1       	ldi	r27, 0x14	; 20
     6c6:	06 c0       	rjmp	.+12     	; 0x6d4 <__vector_24+0xd0>
					*(uint8_t *)(i) = 0x00;
     6c8:	1d 92       	st	X+, r1
					CPU_CCP = CCP_SPM_gc;
     6ca:	2d e9       	ldi	r18, 0x9D	; 157
     6cc:	24 bf       	out	0x34, r18	; 52
					NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
     6ce:	23 e0       	ldi	r18, 0x03	; 3
     6d0:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
			}
			if(i == 5374 && aux == 0xFF){
				*(uint8_t*)(5375) = *(uint8_t*)(5375)+1;
				CPU_CCP = CCP_SPM_gc;
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
				for(int i=5120; i<=5374; i++){
     6d4:	af 3f       	cpi	r26, 0xFF	; 255
     6d6:	24 e1       	ldi	r18, 0x14	; 20
     6d8:	b2 07       	cpc	r27, r18
     6da:	b4 f3       	brlt	.-20     	; 0x6c8 <__vector_24+0xc4>
					*(uint8_t *)(i) = 0x00;
					CPU_CCP = CCP_SPM_gc;
					NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
				}
			}
			if(i == 5374 && ant == aux){
     6dc:	ee 3f       	cpi	r30, 0xFE	; 254
     6de:	24 e1       	ldi	r18, 0x14	; 20
     6e0:	f2 07       	cpc	r31, r18
     6e2:	59 f4       	brne	.+22     	; 0x6fa <__vector_24+0xf6>
     6e4:	98 13       	cpse	r25, r24
     6e6:	09 c0       	rjmp	.+18     	; 0x6fa <__vector_24+0xf6>
				*(uint8_t*)(5120) = aux+1;
     6e8:	91 e0       	ldi	r25, 0x01	; 1
     6ea:	98 0f       	add	r25, r24
     6ec:	90 93 00 14 	sts	0x1400, r25	; 0x801400 <__RODATA_PM_OFFSET__+0x7f9400>
				CPU_CCP = CCP_SPM_gc;
     6f0:	9d e9       	ldi	r25, 0x9D	; 157
     6f2:	94 bf       	out	0x34, r25	; 52
				NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
     6f4:	93 e0       	ldi	r25, 0x03	; 3
     6f6:	90 93 00 10 	sts	0x1000, r25	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
	uint8_t ant = 0;
	if(*(uint8_t*)(5375) == 0xFF){
		;
	}
	else{
		for(int i = 5120; i <= 5374; i++){
     6fa:	31 96       	adiw	r30, 0x01	; 1
			ant = aux;
			aux = *(uint8_t*)(i);
     6fc:	98 2f       	mov	r25, r24
	uint8_t ant = 0;
	if(*(uint8_t*)(5375) == 0xFF){
		;
	}
	else{
		for(int i = 5120; i <= 5374; i++){
     6fe:	ef 3f       	cpi	r30, 0xFF	; 255
     700:	84 e1       	ldi	r24, 0x14	; 20
     702:	f8 07       	cpc	r31, r24
     704:	0c f4       	brge	.+2      	; 0x708 <__vector_24+0x104>
     706:	b2 cf       	rjmp	.-156    	; 0x66c <__vector_24+0x68>
		help2 = help2 + 1;
		*(uint8_t *)(5247) = help2;
		CPU_CCP = CCP_SPM_gc;
		NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
	}*/
}
     708:	ff 91       	pop	r31
     70a:	ef 91       	pop	r30
     70c:	bf 91       	pop	r27
     70e:	af 91       	pop	r26
     710:	9f 91       	pop	r25
     712:	8f 91       	pop	r24
     714:	7f 91       	pop	r23
     716:	6f 91       	pop	r22
     718:	5f 91       	pop	r21
     71a:	4f 91       	pop	r20
     71c:	3f 91       	pop	r19
     71e:	2f 91       	pop	r18
     720:	0f 90       	pop	r0
     722:	0f be       	out	0x3f, r0	; 63
     724:	0f 90       	pop	r0
     726:	1f 90       	pop	r1
     728:	18 95       	reti

0000072a <__subsf3>:
     72a:	50 58       	subi	r21, 0x80	; 128

0000072c <__addsf3>:
     72c:	bb 27       	eor	r27, r27
     72e:	aa 27       	eor	r26, r26
     730:	0e 94 ad 03 	call	0x75a	; 0x75a <__addsf3x>
     734:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__fp_round>
     738:	0e 94 a7 04 	call	0x94e	; 0x94e <__fp_pscA>
     73c:	38 f0       	brcs	.+14     	; 0x74c <__addsf3+0x20>
     73e:	0e 94 ae 04 	call	0x95c	; 0x95c <__fp_pscB>
     742:	20 f0       	brcs	.+8      	; 0x74c <__addsf3+0x20>
     744:	39 f4       	brne	.+14     	; 0x754 <__addsf3+0x28>
     746:	9f 3f       	cpi	r25, 0xFF	; 255
     748:	19 f4       	brne	.+6      	; 0x750 <__addsf3+0x24>
     74a:	26 f4       	brtc	.+8      	; 0x754 <__addsf3+0x28>
     74c:	0c 94 a4 04 	jmp	0x948	; 0x948 <__fp_nan>
     750:	0e f4       	brtc	.+2      	; 0x754 <__addsf3+0x28>
     752:	e0 95       	com	r30
     754:	e7 fb       	bst	r30, 7
     756:	0c 94 9e 04 	jmp	0x93c	; 0x93c <__fp_inf>

0000075a <__addsf3x>:
     75a:	e9 2f       	mov	r30, r25
     75c:	0e 94 c6 04 	call	0x98c	; 0x98c <__fp_split3>
     760:	58 f3       	brcs	.-42     	; 0x738 <__addsf3+0xc>
     762:	ba 17       	cp	r27, r26
     764:	62 07       	cpc	r22, r18
     766:	73 07       	cpc	r23, r19
     768:	84 07       	cpc	r24, r20
     76a:	95 07       	cpc	r25, r21
     76c:	20 f0       	brcs	.+8      	; 0x776 <__addsf3x+0x1c>
     76e:	79 f4       	brne	.+30     	; 0x78e <__addsf3x+0x34>
     770:	a6 f5       	brtc	.+104    	; 0x7da <__addsf3x+0x80>
     772:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__fp_zero>
     776:	0e f4       	brtc	.+2      	; 0x77a <__addsf3x+0x20>
     778:	e0 95       	com	r30
     77a:	0b 2e       	mov	r0, r27
     77c:	ba 2f       	mov	r27, r26
     77e:	a0 2d       	mov	r26, r0
     780:	0b 01       	movw	r0, r22
     782:	b9 01       	movw	r22, r18
     784:	90 01       	movw	r18, r0
     786:	0c 01       	movw	r0, r24
     788:	ca 01       	movw	r24, r20
     78a:	a0 01       	movw	r20, r0
     78c:	11 24       	eor	r1, r1
     78e:	ff 27       	eor	r31, r31
     790:	59 1b       	sub	r21, r25
     792:	99 f0       	breq	.+38     	; 0x7ba <__addsf3x+0x60>
     794:	59 3f       	cpi	r21, 0xF9	; 249
     796:	50 f4       	brcc	.+20     	; 0x7ac <__addsf3x+0x52>
     798:	50 3e       	cpi	r21, 0xE0	; 224
     79a:	68 f1       	brcs	.+90     	; 0x7f6 <__addsf3x+0x9c>
     79c:	1a 16       	cp	r1, r26
     79e:	f0 40       	sbci	r31, 0x00	; 0
     7a0:	a2 2f       	mov	r26, r18
     7a2:	23 2f       	mov	r18, r19
     7a4:	34 2f       	mov	r19, r20
     7a6:	44 27       	eor	r20, r20
     7a8:	58 5f       	subi	r21, 0xF8	; 248
     7aa:	f3 cf       	rjmp	.-26     	; 0x792 <__addsf3x+0x38>
     7ac:	46 95       	lsr	r20
     7ae:	37 95       	ror	r19
     7b0:	27 95       	ror	r18
     7b2:	a7 95       	ror	r26
     7b4:	f0 40       	sbci	r31, 0x00	; 0
     7b6:	53 95       	inc	r21
     7b8:	c9 f7       	brne	.-14     	; 0x7ac <__addsf3x+0x52>
     7ba:	7e f4       	brtc	.+30     	; 0x7da <__addsf3x+0x80>
     7bc:	1f 16       	cp	r1, r31
     7be:	ba 0b       	sbc	r27, r26
     7c0:	62 0b       	sbc	r22, r18
     7c2:	73 0b       	sbc	r23, r19
     7c4:	84 0b       	sbc	r24, r20
     7c6:	ba f0       	brmi	.+46     	; 0x7f6 <__addsf3x+0x9c>
     7c8:	91 50       	subi	r25, 0x01	; 1
     7ca:	a1 f0       	breq	.+40     	; 0x7f4 <__addsf3x+0x9a>
     7cc:	ff 0f       	add	r31, r31
     7ce:	bb 1f       	adc	r27, r27
     7d0:	66 1f       	adc	r22, r22
     7d2:	77 1f       	adc	r23, r23
     7d4:	88 1f       	adc	r24, r24
     7d6:	c2 f7       	brpl	.-16     	; 0x7c8 <__addsf3x+0x6e>
     7d8:	0e c0       	rjmp	.+28     	; 0x7f6 <__addsf3x+0x9c>
     7da:	ba 0f       	add	r27, r26
     7dc:	62 1f       	adc	r22, r18
     7de:	73 1f       	adc	r23, r19
     7e0:	84 1f       	adc	r24, r20
     7e2:	48 f4       	brcc	.+18     	; 0x7f6 <__addsf3x+0x9c>
     7e4:	87 95       	ror	r24
     7e6:	77 95       	ror	r23
     7e8:	67 95       	ror	r22
     7ea:	b7 95       	ror	r27
     7ec:	f7 95       	ror	r31
     7ee:	9e 3f       	cpi	r25, 0xFE	; 254
     7f0:	08 f0       	brcs	.+2      	; 0x7f4 <__addsf3x+0x9a>
     7f2:	b0 cf       	rjmp	.-160    	; 0x754 <__addsf3+0x28>
     7f4:	93 95       	inc	r25
     7f6:	88 0f       	add	r24, r24
     7f8:	08 f0       	brcs	.+2      	; 0x7fc <__addsf3x+0xa2>
     7fa:	99 27       	eor	r25, r25
     7fc:	ee 0f       	add	r30, r30
     7fe:	97 95       	ror	r25
     800:	87 95       	ror	r24
     802:	08 95       	ret

00000804 <__cmpsf2>:
     804:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <__fp_cmp>
     808:	08 f4       	brcc	.+2      	; 0x80c <__cmpsf2+0x8>
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	08 95       	ret

0000080e <__fixsfsi>:
     80e:	0e 94 0e 04 	call	0x81c	; 0x81c <__fixunssfsi>
     812:	68 94       	set
     814:	b1 11       	cpse	r27, r1
     816:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__fp_szero>
     81a:	08 95       	ret

0000081c <__fixunssfsi>:
     81c:	0e 94 ce 04 	call	0x99c	; 0x99c <__fp_splitA>
     820:	88 f0       	brcs	.+34     	; 0x844 <__fixunssfsi+0x28>
     822:	9f 57       	subi	r25, 0x7F	; 127
     824:	98 f0       	brcs	.+38     	; 0x84c <__fixunssfsi+0x30>
     826:	b9 2f       	mov	r27, r25
     828:	99 27       	eor	r25, r25
     82a:	b7 51       	subi	r27, 0x17	; 23
     82c:	b0 f0       	brcs	.+44     	; 0x85a <__fixunssfsi+0x3e>
     82e:	e1 f0       	breq	.+56     	; 0x868 <__fixunssfsi+0x4c>
     830:	66 0f       	add	r22, r22
     832:	77 1f       	adc	r23, r23
     834:	88 1f       	adc	r24, r24
     836:	99 1f       	adc	r25, r25
     838:	1a f0       	brmi	.+6      	; 0x840 <__fixunssfsi+0x24>
     83a:	ba 95       	dec	r27
     83c:	c9 f7       	brne	.-14     	; 0x830 <__fixunssfsi+0x14>
     83e:	14 c0       	rjmp	.+40     	; 0x868 <__fixunssfsi+0x4c>
     840:	b1 30       	cpi	r27, 0x01	; 1
     842:	91 f0       	breq	.+36     	; 0x868 <__fixunssfsi+0x4c>
     844:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__fp_zero>
     848:	b1 e0       	ldi	r27, 0x01	; 1
     84a:	08 95       	ret
     84c:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__fp_zero>
     850:	67 2f       	mov	r22, r23
     852:	78 2f       	mov	r23, r24
     854:	88 27       	eor	r24, r24
     856:	b8 5f       	subi	r27, 0xF8	; 248
     858:	39 f0       	breq	.+14     	; 0x868 <__fixunssfsi+0x4c>
     85a:	b9 3f       	cpi	r27, 0xF9	; 249
     85c:	cc f3       	brlt	.-14     	; 0x850 <__fixunssfsi+0x34>
     85e:	86 95       	lsr	r24
     860:	77 95       	ror	r23
     862:	67 95       	ror	r22
     864:	b3 95       	inc	r27
     866:	d9 f7       	brne	.-10     	; 0x85e <__fixunssfsi+0x42>
     868:	3e f4       	brtc	.+14     	; 0x878 <__fixunssfsi+0x5c>
     86a:	90 95       	com	r25
     86c:	80 95       	com	r24
     86e:	70 95       	com	r23
     870:	61 95       	neg	r22
     872:	7f 4f       	sbci	r23, 0xFF	; 255
     874:	8f 4f       	sbci	r24, 0xFF	; 255
     876:	9f 4f       	sbci	r25, 0xFF	; 255
     878:	08 95       	ret

0000087a <__floatunsisf>:
     87a:	e8 94       	clt
     87c:	09 c0       	rjmp	.+18     	; 0x890 <__floatsisf+0x12>

0000087e <__floatsisf>:
     87e:	97 fb       	bst	r25, 7
     880:	3e f4       	brtc	.+14     	; 0x890 <__floatsisf+0x12>
     882:	90 95       	com	r25
     884:	80 95       	com	r24
     886:	70 95       	com	r23
     888:	61 95       	neg	r22
     88a:	7f 4f       	sbci	r23, 0xFF	; 255
     88c:	8f 4f       	sbci	r24, 0xFF	; 255
     88e:	9f 4f       	sbci	r25, 0xFF	; 255
     890:	99 23       	and	r25, r25
     892:	a9 f0       	breq	.+42     	; 0x8be <__floatsisf+0x40>
     894:	f9 2f       	mov	r31, r25
     896:	96 e9       	ldi	r25, 0x96	; 150
     898:	bb 27       	eor	r27, r27
     89a:	93 95       	inc	r25
     89c:	f6 95       	lsr	r31
     89e:	87 95       	ror	r24
     8a0:	77 95       	ror	r23
     8a2:	67 95       	ror	r22
     8a4:	b7 95       	ror	r27
     8a6:	f1 11       	cpse	r31, r1
     8a8:	f8 cf       	rjmp	.-16     	; 0x89a <__floatsisf+0x1c>
     8aa:	fa f4       	brpl	.+62     	; 0x8ea <__floatsisf+0x6c>
     8ac:	bb 0f       	add	r27, r27
     8ae:	11 f4       	brne	.+4      	; 0x8b4 <__floatsisf+0x36>
     8b0:	60 ff       	sbrs	r22, 0
     8b2:	1b c0       	rjmp	.+54     	; 0x8ea <__floatsisf+0x6c>
     8b4:	6f 5f       	subi	r22, 0xFF	; 255
     8b6:	7f 4f       	sbci	r23, 0xFF	; 255
     8b8:	8f 4f       	sbci	r24, 0xFF	; 255
     8ba:	9f 4f       	sbci	r25, 0xFF	; 255
     8bc:	16 c0       	rjmp	.+44     	; 0x8ea <__floatsisf+0x6c>
     8be:	88 23       	and	r24, r24
     8c0:	11 f0       	breq	.+4      	; 0x8c6 <__floatsisf+0x48>
     8c2:	96 e9       	ldi	r25, 0x96	; 150
     8c4:	11 c0       	rjmp	.+34     	; 0x8e8 <__floatsisf+0x6a>
     8c6:	77 23       	and	r23, r23
     8c8:	21 f0       	breq	.+8      	; 0x8d2 <__floatsisf+0x54>
     8ca:	9e e8       	ldi	r25, 0x8E	; 142
     8cc:	87 2f       	mov	r24, r23
     8ce:	76 2f       	mov	r23, r22
     8d0:	05 c0       	rjmp	.+10     	; 0x8dc <__floatsisf+0x5e>
     8d2:	66 23       	and	r22, r22
     8d4:	71 f0       	breq	.+28     	; 0x8f2 <__floatsisf+0x74>
     8d6:	96 e8       	ldi	r25, 0x86	; 134
     8d8:	86 2f       	mov	r24, r22
     8da:	70 e0       	ldi	r23, 0x00	; 0
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	2a f0       	brmi	.+10     	; 0x8ea <__floatsisf+0x6c>
     8e0:	9a 95       	dec	r25
     8e2:	66 0f       	add	r22, r22
     8e4:	77 1f       	adc	r23, r23
     8e6:	88 1f       	adc	r24, r24
     8e8:	da f7       	brpl	.-10     	; 0x8e0 <__floatsisf+0x62>
     8ea:	88 0f       	add	r24, r24
     8ec:	96 95       	lsr	r25
     8ee:	87 95       	ror	r24
     8f0:	97 f9       	bld	r25, 7
     8f2:	08 95       	ret

000008f4 <__fp_cmp>:
     8f4:	99 0f       	add	r25, r25
     8f6:	00 08       	sbc	r0, r0
     8f8:	55 0f       	add	r21, r21
     8fa:	aa 0b       	sbc	r26, r26
     8fc:	e0 e8       	ldi	r30, 0x80	; 128
     8fe:	fe ef       	ldi	r31, 0xFE	; 254
     900:	16 16       	cp	r1, r22
     902:	17 06       	cpc	r1, r23
     904:	e8 07       	cpc	r30, r24
     906:	f9 07       	cpc	r31, r25
     908:	c0 f0       	brcs	.+48     	; 0x93a <__fp_cmp+0x46>
     90a:	12 16       	cp	r1, r18
     90c:	13 06       	cpc	r1, r19
     90e:	e4 07       	cpc	r30, r20
     910:	f5 07       	cpc	r31, r21
     912:	98 f0       	brcs	.+38     	; 0x93a <__fp_cmp+0x46>
     914:	62 1b       	sub	r22, r18
     916:	73 0b       	sbc	r23, r19
     918:	84 0b       	sbc	r24, r20
     91a:	95 0b       	sbc	r25, r21
     91c:	39 f4       	brne	.+14     	; 0x92c <__fp_cmp+0x38>
     91e:	0a 26       	eor	r0, r26
     920:	61 f0       	breq	.+24     	; 0x93a <__fp_cmp+0x46>
     922:	23 2b       	or	r18, r19
     924:	24 2b       	or	r18, r20
     926:	25 2b       	or	r18, r21
     928:	21 f4       	brne	.+8      	; 0x932 <__fp_cmp+0x3e>
     92a:	08 95       	ret
     92c:	0a 26       	eor	r0, r26
     92e:	09 f4       	brne	.+2      	; 0x932 <__fp_cmp+0x3e>
     930:	a1 40       	sbci	r26, 0x01	; 1
     932:	a6 95       	lsr	r26
     934:	8f ef       	ldi	r24, 0xFF	; 255
     936:	81 1d       	adc	r24, r1
     938:	81 1d       	adc	r24, r1
     93a:	08 95       	ret

0000093c <__fp_inf>:
     93c:	97 f9       	bld	r25, 7
     93e:	9f 67       	ori	r25, 0x7F	; 127
     940:	80 e8       	ldi	r24, 0x80	; 128
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	60 e0       	ldi	r22, 0x00	; 0
     946:	08 95       	ret

00000948 <__fp_nan>:
     948:	9f ef       	ldi	r25, 0xFF	; 255
     94a:	80 ec       	ldi	r24, 0xC0	; 192
     94c:	08 95       	ret

0000094e <__fp_pscA>:
     94e:	00 24       	eor	r0, r0
     950:	0a 94       	dec	r0
     952:	16 16       	cp	r1, r22
     954:	17 06       	cpc	r1, r23
     956:	18 06       	cpc	r1, r24
     958:	09 06       	cpc	r0, r25
     95a:	08 95       	ret

0000095c <__fp_pscB>:
     95c:	00 24       	eor	r0, r0
     95e:	0a 94       	dec	r0
     960:	12 16       	cp	r1, r18
     962:	13 06       	cpc	r1, r19
     964:	14 06       	cpc	r1, r20
     966:	05 06       	cpc	r0, r21
     968:	08 95       	ret

0000096a <__fp_round>:
     96a:	09 2e       	mov	r0, r25
     96c:	03 94       	inc	r0
     96e:	00 0c       	add	r0, r0
     970:	11 f4       	brne	.+4      	; 0x976 <__fp_round+0xc>
     972:	88 23       	and	r24, r24
     974:	52 f0       	brmi	.+20     	; 0x98a <__fp_round+0x20>
     976:	bb 0f       	add	r27, r27
     978:	40 f4       	brcc	.+16     	; 0x98a <__fp_round+0x20>
     97a:	bf 2b       	or	r27, r31
     97c:	11 f4       	brne	.+4      	; 0x982 <__fp_round+0x18>
     97e:	60 ff       	sbrs	r22, 0
     980:	04 c0       	rjmp	.+8      	; 0x98a <__fp_round+0x20>
     982:	6f 5f       	subi	r22, 0xFF	; 255
     984:	7f 4f       	sbci	r23, 0xFF	; 255
     986:	8f 4f       	sbci	r24, 0xFF	; 255
     988:	9f 4f       	sbci	r25, 0xFF	; 255
     98a:	08 95       	ret

0000098c <__fp_split3>:
     98c:	57 fd       	sbrc	r21, 7
     98e:	90 58       	subi	r25, 0x80	; 128
     990:	44 0f       	add	r20, r20
     992:	55 1f       	adc	r21, r21
     994:	59 f0       	breq	.+22     	; 0x9ac <__fp_splitA+0x10>
     996:	5f 3f       	cpi	r21, 0xFF	; 255
     998:	71 f0       	breq	.+28     	; 0x9b6 <__fp_splitA+0x1a>
     99a:	47 95       	ror	r20

0000099c <__fp_splitA>:
     99c:	88 0f       	add	r24, r24
     99e:	97 fb       	bst	r25, 7
     9a0:	99 1f       	adc	r25, r25
     9a2:	61 f0       	breq	.+24     	; 0x9bc <__fp_splitA+0x20>
     9a4:	9f 3f       	cpi	r25, 0xFF	; 255
     9a6:	79 f0       	breq	.+30     	; 0x9c6 <__fp_splitA+0x2a>
     9a8:	87 95       	ror	r24
     9aa:	08 95       	ret
     9ac:	12 16       	cp	r1, r18
     9ae:	13 06       	cpc	r1, r19
     9b0:	14 06       	cpc	r1, r20
     9b2:	55 1f       	adc	r21, r21
     9b4:	f2 cf       	rjmp	.-28     	; 0x99a <__fp_split3+0xe>
     9b6:	46 95       	lsr	r20
     9b8:	f1 df       	rcall	.-30     	; 0x99c <__fp_splitA>
     9ba:	08 c0       	rjmp	.+16     	; 0x9cc <__fp_splitA+0x30>
     9bc:	16 16       	cp	r1, r22
     9be:	17 06       	cpc	r1, r23
     9c0:	18 06       	cpc	r1, r24
     9c2:	99 1f       	adc	r25, r25
     9c4:	f1 cf       	rjmp	.-30     	; 0x9a8 <__fp_splitA+0xc>
     9c6:	86 95       	lsr	r24
     9c8:	71 05       	cpc	r23, r1
     9ca:	61 05       	cpc	r22, r1
     9cc:	08 94       	sec
     9ce:	08 95       	ret

000009d0 <__fp_zero>:
     9d0:	e8 94       	clt

000009d2 <__fp_szero>:
     9d2:	bb 27       	eor	r27, r27
     9d4:	66 27       	eor	r22, r22
     9d6:	77 27       	eor	r23, r23
     9d8:	cb 01       	movw	r24, r22
     9da:	97 f9       	bld	r25, 7
     9dc:	08 95       	ret

000009de <__mulsf3>:
     9de:	0e 94 02 05 	call	0xa04	; 0xa04 <__mulsf3x>
     9e2:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__fp_round>
     9e6:	0e 94 a7 04 	call	0x94e	; 0x94e <__fp_pscA>
     9ea:	38 f0       	brcs	.+14     	; 0x9fa <__mulsf3+0x1c>
     9ec:	0e 94 ae 04 	call	0x95c	; 0x95c <__fp_pscB>
     9f0:	20 f0       	brcs	.+8      	; 0x9fa <__mulsf3+0x1c>
     9f2:	95 23       	and	r25, r21
     9f4:	11 f0       	breq	.+4      	; 0x9fa <__mulsf3+0x1c>
     9f6:	0c 94 9e 04 	jmp	0x93c	; 0x93c <__fp_inf>
     9fa:	0c 94 a4 04 	jmp	0x948	; 0x948 <__fp_nan>
     9fe:	11 24       	eor	r1, r1
     a00:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__fp_szero>

00000a04 <__mulsf3x>:
     a04:	0e 94 c6 04 	call	0x98c	; 0x98c <__fp_split3>
     a08:	70 f3       	brcs	.-36     	; 0x9e6 <__mulsf3+0x8>

00000a0a <__mulsf3_pse>:
     a0a:	95 9f       	mul	r25, r21
     a0c:	c1 f3       	breq	.-16     	; 0x9fe <__mulsf3+0x20>
     a0e:	95 0f       	add	r25, r21
     a10:	50 e0       	ldi	r21, 0x00	; 0
     a12:	55 1f       	adc	r21, r21
     a14:	62 9f       	mul	r22, r18
     a16:	f0 01       	movw	r30, r0
     a18:	72 9f       	mul	r23, r18
     a1a:	bb 27       	eor	r27, r27
     a1c:	f0 0d       	add	r31, r0
     a1e:	b1 1d       	adc	r27, r1
     a20:	63 9f       	mul	r22, r19
     a22:	aa 27       	eor	r26, r26
     a24:	f0 0d       	add	r31, r0
     a26:	b1 1d       	adc	r27, r1
     a28:	aa 1f       	adc	r26, r26
     a2a:	64 9f       	mul	r22, r20
     a2c:	66 27       	eor	r22, r22
     a2e:	b0 0d       	add	r27, r0
     a30:	a1 1d       	adc	r26, r1
     a32:	66 1f       	adc	r22, r22
     a34:	82 9f       	mul	r24, r18
     a36:	22 27       	eor	r18, r18
     a38:	b0 0d       	add	r27, r0
     a3a:	a1 1d       	adc	r26, r1
     a3c:	62 1f       	adc	r22, r18
     a3e:	73 9f       	mul	r23, r19
     a40:	b0 0d       	add	r27, r0
     a42:	a1 1d       	adc	r26, r1
     a44:	62 1f       	adc	r22, r18
     a46:	83 9f       	mul	r24, r19
     a48:	a0 0d       	add	r26, r0
     a4a:	61 1d       	adc	r22, r1
     a4c:	22 1f       	adc	r18, r18
     a4e:	74 9f       	mul	r23, r20
     a50:	33 27       	eor	r19, r19
     a52:	a0 0d       	add	r26, r0
     a54:	61 1d       	adc	r22, r1
     a56:	23 1f       	adc	r18, r19
     a58:	84 9f       	mul	r24, r20
     a5a:	60 0d       	add	r22, r0
     a5c:	21 1d       	adc	r18, r1
     a5e:	82 2f       	mov	r24, r18
     a60:	76 2f       	mov	r23, r22
     a62:	6a 2f       	mov	r22, r26
     a64:	11 24       	eor	r1, r1
     a66:	9f 57       	subi	r25, 0x7F	; 127
     a68:	50 40       	sbci	r21, 0x00	; 0
     a6a:	9a f0       	brmi	.+38     	; 0xa92 <__mulsf3_pse+0x88>
     a6c:	f1 f0       	breq	.+60     	; 0xaaa <__mulsf3_pse+0xa0>
     a6e:	88 23       	and	r24, r24
     a70:	4a f0       	brmi	.+18     	; 0xa84 <__mulsf3_pse+0x7a>
     a72:	ee 0f       	add	r30, r30
     a74:	ff 1f       	adc	r31, r31
     a76:	bb 1f       	adc	r27, r27
     a78:	66 1f       	adc	r22, r22
     a7a:	77 1f       	adc	r23, r23
     a7c:	88 1f       	adc	r24, r24
     a7e:	91 50       	subi	r25, 0x01	; 1
     a80:	50 40       	sbci	r21, 0x00	; 0
     a82:	a9 f7       	brne	.-22     	; 0xa6e <__mulsf3_pse+0x64>
     a84:	9e 3f       	cpi	r25, 0xFE	; 254
     a86:	51 05       	cpc	r21, r1
     a88:	80 f0       	brcs	.+32     	; 0xaaa <__mulsf3_pse+0xa0>
     a8a:	0c 94 9e 04 	jmp	0x93c	; 0x93c <__fp_inf>
     a8e:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <__fp_szero>
     a92:	5f 3f       	cpi	r21, 0xFF	; 255
     a94:	e4 f3       	brlt	.-8      	; 0xa8e <__mulsf3_pse+0x84>
     a96:	98 3e       	cpi	r25, 0xE8	; 232
     a98:	d4 f3       	brlt	.-12     	; 0xa8e <__mulsf3_pse+0x84>
     a9a:	86 95       	lsr	r24
     a9c:	77 95       	ror	r23
     a9e:	67 95       	ror	r22
     aa0:	b7 95       	ror	r27
     aa2:	f7 95       	ror	r31
     aa4:	e7 95       	ror	r30
     aa6:	9f 5f       	subi	r25, 0xFF	; 255
     aa8:	c1 f7       	brne	.-16     	; 0xa9a <__mulsf3_pse+0x90>
     aaa:	fe 2b       	or	r31, r30
     aac:	88 0f       	add	r24, r24
     aae:	91 1d       	adc	r25, r1
     ab0:	96 95       	lsr	r25
     ab2:	87 95       	ror	r24
     ab4:	97 f9       	bld	r25, 7
     ab6:	08 95       	ret

00000ab8 <__umulhisi3>:
     ab8:	a2 9f       	mul	r26, r18
     aba:	b0 01       	movw	r22, r0
     abc:	b3 9f       	mul	r27, r19
     abe:	c0 01       	movw	r24, r0
     ac0:	a3 9f       	mul	r26, r19
     ac2:	70 0d       	add	r23, r0
     ac4:	81 1d       	adc	r24, r1
     ac6:	11 24       	eor	r1, r1
     ac8:	91 1d       	adc	r25, r1
     aca:	b2 9f       	mul	r27, r18
     acc:	70 0d       	add	r23, r0
     ace:	81 1d       	adc	r24, r1
     ad0:	11 24       	eor	r1, r1
     ad2:	91 1d       	adc	r25, r1
     ad4:	08 95       	ret

00000ad6 <strcmp>:
     ad6:	fb 01       	movw	r30, r22
     ad8:	dc 01       	movw	r26, r24
     ada:	8d 91       	ld	r24, X+
     adc:	01 90       	ld	r0, Z+
     ade:	80 19       	sub	r24, r0
     ae0:	01 10       	cpse	r0, r1
     ae2:	d9 f3       	breq	.-10     	; 0xada <strcmp+0x4>
     ae4:	99 0b       	sbc	r25, r25
     ae6:	08 95       	ret

00000ae8 <printf>:
     ae8:	a0 e0       	ldi	r26, 0x00	; 0
     aea:	b0 e0       	ldi	r27, 0x00	; 0
     aec:	ea e7       	ldi	r30, 0x7A	; 122
     aee:	f5 e0       	ldi	r31, 0x05	; 5
     af0:	0c 94 2b 08 	jmp	0x1056	; 0x1056 <__prologue_saves__+0x20>
     af4:	ae 01       	movw	r20, r28
     af6:	4b 5f       	subi	r20, 0xFB	; 251
     af8:	5f 4f       	sbci	r21, 0xFF	; 255
     afa:	fa 01       	movw	r30, r20
     afc:	61 91       	ld	r22, Z+
     afe:	71 91       	ld	r23, Z+
     b00:	af 01       	movw	r20, r30
     b02:	80 91 1c 38 	lds	r24, 0x381C	; 0x80381c <__iob+0x2>
     b06:	90 91 1d 38 	lds	r25, 0x381D	; 0x80381d <__iob+0x3>
     b0a:	0e 94 8a 05 	call	0xb14	; 0xb14 <vfprintf>
     b0e:	e2 e0       	ldi	r30, 0x02	; 2
     b10:	0c 94 44 08 	jmp	0x1088	; 0x1088 <__epilogue_restores__+0x20>

00000b14 <vfprintf>:
     b14:	ab e0       	ldi	r26, 0x0B	; 11
     b16:	b0 e0       	ldi	r27, 0x00	; 0
     b18:	e0 e9       	ldi	r30, 0x90	; 144
     b1a:	f5 e0       	ldi	r31, 0x05	; 5
     b1c:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__prologue_saves__>
     b20:	6c 01       	movw	r12, r24
     b22:	7b 01       	movw	r14, r22
     b24:	8a 01       	movw	r16, r20
     b26:	fc 01       	movw	r30, r24
     b28:	16 82       	std	Z+6, r1	; 0x06
     b2a:	17 82       	std	Z+7, r1	; 0x07
     b2c:	83 81       	ldd	r24, Z+3	; 0x03
     b2e:	81 ff       	sbrs	r24, 1
     b30:	cc c1       	rjmp	.+920    	; 0xeca <vfprintf+0x3b6>
     b32:	ce 01       	movw	r24, r28
     b34:	01 96       	adiw	r24, 0x01	; 1
     b36:	3c 01       	movw	r6, r24
     b38:	f6 01       	movw	r30, r12
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	f7 01       	movw	r30, r14
     b3e:	93 fd       	sbrc	r25, 3
     b40:	85 91       	lpm	r24, Z+
     b42:	93 ff       	sbrs	r25, 3
     b44:	81 91       	ld	r24, Z+
     b46:	7f 01       	movw	r14, r30
     b48:	88 23       	and	r24, r24
     b4a:	09 f4       	brne	.+2      	; 0xb4e <vfprintf+0x3a>
     b4c:	ba c1       	rjmp	.+884    	; 0xec2 <vfprintf+0x3ae>
     b4e:	85 32       	cpi	r24, 0x25	; 37
     b50:	39 f4       	brne	.+14     	; 0xb60 <vfprintf+0x4c>
     b52:	93 fd       	sbrc	r25, 3
     b54:	85 91       	lpm	r24, Z+
     b56:	93 ff       	sbrs	r25, 3
     b58:	81 91       	ld	r24, Z+
     b5a:	7f 01       	movw	r14, r30
     b5c:	85 32       	cpi	r24, 0x25	; 37
     b5e:	29 f4       	brne	.+10     	; 0xb6a <vfprintf+0x56>
     b60:	b6 01       	movw	r22, r12
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     b68:	e7 cf       	rjmp	.-50     	; 0xb38 <vfprintf+0x24>
     b6a:	91 2c       	mov	r9, r1
     b6c:	21 2c       	mov	r2, r1
     b6e:	31 2c       	mov	r3, r1
     b70:	ff e1       	ldi	r31, 0x1F	; 31
     b72:	f3 15       	cp	r31, r3
     b74:	d8 f0       	brcs	.+54     	; 0xbac <vfprintf+0x98>
     b76:	8b 32       	cpi	r24, 0x2B	; 43
     b78:	79 f0       	breq	.+30     	; 0xb98 <vfprintf+0x84>
     b7a:	38 f4       	brcc	.+14     	; 0xb8a <vfprintf+0x76>
     b7c:	80 32       	cpi	r24, 0x20	; 32
     b7e:	79 f0       	breq	.+30     	; 0xb9e <vfprintf+0x8a>
     b80:	83 32       	cpi	r24, 0x23	; 35
     b82:	a1 f4       	brne	.+40     	; 0xbac <vfprintf+0x98>
     b84:	23 2d       	mov	r18, r3
     b86:	20 61       	ori	r18, 0x10	; 16
     b88:	1d c0       	rjmp	.+58     	; 0xbc4 <vfprintf+0xb0>
     b8a:	8d 32       	cpi	r24, 0x2D	; 45
     b8c:	61 f0       	breq	.+24     	; 0xba6 <vfprintf+0x92>
     b8e:	80 33       	cpi	r24, 0x30	; 48
     b90:	69 f4       	brne	.+26     	; 0xbac <vfprintf+0x98>
     b92:	23 2d       	mov	r18, r3
     b94:	21 60       	ori	r18, 0x01	; 1
     b96:	16 c0       	rjmp	.+44     	; 0xbc4 <vfprintf+0xb0>
     b98:	83 2d       	mov	r24, r3
     b9a:	82 60       	ori	r24, 0x02	; 2
     b9c:	38 2e       	mov	r3, r24
     b9e:	e3 2d       	mov	r30, r3
     ba0:	e4 60       	ori	r30, 0x04	; 4
     ba2:	3e 2e       	mov	r3, r30
     ba4:	2a c0       	rjmp	.+84     	; 0xbfa <vfprintf+0xe6>
     ba6:	f3 2d       	mov	r31, r3
     ba8:	f8 60       	ori	r31, 0x08	; 8
     baa:	1d c0       	rjmp	.+58     	; 0xbe6 <vfprintf+0xd2>
     bac:	37 fc       	sbrc	r3, 7
     bae:	2d c0       	rjmp	.+90     	; 0xc0a <vfprintf+0xf6>
     bb0:	20 ed       	ldi	r18, 0xD0	; 208
     bb2:	28 0f       	add	r18, r24
     bb4:	2a 30       	cpi	r18, 0x0A	; 10
     bb6:	40 f0       	brcs	.+16     	; 0xbc8 <vfprintf+0xb4>
     bb8:	8e 32       	cpi	r24, 0x2E	; 46
     bba:	b9 f4       	brne	.+46     	; 0xbea <vfprintf+0xd6>
     bbc:	36 fc       	sbrc	r3, 6
     bbe:	81 c1       	rjmp	.+770    	; 0xec2 <vfprintf+0x3ae>
     bc0:	23 2d       	mov	r18, r3
     bc2:	20 64       	ori	r18, 0x40	; 64
     bc4:	32 2e       	mov	r3, r18
     bc6:	19 c0       	rjmp	.+50     	; 0xbfa <vfprintf+0xe6>
     bc8:	36 fe       	sbrs	r3, 6
     bca:	06 c0       	rjmp	.+12     	; 0xbd8 <vfprintf+0xc4>
     bcc:	8a e0       	ldi	r24, 0x0A	; 10
     bce:	98 9e       	mul	r9, r24
     bd0:	20 0d       	add	r18, r0
     bd2:	11 24       	eor	r1, r1
     bd4:	92 2e       	mov	r9, r18
     bd6:	11 c0       	rjmp	.+34     	; 0xbfa <vfprintf+0xe6>
     bd8:	ea e0       	ldi	r30, 0x0A	; 10
     bda:	2e 9e       	mul	r2, r30
     bdc:	20 0d       	add	r18, r0
     bde:	11 24       	eor	r1, r1
     be0:	22 2e       	mov	r2, r18
     be2:	f3 2d       	mov	r31, r3
     be4:	f0 62       	ori	r31, 0x20	; 32
     be6:	3f 2e       	mov	r3, r31
     be8:	08 c0       	rjmp	.+16     	; 0xbfa <vfprintf+0xe6>
     bea:	8c 36       	cpi	r24, 0x6C	; 108
     bec:	21 f4       	brne	.+8      	; 0xbf6 <vfprintf+0xe2>
     bee:	83 2d       	mov	r24, r3
     bf0:	80 68       	ori	r24, 0x80	; 128
     bf2:	38 2e       	mov	r3, r24
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <vfprintf+0xe6>
     bf6:	88 36       	cpi	r24, 0x68	; 104
     bf8:	41 f4       	brne	.+16     	; 0xc0a <vfprintf+0xf6>
     bfa:	f7 01       	movw	r30, r14
     bfc:	93 fd       	sbrc	r25, 3
     bfe:	85 91       	lpm	r24, Z+
     c00:	93 ff       	sbrs	r25, 3
     c02:	81 91       	ld	r24, Z+
     c04:	7f 01       	movw	r14, r30
     c06:	81 11       	cpse	r24, r1
     c08:	b3 cf       	rjmp	.-154    	; 0xb70 <vfprintf+0x5c>
     c0a:	98 2f       	mov	r25, r24
     c0c:	9f 7d       	andi	r25, 0xDF	; 223
     c0e:	95 54       	subi	r25, 0x45	; 69
     c10:	93 30       	cpi	r25, 0x03	; 3
     c12:	28 f4       	brcc	.+10     	; 0xc1e <vfprintf+0x10a>
     c14:	0c 5f       	subi	r16, 0xFC	; 252
     c16:	1f 4f       	sbci	r17, 0xFF	; 255
     c18:	9f e3       	ldi	r25, 0x3F	; 63
     c1a:	99 83       	std	Y+1, r25	; 0x01
     c1c:	0d c0       	rjmp	.+26     	; 0xc38 <vfprintf+0x124>
     c1e:	83 36       	cpi	r24, 0x63	; 99
     c20:	31 f0       	breq	.+12     	; 0xc2e <vfprintf+0x11a>
     c22:	83 37       	cpi	r24, 0x73	; 115
     c24:	71 f0       	breq	.+28     	; 0xc42 <vfprintf+0x12e>
     c26:	83 35       	cpi	r24, 0x53	; 83
     c28:	09 f0       	breq	.+2      	; 0xc2c <vfprintf+0x118>
     c2a:	59 c0       	rjmp	.+178    	; 0xcde <vfprintf+0x1ca>
     c2c:	21 c0       	rjmp	.+66     	; 0xc70 <vfprintf+0x15c>
     c2e:	f8 01       	movw	r30, r16
     c30:	80 81       	ld	r24, Z
     c32:	89 83       	std	Y+1, r24	; 0x01
     c34:	0e 5f       	subi	r16, 0xFE	; 254
     c36:	1f 4f       	sbci	r17, 0xFF	; 255
     c38:	88 24       	eor	r8, r8
     c3a:	83 94       	inc	r8
     c3c:	91 2c       	mov	r9, r1
     c3e:	53 01       	movw	r10, r6
     c40:	13 c0       	rjmp	.+38     	; 0xc68 <vfprintf+0x154>
     c42:	28 01       	movw	r4, r16
     c44:	f2 e0       	ldi	r31, 0x02	; 2
     c46:	4f 0e       	add	r4, r31
     c48:	51 1c       	adc	r5, r1
     c4a:	f8 01       	movw	r30, r16
     c4c:	a0 80       	ld	r10, Z
     c4e:	b1 80       	ldd	r11, Z+1	; 0x01
     c50:	36 fe       	sbrs	r3, 6
     c52:	03 c0       	rjmp	.+6      	; 0xc5a <vfprintf+0x146>
     c54:	69 2d       	mov	r22, r9
     c56:	70 e0       	ldi	r23, 0x00	; 0
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <vfprintf+0x14a>
     c5a:	6f ef       	ldi	r22, 0xFF	; 255
     c5c:	7f ef       	ldi	r23, 0xFF	; 255
     c5e:	c5 01       	movw	r24, r10
     c60:	0e 94 76 07 	call	0xeec	; 0xeec <strnlen>
     c64:	4c 01       	movw	r8, r24
     c66:	82 01       	movw	r16, r4
     c68:	f3 2d       	mov	r31, r3
     c6a:	ff 77       	andi	r31, 0x7F	; 127
     c6c:	3f 2e       	mov	r3, r31
     c6e:	16 c0       	rjmp	.+44     	; 0xc9c <vfprintf+0x188>
     c70:	28 01       	movw	r4, r16
     c72:	22 e0       	ldi	r18, 0x02	; 2
     c74:	42 0e       	add	r4, r18
     c76:	51 1c       	adc	r5, r1
     c78:	f8 01       	movw	r30, r16
     c7a:	a0 80       	ld	r10, Z
     c7c:	b1 80       	ldd	r11, Z+1	; 0x01
     c7e:	36 fe       	sbrs	r3, 6
     c80:	03 c0       	rjmp	.+6      	; 0xc88 <vfprintf+0x174>
     c82:	69 2d       	mov	r22, r9
     c84:	70 e0       	ldi	r23, 0x00	; 0
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x178>
     c88:	6f ef       	ldi	r22, 0xFF	; 255
     c8a:	7f ef       	ldi	r23, 0xFF	; 255
     c8c:	c5 01       	movw	r24, r10
     c8e:	0e 94 6b 07 	call	0xed6	; 0xed6 <strnlen_P>
     c92:	4c 01       	movw	r8, r24
     c94:	f3 2d       	mov	r31, r3
     c96:	f0 68       	ori	r31, 0x80	; 128
     c98:	3f 2e       	mov	r3, r31
     c9a:	82 01       	movw	r16, r4
     c9c:	33 fc       	sbrc	r3, 3
     c9e:	1b c0       	rjmp	.+54     	; 0xcd6 <vfprintf+0x1c2>
     ca0:	82 2d       	mov	r24, r2
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	88 16       	cp	r8, r24
     ca6:	99 06       	cpc	r9, r25
     ca8:	b0 f4       	brcc	.+44     	; 0xcd6 <vfprintf+0x1c2>
     caa:	b6 01       	movw	r22, r12
     cac:	80 e2       	ldi	r24, 0x20	; 32
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     cb4:	2a 94       	dec	r2
     cb6:	f4 cf       	rjmp	.-24     	; 0xca0 <vfprintf+0x18c>
     cb8:	f5 01       	movw	r30, r10
     cba:	37 fc       	sbrc	r3, 7
     cbc:	85 91       	lpm	r24, Z+
     cbe:	37 fe       	sbrs	r3, 7
     cc0:	81 91       	ld	r24, Z+
     cc2:	5f 01       	movw	r10, r30
     cc4:	b6 01       	movw	r22, r12
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     ccc:	21 10       	cpse	r2, r1
     cce:	2a 94       	dec	r2
     cd0:	21 e0       	ldi	r18, 0x01	; 1
     cd2:	82 1a       	sub	r8, r18
     cd4:	91 08       	sbc	r9, r1
     cd6:	81 14       	cp	r8, r1
     cd8:	91 04       	cpc	r9, r1
     cda:	71 f7       	brne	.-36     	; 0xcb8 <vfprintf+0x1a4>
     cdc:	e8 c0       	rjmp	.+464    	; 0xeae <vfprintf+0x39a>
     cde:	84 36       	cpi	r24, 0x64	; 100
     ce0:	11 f0       	breq	.+4      	; 0xce6 <vfprintf+0x1d2>
     ce2:	89 36       	cpi	r24, 0x69	; 105
     ce4:	41 f5       	brne	.+80     	; 0xd36 <vfprintf+0x222>
     ce6:	f8 01       	movw	r30, r16
     ce8:	37 fe       	sbrs	r3, 7
     cea:	07 c0       	rjmp	.+14     	; 0xcfa <vfprintf+0x1e6>
     cec:	60 81       	ld	r22, Z
     cee:	71 81       	ldd	r23, Z+1	; 0x01
     cf0:	82 81       	ldd	r24, Z+2	; 0x02
     cf2:	93 81       	ldd	r25, Z+3	; 0x03
     cf4:	0c 5f       	subi	r16, 0xFC	; 252
     cf6:	1f 4f       	sbci	r17, 0xFF	; 255
     cf8:	08 c0       	rjmp	.+16     	; 0xd0a <vfprintf+0x1f6>
     cfa:	60 81       	ld	r22, Z
     cfc:	71 81       	ldd	r23, Z+1	; 0x01
     cfe:	07 2e       	mov	r0, r23
     d00:	00 0c       	add	r0, r0
     d02:	88 0b       	sbc	r24, r24
     d04:	99 0b       	sbc	r25, r25
     d06:	0e 5f       	subi	r16, 0xFE	; 254
     d08:	1f 4f       	sbci	r17, 0xFF	; 255
     d0a:	f3 2d       	mov	r31, r3
     d0c:	ff 76       	andi	r31, 0x6F	; 111
     d0e:	3f 2e       	mov	r3, r31
     d10:	97 ff       	sbrs	r25, 7
     d12:	09 c0       	rjmp	.+18     	; 0xd26 <vfprintf+0x212>
     d14:	90 95       	com	r25
     d16:	80 95       	com	r24
     d18:	70 95       	com	r23
     d1a:	61 95       	neg	r22
     d1c:	7f 4f       	sbci	r23, 0xFF	; 255
     d1e:	8f 4f       	sbci	r24, 0xFF	; 255
     d20:	9f 4f       	sbci	r25, 0xFF	; 255
     d22:	f0 68       	ori	r31, 0x80	; 128
     d24:	3f 2e       	mov	r3, r31
     d26:	2a e0       	ldi	r18, 0x0A	; 10
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	a3 01       	movw	r20, r6
     d2c:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__ultoa_invert>
     d30:	88 2e       	mov	r8, r24
     d32:	86 18       	sub	r8, r6
     d34:	45 c0       	rjmp	.+138    	; 0xdc0 <vfprintf+0x2ac>
     d36:	85 37       	cpi	r24, 0x75	; 117
     d38:	31 f4       	brne	.+12     	; 0xd46 <vfprintf+0x232>
     d3a:	23 2d       	mov	r18, r3
     d3c:	2f 7e       	andi	r18, 0xEF	; 239
     d3e:	b2 2e       	mov	r11, r18
     d40:	2a e0       	ldi	r18, 0x0A	; 10
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	25 c0       	rjmp	.+74     	; 0xd90 <vfprintf+0x27c>
     d46:	93 2d       	mov	r25, r3
     d48:	99 7f       	andi	r25, 0xF9	; 249
     d4a:	b9 2e       	mov	r11, r25
     d4c:	8f 36       	cpi	r24, 0x6F	; 111
     d4e:	c1 f0       	breq	.+48     	; 0xd80 <vfprintf+0x26c>
     d50:	18 f4       	brcc	.+6      	; 0xd58 <vfprintf+0x244>
     d52:	88 35       	cpi	r24, 0x58	; 88
     d54:	79 f0       	breq	.+30     	; 0xd74 <vfprintf+0x260>
     d56:	b5 c0       	rjmp	.+362    	; 0xec2 <vfprintf+0x3ae>
     d58:	80 37       	cpi	r24, 0x70	; 112
     d5a:	19 f0       	breq	.+6      	; 0xd62 <vfprintf+0x24e>
     d5c:	88 37       	cpi	r24, 0x78	; 120
     d5e:	21 f0       	breq	.+8      	; 0xd68 <vfprintf+0x254>
     d60:	b0 c0       	rjmp	.+352    	; 0xec2 <vfprintf+0x3ae>
     d62:	e9 2f       	mov	r30, r25
     d64:	e0 61       	ori	r30, 0x10	; 16
     d66:	be 2e       	mov	r11, r30
     d68:	b4 fe       	sbrs	r11, 4
     d6a:	0d c0       	rjmp	.+26     	; 0xd86 <vfprintf+0x272>
     d6c:	fb 2d       	mov	r31, r11
     d6e:	f4 60       	ori	r31, 0x04	; 4
     d70:	bf 2e       	mov	r11, r31
     d72:	09 c0       	rjmp	.+18     	; 0xd86 <vfprintf+0x272>
     d74:	34 fe       	sbrs	r3, 4
     d76:	0a c0       	rjmp	.+20     	; 0xd8c <vfprintf+0x278>
     d78:	29 2f       	mov	r18, r25
     d7a:	26 60       	ori	r18, 0x06	; 6
     d7c:	b2 2e       	mov	r11, r18
     d7e:	06 c0       	rjmp	.+12     	; 0xd8c <vfprintf+0x278>
     d80:	28 e0       	ldi	r18, 0x08	; 8
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	05 c0       	rjmp	.+10     	; 0xd90 <vfprintf+0x27c>
     d86:	20 e1       	ldi	r18, 0x10	; 16
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <vfprintf+0x27c>
     d8c:	20 e1       	ldi	r18, 0x10	; 16
     d8e:	32 e0       	ldi	r19, 0x02	; 2
     d90:	f8 01       	movw	r30, r16
     d92:	b7 fe       	sbrs	r11, 7
     d94:	07 c0       	rjmp	.+14     	; 0xda4 <vfprintf+0x290>
     d96:	60 81       	ld	r22, Z
     d98:	71 81       	ldd	r23, Z+1	; 0x01
     d9a:	82 81       	ldd	r24, Z+2	; 0x02
     d9c:	93 81       	ldd	r25, Z+3	; 0x03
     d9e:	0c 5f       	subi	r16, 0xFC	; 252
     da0:	1f 4f       	sbci	r17, 0xFF	; 255
     da2:	06 c0       	rjmp	.+12     	; 0xdb0 <vfprintf+0x29c>
     da4:	60 81       	ld	r22, Z
     da6:	71 81       	ldd	r23, Z+1	; 0x01
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	0e 5f       	subi	r16, 0xFE	; 254
     dae:	1f 4f       	sbci	r17, 0xFF	; 255
     db0:	a3 01       	movw	r20, r6
     db2:	0e 94 bd 07 	call	0xf7a	; 0xf7a <__ultoa_invert>
     db6:	88 2e       	mov	r8, r24
     db8:	86 18       	sub	r8, r6
     dba:	fb 2d       	mov	r31, r11
     dbc:	ff 77       	andi	r31, 0x7F	; 127
     dbe:	3f 2e       	mov	r3, r31
     dc0:	36 fe       	sbrs	r3, 6
     dc2:	0d c0       	rjmp	.+26     	; 0xdde <vfprintf+0x2ca>
     dc4:	23 2d       	mov	r18, r3
     dc6:	2e 7f       	andi	r18, 0xFE	; 254
     dc8:	a2 2e       	mov	r10, r18
     dca:	89 14       	cp	r8, r9
     dcc:	58 f4       	brcc	.+22     	; 0xde4 <vfprintf+0x2d0>
     dce:	34 fe       	sbrs	r3, 4
     dd0:	0b c0       	rjmp	.+22     	; 0xde8 <vfprintf+0x2d4>
     dd2:	32 fc       	sbrc	r3, 2
     dd4:	09 c0       	rjmp	.+18     	; 0xde8 <vfprintf+0x2d4>
     dd6:	83 2d       	mov	r24, r3
     dd8:	8e 7e       	andi	r24, 0xEE	; 238
     dda:	a8 2e       	mov	r10, r24
     ddc:	05 c0       	rjmp	.+10     	; 0xde8 <vfprintf+0x2d4>
     dde:	b8 2c       	mov	r11, r8
     de0:	a3 2c       	mov	r10, r3
     de2:	03 c0       	rjmp	.+6      	; 0xdea <vfprintf+0x2d6>
     de4:	b8 2c       	mov	r11, r8
     de6:	01 c0       	rjmp	.+2      	; 0xdea <vfprintf+0x2d6>
     de8:	b9 2c       	mov	r11, r9
     dea:	a4 fe       	sbrs	r10, 4
     dec:	0f c0       	rjmp	.+30     	; 0xe0c <vfprintf+0x2f8>
     dee:	fe 01       	movw	r30, r28
     df0:	e8 0d       	add	r30, r8
     df2:	f1 1d       	adc	r31, r1
     df4:	80 81       	ld	r24, Z
     df6:	80 33       	cpi	r24, 0x30	; 48
     df8:	21 f4       	brne	.+8      	; 0xe02 <vfprintf+0x2ee>
     dfa:	9a 2d       	mov	r25, r10
     dfc:	99 7e       	andi	r25, 0xE9	; 233
     dfe:	a9 2e       	mov	r10, r25
     e00:	09 c0       	rjmp	.+18     	; 0xe14 <vfprintf+0x300>
     e02:	a2 fe       	sbrs	r10, 2
     e04:	06 c0       	rjmp	.+12     	; 0xe12 <vfprintf+0x2fe>
     e06:	b3 94       	inc	r11
     e08:	b3 94       	inc	r11
     e0a:	04 c0       	rjmp	.+8      	; 0xe14 <vfprintf+0x300>
     e0c:	8a 2d       	mov	r24, r10
     e0e:	86 78       	andi	r24, 0x86	; 134
     e10:	09 f0       	breq	.+2      	; 0xe14 <vfprintf+0x300>
     e12:	b3 94       	inc	r11
     e14:	a3 fc       	sbrc	r10, 3
     e16:	11 c0       	rjmp	.+34     	; 0xe3a <vfprintf+0x326>
     e18:	a0 fe       	sbrs	r10, 0
     e1a:	06 c0       	rjmp	.+12     	; 0xe28 <vfprintf+0x314>
     e1c:	b2 14       	cp	r11, r2
     e1e:	88 f4       	brcc	.+34     	; 0xe42 <vfprintf+0x32e>
     e20:	28 0c       	add	r2, r8
     e22:	92 2c       	mov	r9, r2
     e24:	9b 18       	sub	r9, r11
     e26:	0e c0       	rjmp	.+28     	; 0xe44 <vfprintf+0x330>
     e28:	b2 14       	cp	r11, r2
     e2a:	60 f4       	brcc	.+24     	; 0xe44 <vfprintf+0x330>
     e2c:	b6 01       	movw	r22, r12
     e2e:	80 e2       	ldi	r24, 0x20	; 32
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     e36:	b3 94       	inc	r11
     e38:	f7 cf       	rjmp	.-18     	; 0xe28 <vfprintf+0x314>
     e3a:	b2 14       	cp	r11, r2
     e3c:	18 f4       	brcc	.+6      	; 0xe44 <vfprintf+0x330>
     e3e:	2b 18       	sub	r2, r11
     e40:	02 c0       	rjmp	.+4      	; 0xe46 <vfprintf+0x332>
     e42:	98 2c       	mov	r9, r8
     e44:	21 2c       	mov	r2, r1
     e46:	a4 fe       	sbrs	r10, 4
     e48:	10 c0       	rjmp	.+32     	; 0xe6a <vfprintf+0x356>
     e4a:	b6 01       	movw	r22, r12
     e4c:	80 e3       	ldi	r24, 0x30	; 48
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     e54:	a2 fe       	sbrs	r10, 2
     e56:	17 c0       	rjmp	.+46     	; 0xe86 <vfprintf+0x372>
     e58:	a1 fc       	sbrc	r10, 1
     e5a:	03 c0       	rjmp	.+6      	; 0xe62 <vfprintf+0x34e>
     e5c:	88 e7       	ldi	r24, 0x78	; 120
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	02 c0       	rjmp	.+4      	; 0xe66 <vfprintf+0x352>
     e62:	88 e5       	ldi	r24, 0x58	; 88
     e64:	90 e0       	ldi	r25, 0x00	; 0
     e66:	b6 01       	movw	r22, r12
     e68:	0c c0       	rjmp	.+24     	; 0xe82 <vfprintf+0x36e>
     e6a:	8a 2d       	mov	r24, r10
     e6c:	86 78       	andi	r24, 0x86	; 134
     e6e:	59 f0       	breq	.+22     	; 0xe86 <vfprintf+0x372>
     e70:	a1 fe       	sbrs	r10, 1
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x364>
     e74:	8b e2       	ldi	r24, 0x2B	; 43
     e76:	01 c0       	rjmp	.+2      	; 0xe7a <vfprintf+0x366>
     e78:	80 e2       	ldi	r24, 0x20	; 32
     e7a:	a7 fc       	sbrc	r10, 7
     e7c:	8d e2       	ldi	r24, 0x2D	; 45
     e7e:	b6 01       	movw	r22, r12
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     e86:	89 14       	cp	r8, r9
     e88:	38 f4       	brcc	.+14     	; 0xe98 <vfprintf+0x384>
     e8a:	b6 01       	movw	r22, r12
     e8c:	80 e3       	ldi	r24, 0x30	; 48
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     e94:	9a 94       	dec	r9
     e96:	f7 cf       	rjmp	.-18     	; 0xe86 <vfprintf+0x372>
     e98:	8a 94       	dec	r8
     e9a:	f3 01       	movw	r30, r6
     e9c:	e8 0d       	add	r30, r8
     e9e:	f1 1d       	adc	r31, r1
     ea0:	80 81       	ld	r24, Z
     ea2:	b6 01       	movw	r22, r12
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     eaa:	81 10       	cpse	r8, r1
     eac:	f5 cf       	rjmp	.-22     	; 0xe98 <vfprintf+0x384>
     eae:	22 20       	and	r2, r2
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <vfprintf+0x3a0>
     eb2:	42 ce       	rjmp	.-892    	; 0xb38 <vfprintf+0x24>
     eb4:	b6 01       	movw	r22, r12
     eb6:	80 e2       	ldi	r24, 0x20	; 32
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	0e 94 81 07 	call	0xf02	; 0xf02 <fputc>
     ebe:	2a 94       	dec	r2
     ec0:	f6 cf       	rjmp	.-20     	; 0xeae <vfprintf+0x39a>
     ec2:	f6 01       	movw	r30, r12
     ec4:	86 81       	ldd	r24, Z+6	; 0x06
     ec6:	97 81       	ldd	r25, Z+7	; 0x07
     ec8:	02 c0       	rjmp	.+4      	; 0xece <vfprintf+0x3ba>
     eca:	8f ef       	ldi	r24, 0xFF	; 255
     ecc:	9f ef       	ldi	r25, 0xFF	; 255
     ece:	2b 96       	adiw	r28, 0x0b	; 11
     ed0:	e2 e1       	ldi	r30, 0x12	; 18
     ed2:	0c 94 34 08 	jmp	0x1068	; 0x1068 <__epilogue_restores__>

00000ed6 <strnlen_P>:
     ed6:	fc 01       	movw	r30, r24
     ed8:	05 90       	lpm	r0, Z+
     eda:	61 50       	subi	r22, 0x01	; 1
     edc:	70 40       	sbci	r23, 0x00	; 0
     ede:	01 10       	cpse	r0, r1
     ee0:	d8 f7       	brcc	.-10     	; 0xed8 <strnlen_P+0x2>
     ee2:	80 95       	com	r24
     ee4:	90 95       	com	r25
     ee6:	8e 0f       	add	r24, r30
     ee8:	9f 1f       	adc	r25, r31
     eea:	08 95       	ret

00000eec <strnlen>:
     eec:	fc 01       	movw	r30, r24
     eee:	61 50       	subi	r22, 0x01	; 1
     ef0:	70 40       	sbci	r23, 0x00	; 0
     ef2:	01 90       	ld	r0, Z+
     ef4:	01 10       	cpse	r0, r1
     ef6:	d8 f7       	brcc	.-10     	; 0xeee <strnlen+0x2>
     ef8:	80 95       	com	r24
     efa:	90 95       	com	r25
     efc:	8e 0f       	add	r24, r30
     efe:	9f 1f       	adc	r25, r31
     f00:	08 95       	ret

00000f02 <fputc>:
     f02:	0f 93       	push	r16
     f04:	1f 93       	push	r17
     f06:	cf 93       	push	r28
     f08:	df 93       	push	r29
     f0a:	fb 01       	movw	r30, r22
     f0c:	23 81       	ldd	r18, Z+3	; 0x03
     f0e:	21 fd       	sbrc	r18, 1
     f10:	03 c0       	rjmp	.+6      	; 0xf18 <fputc+0x16>
     f12:	8f ef       	ldi	r24, 0xFF	; 255
     f14:	9f ef       	ldi	r25, 0xFF	; 255
     f16:	2c c0       	rjmp	.+88     	; 0xf70 <fputc+0x6e>
     f18:	22 ff       	sbrs	r18, 2
     f1a:	16 c0       	rjmp	.+44     	; 0xf48 <fputc+0x46>
     f1c:	46 81       	ldd	r20, Z+6	; 0x06
     f1e:	57 81       	ldd	r21, Z+7	; 0x07
     f20:	24 81       	ldd	r18, Z+4	; 0x04
     f22:	35 81       	ldd	r19, Z+5	; 0x05
     f24:	42 17       	cp	r20, r18
     f26:	53 07       	cpc	r21, r19
     f28:	44 f4       	brge	.+16     	; 0xf3a <fputc+0x38>
     f2a:	a0 81       	ld	r26, Z
     f2c:	b1 81       	ldd	r27, Z+1	; 0x01
     f2e:	9d 01       	movw	r18, r26
     f30:	2f 5f       	subi	r18, 0xFF	; 255
     f32:	3f 4f       	sbci	r19, 0xFF	; 255
     f34:	20 83       	st	Z, r18
     f36:	31 83       	std	Z+1, r19	; 0x01
     f38:	8c 93       	st	X, r24
     f3a:	26 81       	ldd	r18, Z+6	; 0x06
     f3c:	37 81       	ldd	r19, Z+7	; 0x07
     f3e:	2f 5f       	subi	r18, 0xFF	; 255
     f40:	3f 4f       	sbci	r19, 0xFF	; 255
     f42:	26 83       	std	Z+6, r18	; 0x06
     f44:	37 83       	std	Z+7, r19	; 0x07
     f46:	14 c0       	rjmp	.+40     	; 0xf70 <fputc+0x6e>
     f48:	8b 01       	movw	r16, r22
     f4a:	ec 01       	movw	r28, r24
     f4c:	fb 01       	movw	r30, r22
     f4e:	00 84       	ldd	r0, Z+8	; 0x08
     f50:	f1 85       	ldd	r31, Z+9	; 0x09
     f52:	e0 2d       	mov	r30, r0
     f54:	09 95       	icall
     f56:	89 2b       	or	r24, r25
     f58:	e1 f6       	brne	.-72     	; 0xf12 <fputc+0x10>
     f5a:	d8 01       	movw	r26, r16
     f5c:	16 96       	adiw	r26, 0x06	; 6
     f5e:	8d 91       	ld	r24, X+
     f60:	9c 91       	ld	r25, X
     f62:	17 97       	sbiw	r26, 0x07	; 7
     f64:	01 96       	adiw	r24, 0x01	; 1
     f66:	16 96       	adiw	r26, 0x06	; 6
     f68:	8d 93       	st	X+, r24
     f6a:	9c 93       	st	X, r25
     f6c:	17 97       	sbiw	r26, 0x07	; 7
     f6e:	ce 01       	movw	r24, r28
     f70:	df 91       	pop	r29
     f72:	cf 91       	pop	r28
     f74:	1f 91       	pop	r17
     f76:	0f 91       	pop	r16
     f78:	08 95       	ret

00000f7a <__ultoa_invert>:
     f7a:	fa 01       	movw	r30, r20
     f7c:	aa 27       	eor	r26, r26
     f7e:	28 30       	cpi	r18, 0x08	; 8
     f80:	51 f1       	breq	.+84     	; 0xfd6 <__ultoa_invert+0x5c>
     f82:	20 31       	cpi	r18, 0x10	; 16
     f84:	81 f1       	breq	.+96     	; 0xfe6 <__ultoa_invert+0x6c>
     f86:	e8 94       	clt
     f88:	6f 93       	push	r22
     f8a:	6e 7f       	andi	r22, 0xFE	; 254
     f8c:	6e 5f       	subi	r22, 0xFE	; 254
     f8e:	7f 4f       	sbci	r23, 0xFF	; 255
     f90:	8f 4f       	sbci	r24, 0xFF	; 255
     f92:	9f 4f       	sbci	r25, 0xFF	; 255
     f94:	af 4f       	sbci	r26, 0xFF	; 255
     f96:	b1 e0       	ldi	r27, 0x01	; 1
     f98:	3e d0       	rcall	.+124    	; 0x1016 <__ultoa_invert+0x9c>
     f9a:	b4 e0       	ldi	r27, 0x04	; 4
     f9c:	3c d0       	rcall	.+120    	; 0x1016 <__ultoa_invert+0x9c>
     f9e:	67 0f       	add	r22, r23
     fa0:	78 1f       	adc	r23, r24
     fa2:	89 1f       	adc	r24, r25
     fa4:	9a 1f       	adc	r25, r26
     fa6:	a1 1d       	adc	r26, r1
     fa8:	68 0f       	add	r22, r24
     faa:	79 1f       	adc	r23, r25
     fac:	8a 1f       	adc	r24, r26
     fae:	91 1d       	adc	r25, r1
     fb0:	a1 1d       	adc	r26, r1
     fb2:	6a 0f       	add	r22, r26
     fb4:	71 1d       	adc	r23, r1
     fb6:	81 1d       	adc	r24, r1
     fb8:	91 1d       	adc	r25, r1
     fba:	a1 1d       	adc	r26, r1
     fbc:	20 d0       	rcall	.+64     	; 0xffe <__ultoa_invert+0x84>
     fbe:	09 f4       	brne	.+2      	; 0xfc2 <__ultoa_invert+0x48>
     fc0:	68 94       	set
     fc2:	3f 91       	pop	r19
     fc4:	2a e0       	ldi	r18, 0x0A	; 10
     fc6:	26 9f       	mul	r18, r22
     fc8:	11 24       	eor	r1, r1
     fca:	30 19       	sub	r19, r0
     fcc:	30 5d       	subi	r19, 0xD0	; 208
     fce:	31 93       	st	Z+, r19
     fd0:	de f6       	brtc	.-74     	; 0xf88 <__ultoa_invert+0xe>
     fd2:	cf 01       	movw	r24, r30
     fd4:	08 95       	ret
     fd6:	46 2f       	mov	r20, r22
     fd8:	47 70       	andi	r20, 0x07	; 7
     fda:	40 5d       	subi	r20, 0xD0	; 208
     fdc:	41 93       	st	Z+, r20
     fde:	b3 e0       	ldi	r27, 0x03	; 3
     fe0:	0f d0       	rcall	.+30     	; 0x1000 <__ultoa_invert+0x86>
     fe2:	c9 f7       	brne	.-14     	; 0xfd6 <__ultoa_invert+0x5c>
     fe4:	f6 cf       	rjmp	.-20     	; 0xfd2 <__ultoa_invert+0x58>
     fe6:	46 2f       	mov	r20, r22
     fe8:	4f 70       	andi	r20, 0x0F	; 15
     fea:	40 5d       	subi	r20, 0xD0	; 208
     fec:	4a 33       	cpi	r20, 0x3A	; 58
     fee:	18 f0       	brcs	.+6      	; 0xff6 <__ultoa_invert+0x7c>
     ff0:	49 5d       	subi	r20, 0xD9	; 217
     ff2:	31 fd       	sbrc	r19, 1
     ff4:	40 52       	subi	r20, 0x20	; 32
     ff6:	41 93       	st	Z+, r20
     ff8:	02 d0       	rcall	.+4      	; 0xffe <__ultoa_invert+0x84>
     ffa:	a9 f7       	brne	.-22     	; 0xfe6 <__ultoa_invert+0x6c>
     ffc:	ea cf       	rjmp	.-44     	; 0xfd2 <__ultoa_invert+0x58>
     ffe:	b4 e0       	ldi	r27, 0x04	; 4
    1000:	a6 95       	lsr	r26
    1002:	97 95       	ror	r25
    1004:	87 95       	ror	r24
    1006:	77 95       	ror	r23
    1008:	67 95       	ror	r22
    100a:	ba 95       	dec	r27
    100c:	c9 f7       	brne	.-14     	; 0x1000 <__ultoa_invert+0x86>
    100e:	00 97       	sbiw	r24, 0x00	; 0
    1010:	61 05       	cpc	r22, r1
    1012:	71 05       	cpc	r23, r1
    1014:	08 95       	ret
    1016:	9b 01       	movw	r18, r22
    1018:	ac 01       	movw	r20, r24
    101a:	0a 2e       	mov	r0, r26
    101c:	06 94       	lsr	r0
    101e:	57 95       	ror	r21
    1020:	47 95       	ror	r20
    1022:	37 95       	ror	r19
    1024:	27 95       	ror	r18
    1026:	ba 95       	dec	r27
    1028:	c9 f7       	brne	.-14     	; 0x101c <__ultoa_invert+0xa2>
    102a:	62 0f       	add	r22, r18
    102c:	73 1f       	adc	r23, r19
    102e:	84 1f       	adc	r24, r20
    1030:	95 1f       	adc	r25, r21
    1032:	a0 1d       	adc	r26, r0
    1034:	08 95       	ret

00001036 <__prologue_saves__>:
    1036:	2f 92       	push	r2
    1038:	3f 92       	push	r3
    103a:	4f 92       	push	r4
    103c:	5f 92       	push	r5
    103e:	6f 92       	push	r6
    1040:	7f 92       	push	r7
    1042:	8f 92       	push	r8
    1044:	9f 92       	push	r9
    1046:	af 92       	push	r10
    1048:	bf 92       	push	r11
    104a:	cf 92       	push	r12
    104c:	df 92       	push	r13
    104e:	ef 92       	push	r14
    1050:	ff 92       	push	r15
    1052:	0f 93       	push	r16
    1054:	1f 93       	push	r17
    1056:	cf 93       	push	r28
    1058:	df 93       	push	r29
    105a:	cd b7       	in	r28, 0x3d	; 61
    105c:	de b7       	in	r29, 0x3e	; 62
    105e:	ca 1b       	sub	r28, r26
    1060:	db 0b       	sbc	r29, r27
    1062:	cd bf       	out	0x3d, r28	; 61
    1064:	de bf       	out	0x3e, r29	; 62
    1066:	09 94       	ijmp

00001068 <__epilogue_restores__>:
    1068:	2a 88       	ldd	r2, Y+18	; 0x12
    106a:	39 88       	ldd	r3, Y+17	; 0x11
    106c:	48 88       	ldd	r4, Y+16	; 0x10
    106e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1070:	6e 84       	ldd	r6, Y+14	; 0x0e
    1072:	7d 84       	ldd	r7, Y+13	; 0x0d
    1074:	8c 84       	ldd	r8, Y+12	; 0x0c
    1076:	9b 84       	ldd	r9, Y+11	; 0x0b
    1078:	aa 84       	ldd	r10, Y+10	; 0x0a
    107a:	b9 84       	ldd	r11, Y+9	; 0x09
    107c:	c8 84       	ldd	r12, Y+8	; 0x08
    107e:	df 80       	ldd	r13, Y+7	; 0x07
    1080:	ee 80       	ldd	r14, Y+6	; 0x06
    1082:	fd 80       	ldd	r15, Y+5	; 0x05
    1084:	0c 81       	ldd	r16, Y+4	; 0x04
    1086:	1b 81       	ldd	r17, Y+3	; 0x03
    1088:	aa 81       	ldd	r26, Y+2	; 0x02
    108a:	b9 81       	ldd	r27, Y+1	; 0x01
    108c:	ce 0f       	add	r28, r30
    108e:	d1 1d       	adc	r29, r1
    1090:	cd bf       	out	0x3d, r28	; 61
    1092:	de bf       	out	0x3e, r29	; 62
    1094:	ed 01       	movw	r28, r26
    1096:	08 95       	ret

00001098 <_exit>:
    1098:	f8 94       	cli

0000109a <__stop_program>:
    109a:	ff cf       	rjmp	.-2      	; 0x109a <__stop_program>
