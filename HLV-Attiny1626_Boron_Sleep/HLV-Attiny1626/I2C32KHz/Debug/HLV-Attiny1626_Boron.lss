
HLV-Attiny1626_Boron.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00803800  00003963  00003a17  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003806  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000015d  0000b806  00003806  000038ba  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          000000d0  00803840  00803840  00003a57  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  00003a57  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003ab4  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000118  00000000  00000000  00003af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004f24  00000000  00000000  00003c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001c1d  00000000  00000000  00008b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001596  00000000  00000000  0000a74d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000004b0  00000000  00000000  0000bce4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00002077  00000000  00000000  0000c194  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001c84  00000000  00000000  0000e20b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000138  00000000  00000000  0000fe8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__ctors_end>
       4:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
       8:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
       c:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      10:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      14:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      18:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      1c:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      20:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <__vector_8>
      24:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      28:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      2c:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      30:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      34:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <__vector_13>
      38:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      3c:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      40:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      44:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__vector_17>
      48:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      4c:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      50:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      54:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      58:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      5c:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      60:	0c 94 06 05 	jmp	0xa0c	; 0xa0c <__vector_24>
      64:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      68:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      6c:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      70:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>
      74:	0c 94 01 01 	jmp	0x202	; 0x202 <__bad_interrupt>

00000078 <__trampolines_end>:
      78:	6e 61       	ori	r22, 0x1E	; 30
      7a:	6e 00       	.word	0x006e	; ????

0000007c <__c.2332>:
      7c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      8c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      9c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      ac:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      bc:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      cc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      dc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      ec:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      fc:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     10c:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     11c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     12c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     13c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     14c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     15c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     16c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000017a <__c.2529>:
     17a:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     18a:	47 00                                               G.

0000018c <pstr_an>:
     18c:	61 6e 00                                            an.

0000018f <pstr_nfinity>:
     18f:	6e 66 69 6e 69 74 79 00                             nfinity.

00000197 <pwr_m10>:
     197:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     1a7:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000001af <pwr_p10>:
     1af:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1bf:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000001c8 <__ctors_end>:
     1c8:	11 24       	eor	r1, r1
     1ca:	1f be       	out	0x3f, r1	; 63
     1cc:	cf ef       	ldi	r28, 0xFF	; 255
     1ce:	cd bf       	out	0x3d, r28	; 61
     1d0:	df e3       	ldi	r29, 0x3F	; 63
     1d2:	de bf       	out	0x3e, r29	; 62

000001d4 <__do_copy_data>:
     1d4:	18 e3       	ldi	r17, 0x38	; 56
     1d6:	a0 e0       	ldi	r26, 0x00	; 0
     1d8:	b8 e3       	ldi	r27, 0x38	; 56
     1da:	e3 e6       	ldi	r30, 0x63	; 99
     1dc:	f9 e3       	ldi	r31, 0x39	; 57
     1de:	02 c0       	rjmp	.+4      	; 0x1e4 <__do_copy_data+0x10>
     1e0:	05 90       	lpm	r0, Z+
     1e2:	0d 92       	st	X+, r0
     1e4:	a0 34       	cpi	r26, 0x40	; 64
     1e6:	b1 07       	cpc	r27, r17
     1e8:	d9 f7       	brne	.-10     	; 0x1e0 <__do_copy_data+0xc>

000001ea <__do_clear_bss>:
     1ea:	29 e3       	ldi	r18, 0x39	; 57
     1ec:	a0 e4       	ldi	r26, 0x40	; 64
     1ee:	b8 e3       	ldi	r27, 0x38	; 56
     1f0:	01 c0       	rjmp	.+2      	; 0x1f4 <.do_clear_bss_start>

000001f2 <.do_clear_bss_loop>:
     1f2:	1d 92       	st	X+, r1

000001f4 <.do_clear_bss_start>:
     1f4:	a0 31       	cpi	r26, 0x10	; 16
     1f6:	b2 07       	cpc	r27, r18
     1f8:	e1 f7       	brne	.-8      	; 0x1f2 <.do_clear_bss_loop>
     1fa:	0e 94 57 0c 	call	0x18ae	; 0x18ae <main>
     1fe:	0c 94 01 1c 	jmp	0x3802	; 0x3802 <_exit>

00000202 <__bad_interrupt>:
     202:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000206 <PinInit>:


void TCA0_init() {
	TCA0.SINGLE.PER = 16384; // Establece el valor de comparación para aproximadamente 1 segundo
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1_gc | TCA_SINGLE_ENABLE_bm; // Configura el prescaler a 1:1 y habilita el temporizador
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm; // Habilita la interrupción por desbordamiento
     206:	e0 e4       	ldi	r30, 0x40	; 64
     208:	f4 e0       	ldi	r31, 0x04	; 4
     20a:	80 81       	ld	r24, Z
     20c:	87 7f       	andi	r24, 0xF7	; 247
     20e:	80 83       	st	Z, r24
     210:	83 89       	ldd	r24, Z+19	; 0x13
     212:	87 7f       	andi	r24, 0xF7	; 247
     214:	83 8b       	std	Z+19, r24	; 0x13
     216:	83 89       	ldd	r24, Z+19	; 0x13
     218:	82 60       	ori	r24, 0x02	; 2
     21a:	83 8b       	std	Z+19, r24	; 0x13
     21c:	e0 e0       	ldi	r30, 0x00	; 0
     21e:	f4 e0       	ldi	r31, 0x04	; 4
     220:	80 81       	ld	r24, Z
     222:	8b 7f       	andi	r24, 0xFB	; 251
     224:	80 83       	st	Z, r24
     226:	80 81       	ld	r24, Z
     228:	82 60       	ori	r24, 0x02	; 2
     22a:	80 83       	st	Z, r24
     22c:	a0 e2       	ldi	r26, 0x20	; 32
     22e:	b4 e0       	ldi	r27, 0x04	; 4
     230:	54 96       	adiw	r26, 0x14	; 20
     232:	8c 91       	ld	r24, X
     234:	54 97       	sbiw	r26, 0x14	; 20
     236:	88 7f       	andi	r24, 0xF8	; 248
     238:	54 96       	adiw	r26, 0x14	; 20
     23a:	8c 93       	st	X, r24
     23c:	54 97       	sbiw	r26, 0x14	; 20
     23e:	54 96       	adiw	r26, 0x14	; 20
     240:	8c 91       	ld	r24, X
     242:	54 97       	sbiw	r26, 0x14	; 20
     244:	84 60       	ori	r24, 0x04	; 4
     246:	54 96       	adiw	r26, 0x14	; 20
     248:	8c 93       	st	X, r24
     24a:	54 97       	sbiw	r26, 0x14	; 20
     24c:	54 96       	adiw	r26, 0x14	; 20
     24e:	8c 91       	ld	r24, X
     250:	54 97       	sbiw	r26, 0x14	; 20
     252:	87 7f       	andi	r24, 0xF7	; 247
     254:	54 96       	adiw	r26, 0x14	; 20
     256:	8c 93       	st	X, r24
     258:	54 97       	sbiw	r26, 0x14	; 20
     25a:	85 89       	ldd	r24, Z+21	; 0x15
     25c:	88 7f       	andi	r24, 0xF8	; 248
     25e:	85 8b       	std	Z+21, r24	; 0x15
     260:	85 89       	ldd	r24, Z+21	; 0x15
     262:	84 60       	ori	r24, 0x04	; 4
     264:	85 8b       	std	Z+21, r24	; 0x15
     266:	85 89       	ldd	r24, Z+21	; 0x15
     268:	87 7f       	andi	r24, 0xF7	; 247
     26a:	85 8b       	std	Z+21, r24	; 0x15
     26c:	93 e0       	ldi	r25, 0x03	; 3
     26e:	11 96       	adiw	r26, 0x01	; 1
     270:	9c 93       	st	X, r25
     272:	11 97       	sbiw	r26, 0x01	; 1
     274:	50 96       	adiw	r26, 0x10	; 16
     276:	8c 91       	ld	r24, X
     278:	50 97       	sbiw	r26, 0x10	; 16
     27a:	87 7f       	andi	r24, 0xF7	; 247
     27c:	50 96       	adiw	r26, 0x10	; 16
     27e:	8c 93       	st	X, r24
     280:	50 97       	sbiw	r26, 0x10	; 16
     282:	14 96       	adiw	r26, 0x04	; 4
     284:	9c 93       	st	X, r25
     286:	14 97       	sbiw	r26, 0x04	; 4
     288:	51 96       	adiw	r26, 0x11	; 17
     28a:	8c 91       	ld	r24, X
     28c:	51 97       	sbiw	r26, 0x11	; 17
     28e:	87 7f       	andi	r24, 0xF7	; 247
     290:	51 96       	adiw	r26, 0x11	; 17
     292:	8c 93       	st	X, r24
     294:	51 97       	sbiw	r26, 0x11	; 17
     296:	86 89       	ldd	r24, Z+22	; 0x16
     298:	88 7f       	andi	r24, 0xF8	; 248
     29a:	86 8b       	std	Z+22, r24	; 0x16
     29c:	86 89       	ldd	r24, Z+22	; 0x16
     29e:	84 60       	ori	r24, 0x04	; 4
     2a0:	86 8b       	std	Z+22, r24	; 0x16
     2a2:	86 89       	ldd	r24, Z+22	; 0x16
     2a4:	87 7f       	andi	r24, 0xF7	; 247
     2a6:	86 8b       	std	Z+22, r24	; 0x16
     2a8:	8c 91       	ld	r24, X
     2aa:	80 62       	ori	r24, 0x20	; 32
     2ac:	8c 93       	st	X, r24
     2ae:	55 96       	adiw	r26, 0x15	; 21
     2b0:	8c 91       	ld	r24, X
     2b2:	55 97       	sbiw	r26, 0x15	; 21
     2b4:	87 7f       	andi	r24, 0xF7	; 247
     2b6:	55 96       	adiw	r26, 0x15	; 21
     2b8:	8c 93       	st	X, r24
     2ba:	55 97       	sbiw	r26, 0x15	; 21
     2bc:	14 96       	adiw	r26, 0x04	; 4
     2be:	8c 91       	ld	r24, X
     2c0:	14 97       	sbiw	r26, 0x04	; 4
     2c2:	8f 7d       	andi	r24, 0xDF	; 223
     2c4:	14 96       	adiw	r26, 0x04	; 4
     2c6:	8c 93       	st	X, r24
     2c8:	80 81       	ld	r24, Z
     2ca:	88 60       	ori	r24, 0x08	; 8
     2cc:	80 83       	st	Z, r24
     2ce:	83 89       	ldd	r24, Z+19	; 0x13
     2d0:	87 7f       	andi	r24, 0xF7	; 247
     2d2:	83 8b       	std	Z+19, r24	; 0x13
     2d4:	84 81       	ldd	r24, Z+4	; 0x04
     2d6:	87 7f       	andi	r24, 0xF7	; 247
     2d8:	84 83       	std	Z+4, r24	; 0x04
     2da:	08 95       	ret

000002dc <PORT_LOWPOWER_Init>:
     2dc:	80 e0       	ldi	r24, 0x00	; 0
     2de:	08 c0       	rjmp	.+16     	; 0x2f0 <PORT_LOWPOWER_Init+0x14>
     2e0:	e8 2f       	mov	r30, r24
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	e0 5f       	subi	r30, 0xF0	; 240
     2e6:	fb 4f       	sbci	r31, 0xFB	; 251
     2e8:	90 81       	ld	r25, Z
     2ea:	98 60       	ori	r25, 0x08	; 8
     2ec:	90 83       	st	Z, r25
     2ee:	8f 5f       	subi	r24, 0xFF	; 255
     2f0:	88 30       	cpi	r24, 0x08	; 8
     2f2:	b0 f3       	brcs	.-20     	; 0x2e0 <PORT_LOWPOWER_Init+0x4>
     2f4:	80 e0       	ldi	r24, 0x00	; 0
     2f6:	08 c0       	rjmp	.+16     	; 0x308 <PORT_LOWPOWER_Init+0x2c>
     2f8:	e8 2f       	mov	r30, r24
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	e0 5d       	subi	r30, 0xD0	; 208
     2fe:	fb 4f       	sbci	r31, 0xFB	; 251
     300:	90 81       	ld	r25, Z
     302:	98 60       	ori	r25, 0x08	; 8
     304:	90 83       	st	Z, r25
     306:	8f 5f       	subi	r24, 0xFF	; 255
     308:	86 30       	cpi	r24, 0x06	; 6
     30a:	b0 f3       	brcs	.-20     	; 0x2f8 <PORT_LOWPOWER_Init+0x1c>
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	08 c0       	rjmp	.+16     	; 0x320 <PORT_LOWPOWER_Init+0x44>
     310:	e8 2f       	mov	r30, r24
     312:	f0 e0       	ldi	r31, 0x00	; 0
     314:	e0 5b       	subi	r30, 0xB0	; 176
     316:	fb 4f       	sbci	r31, 0xFB	; 251
     318:	90 81       	ld	r25, Z
     31a:	98 60       	ori	r25, 0x08	; 8
     31c:	90 83       	st	Z, r25
     31e:	8f 5f       	subi	r24, 0xFF	; 255
     320:	84 30       	cpi	r24, 0x04	; 4
     322:	b0 f3       	brcs	.-20     	; 0x310 <PORT_LOWPOWER_Init+0x34>
     324:	08 95       	ret

00000326 <Sleep_Micro>:
     326:	88 ed       	ldi	r24, 0xD8	; 216
     328:	84 bf       	out	0x34, r24	; 52
     32a:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__RODATA_PM_OFFSET__+0x7f8100>
     32e:	e0 e5       	ldi	r30, 0x50	; 80
     330:	f0 e0       	ldi	r31, 0x00	; 0
     332:	80 81       	ld	r24, Z
     334:	89 7f       	andi	r24, 0xF9	; 249
     336:	84 60       	ori	r24, 0x04	; 4
     338:	80 83       	st	Z, r24
     33a:	f8 94       	cli
     33c:	80 81       	ld	r24, Z
     33e:	81 60       	ori	r24, 0x01	; 1
     340:	80 83       	st	Z, r24
     342:	78 94       	sei
     344:	88 95       	sleep
     346:	80 81       	ld	r24, Z
     348:	8e 7f       	andi	r24, 0xFE	; 254
     34a:	80 83       	st	Z, r24
     34c:	08 95       	ret

0000034e <CLOCK32K_init>:
     34e:	88 ed       	ldi	r24, 0xD8	; 216
     350:	84 bf       	out	0x34, r24	; 52
     352:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
     356:	84 bf       	out	0x34, r24	; 52
     358:	81 e0       	ldi	r24, 0x01	; 1
     35a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__RODATA_PM_OFFSET__+0x7f8060>
     35e:	08 95       	ret

00000360 <USART0_sendChar>:
     360:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
     364:	95 ff       	sbrs	r25, 5
     366:	fc cf       	rjmp	.-8      	; 0x360 <USART0_sendChar>
     368:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
     36c:	08 95       	ret

0000036e <USART0_printChar>:
     36e:	0e 94 b0 01 	call	0x360	; 0x360 <USART0_sendChar>
     372:	80 e0       	ldi	r24, 0x00	; 0
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	08 95       	ret

00000378 <USART0_readChar>:
     378:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
     37c:	88 23       	and	r24, r24
     37e:	e4 f7       	brge	.-8      	; 0x378 <USART0_readChar>
     380:	80 91 00 08 	lds	r24, 0x0800	; 0x800800 <__RODATA_PM_OFFSET__+0x7f8800>
     384:	08 95       	ret

00000386 <USART0_init>:
     386:	e0 e0       	ldi	r30, 0x00	; 0
     388:	f8 e0       	ldi	r31, 0x08	; 8
     38a:	8d e6       	ldi	r24, 0x6D	; 109
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	80 87       	std	Z+8, r24	; 0x08
     390:	91 87       	std	Z+9, r25	; 0x09
     392:	80 ec       	ldi	r24, 0xC0	; 192
     394:	86 83       	std	Z+6, r24	; 0x06
     396:	80 e8       	ldi	r24, 0x80	; 128
     398:	80 93 05 08 	sts	0x0805, r24	; 0x800805 <__RODATA_PM_OFFSET__+0x7f8805>
     39c:	81 e0       	ldi	r24, 0x01	; 1
     39e:	80 93 e2 05 	sts	0x05E2, r24	; 0x8005e2 <__RODATA_PM_OFFSET__+0x7f85e2>
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	98 e3       	ldi	r25, 0x38	; 56
     3a6:	80 93 0c 39 	sts	0x390C, r24	; 0x80390c <__iob+0x2>
     3aa:	90 93 0d 39 	sts	0x390D, r25	; 0x80390d <__iob+0x3>
     3ae:	08 95       	ret

000003b0 <__vector_17>:
     3b0:	1f 92       	push	r1
     3b2:	0f 92       	push	r0
     3b4:	0f b6       	in	r0, 0x3f	; 63
     3b6:	0f 92       	push	r0
     3b8:	11 24       	eor	r1, r1
     3ba:	2f 93       	push	r18
     3bc:	3f 93       	push	r19
     3be:	4f 93       	push	r20
     3c0:	5f 93       	push	r21
     3c2:	6f 93       	push	r22
     3c4:	7f 93       	push	r23
     3c6:	8f 93       	push	r24
     3c8:	9f 93       	push	r25
     3ca:	af 93       	push	r26
     3cc:	bf 93       	push	r27
     3ce:	ef 93       	push	r30
     3d0:	ff 93       	push	r31
     3d2:	0e 94 bc 01 	call	0x378	; 0x378 <USART0_readChar>
     3d6:	80 93 07 39 	sts	0x3907, r24	; 0x803907 <c>
     3da:	88 23       	and	r24, r24
     3dc:	81 f0       	breq	.+32     	; 0x3fe <__vector_17+0x4e>
     3de:	8d 30       	cpi	r24, 0x0D	; 13
     3e0:	71 f0       	breq	.+28     	; 0x3fe <__vector_17+0x4e>
     3e2:	90 91 70 38 	lds	r25, 0x3870	; 0x803870 <index1>
     3e6:	e9 2f       	mov	r30, r25
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	e2 5f       	subi	r30, 0xF2	; 242
     3ec:	f7 4c       	sbci	r31, 0xC7	; 199
     3ee:	80 83       	st	Z, r24
     3f0:	9f 5f       	subi	r25, 0xFF	; 255
     3f2:	90 93 70 38 	sts	0x3870, r25	; 0x803870 <index1>
     3f6:	93 33       	cpi	r25, 0x33	; 51
     3f8:	10 f0       	brcs	.+4      	; 0x3fe <__vector_17+0x4e>
     3fa:	10 92 70 38 	sts	0x3870, r1	; 0x803870 <index1>
     3fe:	8d 30       	cpi	r24, 0x0D	; 13
     400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     402:	4f c0       	rjmp	.+158    	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     404:	e0 91 70 38 	lds	r30, 0x3870	; 0x803870 <index1>
     408:	f0 e0       	ldi	r31, 0x00	; 0
     40a:	e2 5f       	subi	r30, 0xF2	; 242
     40c:	f7 4c       	sbci	r31, 0xC7	; 199
     40e:	80 83       	st	Z, r24
     410:	10 92 70 38 	sts	0x3870, r1	; 0x803870 <index1>
     414:	80 91 d5 38 	lds	r24, 0x38D5	; 0x8038d5 <command1>
     418:	81 11       	cpse	r24, r1
     41a:	11 c0       	rjmp	.+34     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     41c:	90 91 a3 38 	lds	r25, 0x38A3	; 0x8038a3 <command2>
     420:	91 11       	cpse	r25, r1
     422:	0d c0       	rjmp	.+26     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     424:	90 91 71 38 	lds	r25, 0x3871	; 0x803871 <command3>
     428:	91 11       	cpse	r25, r1
     42a:	09 c0       	rjmp	.+18     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     42c:	42 e3       	ldi	r20, 0x32	; 50
     42e:	50 e0       	ldi	r21, 0x00	; 0
     430:	6e e0       	ldi	r22, 0x0E	; 14
     432:	78 e3       	ldi	r23, 0x38	; 56
     434:	85 ed       	ldi	r24, 0xD5	; 213
     436:	98 e3       	ldi	r25, 0x38	; 56
     438:	0e 94 83 1a 	call	0x3506	; 0x3506 <strncpy>
     43c:	25 c0       	rjmp	.+74     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     43e:	88 23       	and	r24, r24
     440:	89 f0       	breq	.+34     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     442:	90 91 a3 38 	lds	r25, 0x38A3	; 0x8038a3 <command2>
     446:	91 11       	cpse	r25, r1
     448:	0d c0       	rjmp	.+26     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     44a:	90 91 71 38 	lds	r25, 0x3871	; 0x803871 <command3>
     44e:	91 11       	cpse	r25, r1
     450:	09 c0       	rjmp	.+18     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     452:	42 e3       	ldi	r20, 0x32	; 50
     454:	50 e0       	ldi	r21, 0x00	; 0
     456:	6e e0       	ldi	r22, 0x0E	; 14
     458:	78 e3       	ldi	r23, 0x38	; 56
     45a:	83 ea       	ldi	r24, 0xA3	; 163
     45c:	98 e3       	ldi	r25, 0x38	; 56
     45e:	0e 94 83 1a 	call	0x3506	; 0x3506 <strncpy>
     462:	12 c0       	rjmp	.+36     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     464:	88 23       	and	r24, r24
     466:	81 f0       	breq	.+32     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     468:	80 91 a3 38 	lds	r24, 0x38A3	; 0x8038a3 <command2>
     46c:	88 23       	and	r24, r24
     46e:	61 f0       	breq	.+24     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     470:	80 91 71 38 	lds	r24, 0x3871	; 0x803871 <command3>
     474:	81 11       	cpse	r24, r1
     476:	08 c0       	rjmp	.+16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     478:	42 e3       	ldi	r20, 0x32	; 50
     47a:	50 e0       	ldi	r21, 0x00	; 0
     47c:	6e e0       	ldi	r22, 0x0E	; 14
     47e:	78 e3       	ldi	r23, 0x38	; 56
     480:	81 e7       	ldi	r24, 0x71	; 113
     482:	98 e3       	ldi	r25, 0x38	; 56
     484:	0e 94 83 1a 	call	0x3506	; 0x3506 <strncpy>
     488:	82 e3       	ldi	r24, 0x32	; 50
     48a:	ee e0       	ldi	r30, 0x0E	; 14
     48c:	f8 e3       	ldi	r31, 0x38	; 56
     48e:	df 01       	movw	r26, r30
     490:	1d 92       	st	X+, r1
     492:	8a 95       	dec	r24
     494:	e9 f7       	brne	.-6      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	80 93 6e 38 	sts	0x386E, r24	; 0x80386e <flag>
     49e:	90 93 6f 38 	sts	0x386F, r25	; 0x80386f <flag+0x1>
     4a2:	ff 91       	pop	r31
     4a4:	ef 91       	pop	r30
     4a6:	bf 91       	pop	r27
     4a8:	af 91       	pop	r26
     4aa:	9f 91       	pop	r25
     4ac:	8f 91       	pop	r24
     4ae:	7f 91       	pop	r23
     4b0:	6f 91       	pop	r22
     4b2:	5f 91       	pop	r21
     4b4:	4f 91       	pop	r20
     4b6:	3f 91       	pop	r19
     4b8:	2f 91       	pop	r18
     4ba:	0f 90       	pop	r0
     4bc:	0f be       	out	0x3f, r0	; 63
     4be:	0f 90       	pop	r0
     4c0:	1f 90       	pop	r1
     4c2:	18 95       	reti

000004c4 <write_EEPROM>:
     4c4:	fc 01       	movw	r30, r24
     4c6:	60 83       	st	Z, r22
     4c8:	8d e9       	ldi	r24, 0x9D	; 157
     4ca:	84 bf       	out	0x34, r24	; 52
     4cc:	83 e0       	ldi	r24, 0x03	; 3
     4ce:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
     4d2:	08 95       	ret

000004d4 <read_EEPROM>:
     4d4:	fc 01       	movw	r30, r24
     4d6:	80 81       	ld	r24, Z
     4d8:	08 95       	ret

000004da <ADC0_init>:
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f6 e0       	ldi	r31, 0x06	; 6
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	81 83       	std	Z+1, r24	; 0x01
     4e2:	86 e0       	ldi	r24, 0x06	; 6
     4e4:	82 83       	std	Z+2, r24	; 0x02
     4e6:	08 95       	ret

000004e8 <ADC0_read>:
     4e8:	81 e1       	ldi	r24, 0x11	; 17
     4ea:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__RODATA_PM_OFFSET__+0x7f860a>
     4ee:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
     4f2:	80 ff       	sbrs	r24, 0
     4f4:	fc cf       	rjmp	.-8      	; 0x4ee <ADC0_read+0x6>
     4f6:	e0 e0       	ldi	r30, 0x00	; 0
     4f8:	f6 e0       	ldi	r31, 0x06	; 6
     4fa:	81 e0       	ldi	r24, 0x01	; 1
     4fc:	85 83       	std	Z+5, r24	; 0x05
     4fe:	80 89       	ldd	r24, Z+16	; 0x10
     500:	91 89       	ldd	r25, Z+17	; 0x11
     502:	a2 89       	ldd	r26, Z+18	; 0x12
     504:	b3 89       	ldd	r27, Z+19	; 0x13
     506:	08 95       	ret

00000508 <get_Voltage>:
     508:	8f 92       	push	r8
     50a:	9f 92       	push	r9
     50c:	af 92       	push	r10
     50e:	bf 92       	push	r11
     510:	cf 92       	push	r12
     512:	df 92       	push	r13
     514:	ef 92       	push	r14
     516:	ff 92       	push	r15
     518:	cf 93       	push	r28
     51a:	df 93       	push	r29
     51c:	86 30       	cpi	r24, 0x06	; 6
     51e:	91 05       	cpc	r25, r1
     520:	c9 f0       	breq	.+50     	; 0x554 <get_Voltage+0x4c>
     522:	89 30       	cpi	r24, 0x09	; 9
     524:	91 05       	cpc	r25, r1
     526:	19 f0       	breq	.+6      	; 0x52e <get_Voltage+0x26>
     528:	05 97       	sbiw	r24, 0x05	; 5
     52a:	71 f4       	brne	.+28     	; 0x548 <get_Voltage+0x40>
     52c:	07 c0       	rjmp	.+14     	; 0x53c <get_Voltage+0x34>
     52e:	e0 e0       	ldi	r30, 0x00	; 0
     530:	f6 e0       	ldi	r31, 0x06	; 6
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	80 83       	st	Z, r24
     536:	89 e0       	ldi	r24, 0x09	; 9
     538:	84 87       	std	Z+12, r24	; 0x0c
     53a:	06 c0       	rjmp	.+12     	; 0x548 <get_Voltage+0x40>
     53c:	e0 e0       	ldi	r30, 0x00	; 0
     53e:	f6 e0       	ldi	r31, 0x06	; 6
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	80 83       	st	Z, r24
     544:	85 e0       	ldi	r24, 0x05	; 5
     546:	84 87       	std	Z+12, r24	; 0x0c
     548:	c0 e0       	ldi	r28, 0x00	; 0
     54a:	d0 e0       	ldi	r29, 0x00	; 0
     54c:	c1 2c       	mov	r12, r1
     54e:	d1 2c       	mov	r13, r1
     550:	76 01       	movw	r14, r12
     552:	37 c0       	rjmp	.+110    	; 0x5c2 <get_Voltage+0xba>
     554:	e0 e0       	ldi	r30, 0x00	; 0
     556:	f6 e0       	ldi	r31, 0x06	; 6
     558:	81 e0       	ldi	r24, 0x01	; 1
     55a:	80 83       	st	Z, r24
     55c:	86 e0       	ldi	r24, 0x06	; 6
     55e:	84 87       	std	Z+12, r24	; 0x0c
     560:	f3 cf       	rjmp	.-26     	; 0x548 <get_Voltage+0x40>
     562:	0e 94 74 02 	call	0x4e8	; 0x4e8 <ADC0_read>
     566:	bc 01       	movw	r22, r24
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 96 10 	call	0x212c	; 0x212c <__floatunsisf>
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	40 e2       	ldi	r20, 0x20	; 32
     576:	50 e4       	ldi	r21, 0x40	; 64
     578:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	40 e8       	ldi	r20, 0x80	; 128
     582:	59 e3       	ldi	r21, 0x39	; 57
     584:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	40 e0       	ldi	r20, 0x00	; 0
     58e:	5f e3       	ldi	r21, 0x3F	; 63
     590:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     594:	4b 01       	movw	r8, r22
     596:	5c 01       	movw	r10, r24
     598:	20 e0       	ldi	r18, 0x00	; 0
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	40 e0       	ldi	r20, 0x00	; 0
     59e:	5f e3       	ldi	r21, 0x3F	; 63
     5a0:	c7 01       	movw	r24, r14
     5a2:	b6 01       	movw	r22, r12
     5a4:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     5a8:	9b 01       	movw	r18, r22
     5aa:	ac 01       	movw	r20, r24
     5ac:	c5 01       	movw	r24, r10
     5ae:	b4 01       	movw	r22, r8
     5b0:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <__addsf3>
     5b4:	6b 01       	movw	r12, r22
     5b6:	7c 01       	movw	r14, r24
     5b8:	21 96       	adiw	r28, 0x01	; 1
     5ba:	83 e3       	ldi	r24, 0x33	; 51
     5bc:	93 e0       	ldi	r25, 0x03	; 3
     5be:	01 97       	sbiw	r24, 0x01	; 1
     5c0:	f1 f7       	brne	.-4      	; 0x5be <get_Voltage+0xb6>
     5c2:	c4 31       	cpi	r28, 0x14	; 20
     5c4:	d1 05       	cpc	r29, r1
     5c6:	6c f2       	brlt	.-102    	; 0x562 <get_Voltage+0x5a>
     5c8:	e0 e0       	ldi	r30, 0x00	; 0
     5ca:	f6 e0       	ldi	r31, 0x06	; 6
     5cc:	80 81       	ld	r24, Z
     5ce:	8e 7f       	andi	r24, 0xFE	; 254
     5d0:	80 83       	st	Z, r24
     5d2:	c7 01       	movw	r24, r14
     5d4:	b6 01       	movw	r22, r12
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	ff 90       	pop	r15
     5dc:	ef 90       	pop	r14
     5de:	df 90       	pop	r13
     5e0:	cf 90       	pop	r12
     5e2:	bf 90       	pop	r11
     5e4:	af 90       	pop	r10
     5e6:	9f 90       	pop	r9
     5e8:	8f 90       	pop	r8
     5ea:	08 95       	ret

000005ec <TWI_GetStatus>:
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
     5f2:	90 7c       	andi	r25, 0xC0	; 192
     5f4:	29 f4       	brne	.+10     	; 0x600 <TWI_GetStatus+0x14>
     5f6:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
     5fa:	9c 70       	andi	r25, 0x0C	; 12
     5fc:	19 f4       	brne	.+6      	; 0x604 <TWI_GetStatus+0x18>
     5fe:	03 c0       	rjmp	.+6      	; 0x606 <TWI_GetStatus+0x1a>
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	01 c0       	rjmp	.+2      	; 0x606 <TWI_GetStatus+0x1a>
     604:	82 e0       	ldi	r24, 0x02	; 2
     606:	88 23       	and	r24, r24
     608:	91 f3       	breq	.-28     	; 0x5ee <TWI_GetStatus+0x2>
     60a:	08 95       	ret

0000060c <get_I2CValue>:
     60c:	ef 92       	push	r14
     60e:	ff 92       	push	r15
     610:	0f 93       	push	r16
     612:	1f 93       	push	r17
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	8c 01       	movw	r16, r24
     61a:	8f ef       	ldi	r24, 0xFF	; 255
     61c:	9f e0       	ldi	r25, 0x0F	; 15
     61e:	01 97       	sbiw	r24, 0x01	; 1
     620:	f1 f7       	brne	.-4      	; 0x61e <get_I2CValue+0x12>
     622:	00 c0       	rjmp	.+0      	; 0x624 <get_I2CValue+0x18>
     624:	00 00       	nop
     626:	e0 ea       	ldi	r30, 0xA0	; 160
     628:	f8 e0       	ldi	r31, 0x08	; 8
     62a:	16 82       	std	Z+6, r1	; 0x06
     62c:	83 e0       	ldi	r24, 0x03	; 3
     62e:	83 83       	std	Z+3, r24	; 0x03
     630:	17 82       	std	Z+7, r1	; 0x07
     632:	10 86       	std	Z+8, r1	; 0x08
     634:	88 e0       	ldi	r24, 0x08	; 8
     636:	84 83       	std	Z+4, r24	; 0x04
     638:	85 81       	ldd	r24, Z+5	; 0x05
     63a:	80 6c       	ori	r24, 0xC0	; 192
     63c:	85 83       	std	Z+5, r24	; 0x05
     63e:	81 e0       	ldi	r24, 0x01	; 1
     640:	85 83       	std	Z+5, r24	; 0x05
     642:	81 e5       	ldi	r24, 0x51	; 81
     644:	87 83       	std	Z+7, r24	; 0x07
     646:	80 91 a5 08 	lds	r24, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
     64a:	84 fd       	sbrc	r24, 4
     64c:	fc cf       	rjmp	.-8      	; 0x646 <get_I2CValue+0x3a>
     64e:	83 e0       	ldi	r24, 0x03	; 3
     650:	80 93 a4 08 	sts	0x08A4, r24	; 0x8008a4 <__RODATA_PM_OFFSET__+0x7f88a4>
     654:	01 30       	cpi	r16, 0x01	; 1
     656:	11 05       	cpc	r17, r1
     658:	a9 f4       	brne	.+42     	; 0x684 <get_I2CValue+0x78>
     65a:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
     65e:	80 91 a8 08 	lds	r24, 0x08A8	; 0x8008a8 <__RODATA_PM_OFFSET__+0x7f88a8>
     662:	1f 92       	push	r1
     664:	9f 93       	push	r25
     666:	1f 92       	push	r1
     668:	8f 93       	push	r24
     66a:	86 e0       	ldi	r24, 0x06	; 6
     66c:	98 eb       	ldi	r25, 0xB8	; 184
     66e:	9f 93       	push	r25
     670:	8f 93       	push	r24
     672:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     676:	0f 90       	pop	r0
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	0f 90       	pop	r0
     682:	04 c0       	rjmp	.+8      	; 0x68c <get_I2CValue+0x80>
     684:	9a ed       	ldi	r25, 0xDA	; 218
     686:	9a 95       	dec	r25
     688:	f1 f7       	brne	.-4      	; 0x686 <get_I2CValue+0x7a>
     68a:	00 c0       	rjmp	.+0      	; 0x68c <get_I2CValue+0x80>
     68c:	e0 ea       	ldi	r30, 0xA0	; 160
     68e:	f8 e0       	ldi	r31, 0x08	; 8
     690:	88 e0       	ldi	r24, 0x08	; 8
     692:	84 83       	std	Z+4, r24	; 0x04
     694:	85 81       	ldd	r24, Z+5	; 0x05
     696:	80 6c       	ori	r24, 0xC0	; 192
     698:	85 83       	std	Z+5, r24	; 0x05
     69a:	01 30       	cpi	r16, 0x01	; 1
     69c:	11 05       	cpc	r17, r1
     69e:	29 f0       	breq	.+10     	; 0x6aa <get_I2CValue+0x9e>
     6a0:	89 e9       	ldi	r24, 0x99	; 153
     6a2:	91 e0       	ldi	r25, 0x01	; 1
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <get_I2CValue+0x98>
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <get_I2CValue+0x9e>
     6aa:	81 e5       	ldi	r24, 0x51	; 81
     6ac:	80 93 a7 08 	sts	0x08A7, r24	; 0x8008a7 <__RODATA_PM_OFFSET__+0x7f88a7>
     6b0:	0e 94 f6 02 	call	0x5ec	; 0x5ec <TWI_GetStatus>
     6b4:	81 30       	cpi	r24, 0x01	; 1
     6b6:	09 f0       	breq	.+2      	; 0x6ba <get_I2CValue+0xae>
     6b8:	42 c0       	rjmp	.+132    	; 0x73e <get_I2CValue+0x132>
     6ba:	80 91 a8 08 	lds	r24, 0x08A8	; 0x8008a8 <__RODATA_PM_OFFSET__+0x7f88a8>
     6be:	c8 2f       	mov	r28, r24
     6c0:	d0 e0       	ldi	r29, 0x00	; 0
     6c2:	01 30       	cpi	r16, 0x01	; 1
     6c4:	11 05       	cpc	r17, r1
     6c6:	99 f4       	brne	.+38     	; 0x6ee <get_I2CValue+0xe2>
     6c8:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
     6cc:	1f 92       	push	r1
     6ce:	9f 93       	push	r25
     6d0:	1f 92       	push	r1
     6d2:	8f 93       	push	r24
     6d4:	84 e2       	ldi	r24, 0x24	; 36
     6d6:	98 eb       	ldi	r25, 0xB8	; 184
     6d8:	9f 93       	push	r25
     6da:	8f 93       	push	r24
     6dc:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     6e0:	0f 90       	pop	r0
     6e2:	0f 90       	pop	r0
     6e4:	0f 90       	pop	r0
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	05 c0       	rjmp	.+10     	; 0x6f8 <get_I2CValue+0xec>
     6ee:	89 e9       	ldi	r24, 0x99	; 153
     6f0:	91 e0       	ldi	r25, 0x01	; 1
     6f2:	01 97       	sbiw	r24, 0x01	; 1
     6f4:	f1 f7       	brne	.-4      	; 0x6f2 <get_I2CValue+0xe6>
     6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <get_I2CValue+0xec>
     6f8:	e0 ea       	ldi	r30, 0xA0	; 160
     6fa:	f8 e0       	ldi	r31, 0x08	; 8
     6fc:	83 e0       	ldi	r24, 0x03	; 3
     6fe:	84 83       	std	Z+4, r24	; 0x04
     700:	80 85       	ldd	r24, Z+8	; 0x08
     702:	e8 2e       	mov	r14, r24
     704:	f1 2c       	mov	r15, r1
     706:	01 30       	cpi	r16, 0x01	; 1
     708:	11 05       	cpc	r17, r1
     70a:	99 f4       	brne	.+38     	; 0x732 <get_I2CValue+0x126>
     70c:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <__RODATA_PM_OFFSET__+0x7f88a5>
     710:	1f 92       	push	r1
     712:	9f 93       	push	r25
     714:	1f 92       	push	r1
     716:	8f 93       	push	r24
     718:	8a e3       	ldi	r24, 0x3A	; 58
     71a:	98 eb       	ldi	r25, 0xB8	; 184
     71c:	9f 93       	push	r25
     71e:	8f 93       	push	r24
     720:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     724:	0f 90       	pop	r0
     726:	0f 90       	pop	r0
     728:	0f 90       	pop	r0
     72a:	0f 90       	pop	r0
     72c:	0f 90       	pop	r0
     72e:	0f 90       	pop	r0
     730:	0a c0       	rjmp	.+20     	; 0x746 <get_I2CValue+0x13a>
     732:	89 e9       	ldi	r24, 0x99	; 153
     734:	91 e0       	ldi	r25, 0x01	; 1
     736:	01 97       	sbiw	r24, 0x01	; 1
     738:	f1 f7       	brne	.-4      	; 0x736 <get_I2CValue+0x12a>
     73a:	00 c0       	rjmp	.+0      	; 0x73c <get_I2CValue+0x130>
     73c:	04 c0       	rjmp	.+8      	; 0x746 <get_I2CValue+0x13a>
     73e:	e1 2c       	mov	r14, r1
     740:	f1 2c       	mov	r15, r1
     742:	c0 e0       	ldi	r28, 0x00	; 0
     744:	d0 e0       	ldi	r29, 0x00	; 0
     746:	e0 ea       	ldi	r30, 0xA0	; 160
     748:	f8 e0       	ldi	r31, 0x08	; 8
     74a:	83 81       	ldd	r24, Z+3	; 0x03
     74c:	8e 7f       	andi	r24, 0xFE	; 254
     74e:	83 83       	std	Z+3, r24	; 0x03
     750:	dc 2f       	mov	r29, r28
     752:	cc 27       	eor	r28, r28
     754:	ce 29       	or	r28, r14
     756:	df 29       	or	r29, r15
     758:	01 30       	cpi	r16, 0x01	; 1
     75a:	11 05       	cpc	r17, r1
     75c:	61 f4       	brne	.+24     	; 0x776 <get_I2CValue+0x16a>
     75e:	df 93       	push	r29
     760:	cf 93       	push	r28
     762:	8f e4       	ldi	r24, 0x4F	; 79
     764:	98 eb       	ldi	r25, 0xB8	; 184
     766:	9f 93       	push	r25
     768:	8f 93       	push	r24
     76a:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     76e:	0f 90       	pop	r0
     770:	0f 90       	pop	r0
     772:	0f 90       	pop	r0
     774:	0f 90       	pop	r0
     776:	ce 01       	movw	r24, r28
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	1f 91       	pop	r17
     77e:	0f 91       	pop	r16
     780:	ff 90       	pop	r15
     782:	ef 90       	pop	r14
     784:	08 95       	ret

00000786 <get_PresureADC2>:
     786:	cf 92       	push	r12
     788:	df 92       	push	r13
     78a:	ef 92       	push	r14
     78c:	ff 92       	push	r15
     78e:	0f 93       	push	r16
     790:	1f 93       	push	r17
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	cd b7       	in	r28, 0x3d	; 61
     798:	de b7       	in	r29, 0x3e	; 62
     79a:	2c 97       	sbiw	r28, 0x0c	; 12
     79c:	cd bf       	out	0x3d, r28	; 61
     79e:	de bf       	out	0x3e, r29	; 62
     7a0:	6b 01       	movw	r12, r22
     7a2:	7c 01       	movw	r14, r24
     7a4:	00 e0       	ldi	r16, 0x00	; 0
     7a6:	10 e0       	ldi	r17, 0x00	; 0
     7a8:	26 c0       	rjmp	.+76     	; 0x7f6 <get_PresureADC2+0x70>
     7aa:	c8 01       	movw	r24, r16
     7ac:	88 51       	subi	r24, 0x18	; 24
     7ae:	9b 4e       	sbci	r25, 0xEB	; 235
     7b0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
     7b4:	e1 e0       	ldi	r30, 0x01	; 1
     7b6:	f0 e0       	ldi	r31, 0x00	; 0
     7b8:	ec 0f       	add	r30, r28
     7ba:	fd 1f       	adc	r31, r29
     7bc:	e0 0f       	add	r30, r16
     7be:	f1 1f       	adc	r31, r17
     7c0:	80 83       	st	Z, r24
     7c2:	c8 01       	movw	r24, r16
     7c4:	84 51       	subi	r24, 0x14	; 20
     7c6:	9b 4e       	sbci	r25, 0xEB	; 235
     7c8:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
     7cc:	e5 e0       	ldi	r30, 0x05	; 5
     7ce:	f0 e0       	ldi	r31, 0x00	; 0
     7d0:	ec 0f       	add	r30, r28
     7d2:	fd 1f       	adc	r31, r29
     7d4:	e0 0f       	add	r30, r16
     7d6:	f1 1f       	adc	r31, r17
     7d8:	80 83       	st	Z, r24
     7da:	c8 01       	movw	r24, r16
     7dc:	80 51       	subi	r24, 0x10	; 16
     7de:	9b 4e       	sbci	r25, 0xEB	; 235
     7e0:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
     7e4:	e9 e0       	ldi	r30, 0x09	; 9
     7e6:	f0 e0       	ldi	r31, 0x00	; 0
     7e8:	ec 0f       	add	r30, r28
     7ea:	fd 1f       	adc	r31, r29
     7ec:	e0 0f       	add	r30, r16
     7ee:	f1 1f       	adc	r31, r17
     7f0:	80 83       	st	Z, r24
     7f2:	0f 5f       	subi	r16, 0xFF	; 255
     7f4:	1f 4f       	sbci	r17, 0xFF	; 255
     7f6:	04 30       	cpi	r16, 0x04	; 4
     7f8:	11 05       	cpc	r17, r1
     7fa:	bc f2       	brlt	.-82     	; 0x7aa <get_PresureADC2+0x24>
     7fc:	69 81       	ldd	r22, Y+1	; 0x01
     7fe:	7a 81       	ldd	r23, Y+2	; 0x02
     800:	8b 81       	ldd	r24, Y+3	; 0x03
     802:	9c 81       	ldd	r25, Y+4	; 0x04
     804:	a7 01       	movw	r20, r14
     806:	96 01       	movw	r18, r12
     808:	0e 94 24 11 	call	0x2248	; 0x2248 <__gesf2>
     80c:	88 23       	and	r24, r24
     80e:	ac f4       	brge	.+42     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     810:	2d 81       	ldd	r18, Y+5	; 0x05
     812:	3e 81       	ldd	r19, Y+6	; 0x06
     814:	4f 81       	ldd	r20, Y+7	; 0x07
     816:	58 85       	ldd	r21, Y+8	; 0x08
     818:	c7 01       	movw	r24, r14
     81a:	b6 01       	movw	r22, r12
     81c:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     820:	29 85       	ldd	r18, Y+9	; 0x09
     822:	3a 85       	ldd	r19, Y+10	; 0x0a
     824:	4b 85       	ldd	r20, Y+11	; 0x0b
     826:	5c 85       	ldd	r21, Y+12	; 0x0c
     828:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__subsf3>
     82c:	23 e3       	ldi	r18, 0x33	; 51
     82e:	33 e3       	ldi	r19, 0x33	; 51
     830:	43 e2       	ldi	r20, 0x23	; 35
     832:	51 e4       	ldi	r21, 0x41	; 65
     834:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     838:	03 c0       	rjmp	.+6      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     83a:	60 e0       	ldi	r22, 0x00	; 0
     83c:	70 e0       	ldi	r23, 0x00	; 0
     83e:	cb 01       	movw	r24, r22
     840:	2c 96       	adiw	r28, 0x0c	; 12
     842:	cd bf       	out	0x3d, r28	; 61
     844:	de bf       	out	0x3e, r29	; 62
     846:	df 91       	pop	r29
     848:	cf 91       	pop	r28
     84a:	1f 91       	pop	r17
     84c:	0f 91       	pop	r16
     84e:	ff 90       	pop	r15
     850:	ef 90       	pop	r14
     852:	df 90       	pop	r13
     854:	cf 90       	pop	r12
     856:	08 95       	ret

00000858 <get_PresureADC1>:
     858:	cf 92       	push	r12
     85a:	df 92       	push	r13
     85c:	ef 92       	push	r14
     85e:	ff 92       	push	r15
     860:	0f 93       	push	r16
     862:	1f 93       	push	r17
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	cd b7       	in	r28, 0x3d	; 61
     86a:	de b7       	in	r29, 0x3e	; 62
     86c:	2c 97       	sbiw	r28, 0x0c	; 12
     86e:	cd bf       	out	0x3d, r28	; 61
     870:	de bf       	out	0x3e, r29	; 62
     872:	6b 01       	movw	r12, r22
     874:	7c 01       	movw	r14, r24
     876:	00 e0       	ldi	r16, 0x00	; 0
     878:	10 e0       	ldi	r17, 0x00	; 0
     87a:	26 c0       	rjmp	.+76     	; 0x8c8 <get_PresureADC1+0x70>
     87c:	c8 01       	movw	r24, r16
     87e:	8c 50       	subi	r24, 0x0C	; 12
     880:	9b 4e       	sbci	r25, 0xEB	; 235
     882:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
     886:	e1 e0       	ldi	r30, 0x01	; 1
     888:	f0 e0       	ldi	r31, 0x00	; 0
     88a:	ec 0f       	add	r30, r28
     88c:	fd 1f       	adc	r31, r29
     88e:	e0 0f       	add	r30, r16
     890:	f1 1f       	adc	r31, r17
     892:	80 83       	st	Z, r24
     894:	c8 01       	movw	r24, r16
     896:	88 50       	subi	r24, 0x08	; 8
     898:	9b 4e       	sbci	r25, 0xEB	; 235
     89a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
     89e:	e5 e0       	ldi	r30, 0x05	; 5
     8a0:	f0 e0       	ldi	r31, 0x00	; 0
     8a2:	ec 0f       	add	r30, r28
     8a4:	fd 1f       	adc	r31, r29
     8a6:	e0 0f       	add	r30, r16
     8a8:	f1 1f       	adc	r31, r17
     8aa:	80 83       	st	Z, r24
     8ac:	c8 01       	movw	r24, r16
     8ae:	84 50       	subi	r24, 0x04	; 4
     8b0:	9b 4e       	sbci	r25, 0xEB	; 235
     8b2:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
     8b6:	e9 e0       	ldi	r30, 0x09	; 9
     8b8:	f0 e0       	ldi	r31, 0x00	; 0
     8ba:	ec 0f       	add	r30, r28
     8bc:	fd 1f       	adc	r31, r29
     8be:	e0 0f       	add	r30, r16
     8c0:	f1 1f       	adc	r31, r17
     8c2:	80 83       	st	Z, r24
     8c4:	0f 5f       	subi	r16, 0xFF	; 255
     8c6:	1f 4f       	sbci	r17, 0xFF	; 255
     8c8:	04 30       	cpi	r16, 0x04	; 4
     8ca:	11 05       	cpc	r17, r1
     8cc:	bc f2       	brlt	.-82     	; 0x87c <get_PresureADC1+0x24>
     8ce:	69 81       	ldd	r22, Y+1	; 0x01
     8d0:	7a 81       	ldd	r23, Y+2	; 0x02
     8d2:	8b 81       	ldd	r24, Y+3	; 0x03
     8d4:	9c 81       	ldd	r25, Y+4	; 0x04
     8d6:	a7 01       	movw	r20, r14
     8d8:	96 01       	movw	r18, r12
     8da:	0e 94 24 11 	call	0x2248	; 0x2248 <__gesf2>
     8de:	88 23       	and	r24, r24
     8e0:	ac f4       	brge	.+42     	; 0x90c <get_PresureADC1+0xb4>
     8e2:	2d 81       	ldd	r18, Y+5	; 0x05
     8e4:	3e 81       	ldd	r19, Y+6	; 0x06
     8e6:	4f 81       	ldd	r20, Y+7	; 0x07
     8e8:	58 85       	ldd	r21, Y+8	; 0x08
     8ea:	c7 01       	movw	r24, r14
     8ec:	b6 01       	movw	r22, r12
     8ee:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     8f2:	29 85       	ldd	r18, Y+9	; 0x09
     8f4:	3a 85       	ldd	r19, Y+10	; 0x0a
     8f6:	4b 85       	ldd	r20, Y+11	; 0x0b
     8f8:	5c 85       	ldd	r21, Y+12	; 0x0c
     8fa:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <__subsf3>
     8fe:	23 e3       	ldi	r18, 0x33	; 51
     900:	33 e3       	ldi	r19, 0x33	; 51
     902:	43 e2       	ldi	r20, 0x23	; 35
     904:	51 e4       	ldi	r21, 0x41	; 65
     906:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     90a:	03 c0       	rjmp	.+6      	; 0x912 <get_PresureADC1+0xba>
     90c:	60 e0       	ldi	r22, 0x00	; 0
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	cb 01       	movw	r24, r22
     912:	2c 96       	adiw	r28, 0x0c	; 12
     914:	cd bf       	out	0x3d, r28	; 61
     916:	de bf       	out	0x3e, r29	; 62
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	1f 91       	pop	r17
     91e:	0f 91       	pop	r16
     920:	ff 90       	pop	r15
     922:	ef 90       	pop	r14
     924:	df 90       	pop	r13
     926:	cf 90       	pop	r12
     928:	08 95       	ret

0000092a <get_PressureI2C>:
     92a:	0f 93       	push	r16
     92c:	1f 93       	push	r17
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	8c 01       	movw	r16, r24
     934:	eb 01       	movw	r28, r22
     936:	61 30       	cpi	r22, 0x01	; 1
     938:	71 05       	cpc	r23, r1
     93a:	d1 f4       	brne	.+52     	; 0x970 <get_PressureI2C+0x46>
     93c:	08 3e       	cpi	r16, 0xE8	; 232
     93e:	83 e0       	ldi	r24, 0x03	; 3
     940:	18 07       	cpc	r17, r24
     942:	d4 f0       	brlt	.+52     	; 0x978 <get_PressureI2C+0x4e>
     944:	b8 01       	movw	r22, r16
     946:	68 5e       	subi	r22, 0xE8	; 232
     948:	73 40       	sbci	r23, 0x03	; 3
     94a:	07 2e       	mov	r0, r23
     94c:	00 0c       	add	r0, r0
     94e:	88 0b       	sbc	r24, r24
     950:	99 0b       	sbc	r25, r25
     952:	0e 94 98 10 	call	0x2130	; 0x2130 <__floatsisf>
     956:	23 e3       	ldi	r18, 0x33	; 51
     958:	33 e3       	ldi	r19, 0x33	; 51
     95a:	43 e2       	ldi	r20, 0x23	; 35
     95c:	51 e4       	ldi	r21, 0x41	; 65
     95e:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	4a ef       	ldi	r20, 0xFA	; 250
     968:	54 e4       	ldi	r21, 0x44	; 68
     96a:	0e 94 24 10 	call	0x2048	; 0x2048 <__divsf3>
     96e:	07 c0       	rjmp	.+14     	; 0x97e <get_PressureI2C+0x54>
     970:	60 e0       	ldi	r22, 0x00	; 0
     972:	70 e0       	ldi	r23, 0x00	; 0
     974:	cb 01       	movw	r24, r22
     976:	03 c0       	rjmp	.+6      	; 0x97e <get_PressureI2C+0x54>
     978:	60 e0       	ldi	r22, 0x00	; 0
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	cb 01       	movw	r24, r22
     97e:	22 97       	sbiw	r28, 0x02	; 2
     980:	b9 f4       	brne	.+46     	; 0x9b0 <get_PressureI2C+0x86>
     982:	08 3e       	cpi	r16, 0xE8	; 232
     984:	83 e0       	ldi	r24, 0x03	; 3
     986:	18 07       	cpc	r17, r24
     988:	84 f0       	brlt	.+32     	; 0x9aa <get_PressureI2C+0x80>
     98a:	b8 01       	movw	r22, r16
     98c:	68 5e       	subi	r22, 0xE8	; 232
     98e:	73 40       	sbci	r23, 0x03	; 3
     990:	07 2e       	mov	r0, r23
     992:	00 0c       	add	r0, r0
     994:	88 0b       	sbc	r24, r24
     996:	99 0b       	sbc	r25, r25
     998:	0e 94 98 10 	call	0x2130	; 0x2130 <__floatsisf>
     99c:	2c ee       	ldi	r18, 0xEC	; 236
     99e:	31 e5       	ldi	r19, 0x51	; 81
     9a0:	45 e8       	ldi	r20, 0x85	; 133
     9a2:	52 e4       	ldi	r21, 0x42	; 66
     9a4:	0e 94 24 10 	call	0x2048	; 0x2048 <__divsf3>
     9a8:	03 c0       	rjmp	.+6      	; 0x9b0 <get_PressureI2C+0x86>
     9aa:	60 e0       	ldi	r22, 0x00	; 0
     9ac:	70 e0       	ldi	r23, 0x00	; 0
     9ae:	cb 01       	movw	r24, r22
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	1f 91       	pop	r17
     9b6:	0f 91       	pop	r16
     9b8:	08 95       	ret

000009ba <TCA0_stop>:
}

void TCA0_stop(){
	TCA0.SINGLE.CTRLA &= ~TCA_SINGLE_ENABLE_bm;
     9ba:	e0 e0       	ldi	r30, 0x00	; 0
     9bc:	fa e0       	ldi	r31, 0x0A	; 10
     9be:	80 81       	ld	r24, Z
     9c0:	8e 7f       	andi	r24, 0xFE	; 254
     9c2:	80 83       	st	Z, r24
     9c4:	08 95       	ret

000009c6 <__vector_8>:
}


ISR(TCA0_OVF_vect){
     9c6:	1f 92       	push	r1
     9c8:	0f 92       	push	r0
     9ca:	0f b6       	in	r0, 0x3f	; 63
     9cc:	0f 92       	push	r0
     9ce:	11 24       	eor	r1, r1
     9d0:	8f 93       	push	r24
     9d2:	9f 93       	push	r25
	hr++;
     9d4:	80 91 68 38 	lds	r24, 0x3868	; 0x803868 <hr>
     9d8:	90 91 69 38 	lds	r25, 0x3869	; 0x803869 <hr+0x1>
     9dc:	01 96       	adiw	r24, 0x01	; 1
     9de:	80 93 68 38 	sts	0x3868, r24	; 0x803868 <hr>
     9e2:	90 93 69 38 	sts	0x3869, r25	; 0x803869 <hr+0x1>
	ms500++;
     9e6:	80 91 6a 38 	lds	r24, 0x386A	; 0x80386a <ms500>
     9ea:	90 91 6b 38 	lds	r25, 0x386B	; 0x80386b <ms500+0x1>
     9ee:	01 96       	adiw	r24, 0x01	; 1
     9f0:	80 93 6a 38 	sts	0x386A, r24	; 0x80386a <ms500>
     9f4:	90 93 6b 38 	sts	0x386B, r25	; 0x80386b <ms500+0x1>
	TCA0.SINGLE.INTFLAGS = 0x01;
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__RODATA_PM_OFFSET__+0x7f8a0b>
		printf("Caudal: %.2f\r", caudal);	
	}
	pulsos = 0;
	minutos++;
	wdt_reset();*/
};
     9fe:	9f 91       	pop	r25
     a00:	8f 91       	pop	r24
     a02:	0f 90       	pop	r0
     a04:	0f be       	out	0x3f, r0	; 63
     a06:	0f 90       	pop	r0
     a08:	1f 90       	pop	r1
     a0a:	18 95       	reti

00000a0c <__vector_24>:
#define PC0_CLEAR_INTERRUPT_FLAG  PORTC.INTFLAGS &= PIN0_bm

#define PC3_INTERRUPT             PORTC.INTFLAGS & PIN3_bm
#define PC3_CLEAR_INTERRUPT_FLAG  PORTC.INTFLAGS &= PIN3_bm

ISR (PORTC_PORT_vect){
     a0c:	1f 92       	push	r1
     a0e:	0f 92       	push	r0
     a10:	0f b6       	in	r0, 0x3f	; 63
     a12:	0f 92       	push	r0
     a14:	11 24       	eor	r1, r1
     a16:	cf 92       	push	r12
     a18:	df 92       	push	r13
     a1a:	ef 92       	push	r14
     a1c:	ff 92       	push	r15
     a1e:	2f 93       	push	r18
     a20:	3f 93       	push	r19
     a22:	4f 93       	push	r20
     a24:	5f 93       	push	r21
     a26:	6f 93       	push	r22
     a28:	7f 93       	push	r23
     a2a:	8f 93       	push	r24
     a2c:	9f 93       	push	r25
     a2e:	af 93       	push	r26
     a30:	bf 93       	push	r27
     a32:	ef 93       	push	r30
     a34:	ff 93       	push	r31
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a36:	83 e3       	ldi	r24, 0x33	; 51
     a38:	93 e0       	ldi	r25, 0x03	; 3
     a3a:	01 97       	sbiw	r24, 0x01	; 1
     a3c:	f1 f7       	brne	.-4      	; 0xa3a <__vector_24+0x2e>
	
	
	_delay_ms(100);
	
	//printf("PORTC_VECT %x" ,PORTC_PORT_vect);
	if(PC0_INTERRUPT){
     a3e:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__RODATA_PM_OFFSET__+0x7f8449>
     a42:	80 ff       	sbrs	r24, 0
     a44:	06 c0       	rjmp	.+12     	; 0xa52 <__vector_24+0x46>
		PC0_CLEAR_INTERRUPT_FLAG;
     a46:	e0 e4       	ldi	r30, 0x40	; 64
     a48:	f4 e0       	ldi	r31, 0x04	; 4
     a4a:	81 85       	ldd	r24, Z+9	; 0x09
     a4c:	81 70       	andi	r24, 0x01	; 1
     a4e:	81 87       	std	Z+9, r24	; 0x09
     a50:	85 c0       	rjmp	.+266    	; 0xb5c <__vector_24+0x150>
	}
	else{
		pulsos++;
     a52:	80 91 64 38 	lds	r24, 0x3864	; 0x803864 <pulsos>
     a56:	90 91 65 38 	lds	r25, 0x3865	; 0x803865 <pulsos+0x1>
     a5a:	01 96       	adiw	r24, 0x01	; 1
     a5c:	80 93 64 38 	sts	0x3864, r24	; 0x803864 <pulsos>
     a60:	90 93 65 38 	sts	0x3865, r25	; 0x803865 <pulsos+0x1>
		TCA0_stop();
     a64:	0e 94 dd 04 	call	0x9ba	; 0x9ba <TCA0_stop>
		wdt_reset();
     a68:	a8 95       	wdr
		int Ent = read_EEPROM(5350);
     a6a:	86 ee       	ldi	r24, 0xE6	; 230
     a6c:	94 e1       	ldi	r25, 0x14	; 20
     a6e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
		int mul = 0;
		switch(Ent){
     a72:	82 30       	cpi	r24, 0x02	; 2
     a74:	69 f0       	breq	.+26     	; 0xa90 <__vector_24+0x84>
     a76:	83 30       	cpi	r24, 0x03	; 3
     a78:	29 f0       	breq	.+10     	; 0xa84 <__vector_24+0x78>
     a7a:	81 30       	cpi	r24, 0x01	; 1
     a7c:	31 f4       	brne	.+12     	; 0xa8a <__vector_24+0x7e>
			case 1:
				mul = 10;
     a7e:	2a e0       	ldi	r18, 0x0A	; 10
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	08 c0       	rjmp	.+16     	; 0xa94 <__vector_24+0x88>
				break;
			case 2:
				mul = 100;
				break;
			case 3:
				mul = 1000;
     a84:	28 ee       	ldi	r18, 0xE8	; 232
     a86:	33 e0       	ldi	r19, 0x03	; 3
			break;
     a88:	05 c0       	rjmp	.+10     	; 0xa94 <__vector_24+0x88>
			default:
				mul = 1;
     a8a:	21 e0       	ldi	r18, 0x01	; 1
     a8c:	30 e0       	ldi	r19, 0x00	; 0
			break;
     a8e:	02 c0       	rjmp	.+4      	; 0xa94 <__vector_24+0x88>
		switch(Ent){
			case 1:
				mul = 10;
				break;
			case 2:
				mul = 100;
     a90:	24 e6       	ldi	r18, 0x64	; 100
     a92:	30 e0       	ldi	r19, 0x00	; 0
			break;
			default:
				mul = 1;
			break;
		}
		caudal = pulsos*mul/((float)ms500*0.5);
     a94:	80 91 64 38 	lds	r24, 0x3864	; 0x803864 <pulsos>
     a98:	90 91 65 38 	lds	r25, 0x3865	; 0x803865 <pulsos+0x1>
     a9c:	28 9f       	mul	r18, r24
     a9e:	b0 01       	movw	r22, r0
     aa0:	29 9f       	mul	r18, r25
     aa2:	70 0d       	add	r23, r0
     aa4:	38 9f       	mul	r19, r24
     aa6:	70 0d       	add	r23, r0
     aa8:	11 24       	eor	r1, r1
     aaa:	80 e0       	ldi	r24, 0x00	; 0
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	0e 94 96 10 	call	0x212c	; 0x212c <__floatunsisf>
     ab2:	6b 01       	movw	r12, r22
     ab4:	7c 01       	movw	r14, r24
     ab6:	60 91 6a 38 	lds	r22, 0x386A	; 0x80386a <ms500>
     aba:	70 91 6b 38 	lds	r23, 0x386B	; 0x80386b <ms500+0x1>
     abe:	07 2e       	mov	r0, r23
     ac0:	00 0c       	add	r0, r0
     ac2:	88 0b       	sbc	r24, r24
     ac4:	99 0b       	sbc	r25, r25
     ac6:	0e 94 98 10 	call	0x2130	; 0x2130 <__floatsisf>
     aca:	20 e0       	ldi	r18, 0x00	; 0
     acc:	30 e0       	ldi	r19, 0x00	; 0
     ace:	40 e0       	ldi	r20, 0x00	; 0
     ad0:	5f e3       	ldi	r21, 0x3F	; 63
     ad2:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
     ad6:	9b 01       	movw	r18, r22
     ad8:	ac 01       	movw	r20, r24
     ada:	c7 01       	movw	r24, r14
     adc:	b6 01       	movw	r22, r12
     ade:	0e 94 24 10 	call	0x2048	; 0x2048 <__divsf3>
     ae2:	a6 2f       	mov	r26, r22
     ae4:	b7 2f       	mov	r27, r23
     ae6:	46 2f       	mov	r20, r22
     ae8:	57 2f       	mov	r21, r23
     aea:	68 2f       	mov	r22, r24
     aec:	79 2f       	mov	r23, r25
     aee:	40 93 60 38 	sts	0x3860, r20	; 0x803860 <caudal>
     af2:	50 93 61 38 	sts	0x3861, r21	; 0x803861 <caudal+0x1>
     af6:	60 93 62 38 	sts	0x3862, r22	; 0x803862 <caudal+0x2>
     afa:	70 93 63 38 	sts	0x3863, r23	; 0x803863 <caudal+0x3>
		ms500 = 0;
     afe:	10 92 6a 38 	sts	0x386A, r1	; 0x80386a <ms500>
     b02:	10 92 6b 38 	sts	0x386B, r1	; 0x80386b <ms500+0x1>
		pulsos = 0;
     b06:	10 92 64 38 	sts	0x3864, r1	; 0x803864 <pulsos>
     b0a:	10 92 65 38 	sts	0x3865, r1	; 0x803865 <pulsos+0x1>
		wdt_reset();
     b0e:	a8 95       	wdr
		count++;
     b10:	20 91 66 38 	lds	r18, 0x3866	; 0x803866 <count>
     b14:	30 91 67 38 	lds	r19, 0x3867	; 0x803867 <count+0x1>
     b18:	2f 5f       	subi	r18, 0xFF	; 255
     b1a:	3f 4f       	sbci	r19, 0xFF	; 255
     b1c:	20 93 66 38 	sts	0x3866, r18	; 0x803866 <count>
     b20:	30 93 67 38 	sts	0x3867, r19	; 0x803867 <count+0x1>
		if(verbose == 1){
     b24:	20 91 6c 38 	lds	r18, 0x386C	; 0x80386c <verbose>
     b28:	30 91 6d 38 	lds	r19, 0x386D	; 0x80386d <verbose+0x1>
     b2c:	21 30       	cpi	r18, 0x01	; 1
     b2e:	31 05       	cpc	r19, r1
     b30:	81 f4       	brne	.+32     	; 0xb52 <__vector_24+0x146>
			printf("Caudal%.2f\r", caudal);
     b32:	9f 93       	push	r25
     b34:	8f 93       	push	r24
     b36:	bf 93       	push	r27
     b38:	af 93       	push	r26
     b3a:	83 e6       	ldi	r24, 0x63	; 99
     b3c:	98 eb       	ldi	r25, 0xB8	; 184
     b3e:	9f 93       	push	r25
     b40:	8f 93       	push	r24
     b42:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     b46:	0f 90       	pop	r0
     b48:	0f 90       	pop	r0
     b4a:	0f 90       	pop	r0
     b4c:	0f 90       	pop	r0
     b4e:	0f 90       	pop	r0
     b50:	0f 90       	pop	r0
		}
	/*executeCommand("MS\r");
	memset(command, 0, MAX_COMMAND_LEN);*/
	PORTC_INTFLAGS |= PIN3_bm;
     b52:	e9 e4       	ldi	r30, 0x49	; 73
     b54:	f4 e0       	ldi	r31, 0x04	; 4
     b56:	80 81       	ld	r24, Z
     b58:	88 60       	ori	r24, 0x08	; 8
     b5a:	80 83       	st	Z, r24
	//TCA0_init();
	
	//count++;
	//printf("%u\r", count);
	}
}
     b5c:	ff 91       	pop	r31
     b5e:	ef 91       	pop	r30
     b60:	bf 91       	pop	r27
     b62:	af 91       	pop	r26
     b64:	9f 91       	pop	r25
     b66:	8f 91       	pop	r24
     b68:	7f 91       	pop	r23
     b6a:	6f 91       	pop	r22
     b6c:	5f 91       	pop	r21
     b6e:	4f 91       	pop	r20
     b70:	3f 91       	pop	r19
     b72:	2f 91       	pop	r18
     b74:	ff 90       	pop	r15
     b76:	ef 90       	pop	r14
     b78:	df 90       	pop	r13
     b7a:	cf 90       	pop	r12
     b7c:	0f 90       	pop	r0
     b7e:	0f be       	out	0x3f, r0	; 63
     b80:	0f 90       	pop	r0
     b82:	1f 90       	pop	r1
     b84:	18 95       	reti

00000b86 <TCB0_init>:

volatile uint16_t seconds = 0;
volatile uint16_t minutes = 0;

void TCB0_init() {
	TCB0.CTRLA = TCB_CLKSEL_DIV1_gc;
     b86:	e0 e8       	ldi	r30, 0x80	; 128
     b88:	fa e0       	ldi	r31, 0x0A	; 10
     b8a:	10 82       	st	Z, r1
	TCB0.CCMP = 32768;
     b8c:	80 e0       	ldi	r24, 0x00	; 0
     b8e:	90 e8       	ldi	r25, 0x80	; 128
     b90:	84 87       	std	Z+12, r24	; 0x0c
     b92:	95 87       	std	Z+13, r25	; 0x0d
	TCB0.CTRLB = TCB_CNTMODE_INT_gc; // Habilita el modo de interrupción
     b94:	11 82       	std	Z+1, r1	; 0x01
	TCB0.INTCTRL = TCB_CAPT_bm; // Habilita la interrupción de captura
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	85 83       	std	Z+5, r24	; 0x05
     b9a:	08 95       	ret

00000b9c <TCB0_start>:
	//TCB0.CTRLB = TCB_CNTMODE_INT_gc; // Habilita el modo de interrupción
	//TCB0.INTCTRL = TCB_CAPT_bm; // Habilita la interrupción de captura
}

void TCB0_start() {
	TCB0.CNT = 0; // Reinicia el contador
     b9c:	e0 e8       	ldi	r30, 0x80	; 128
     b9e:	fa e0       	ldi	r31, 0x0A	; 10
     ba0:	12 86       	std	Z+10, r1	; 0x0a
     ba2:	13 86       	std	Z+11, r1	; 0x0b
	TCB0.CTRLA |= TCB_ENABLE_bm; // Inicia el temporizador
     ba4:	80 81       	ld	r24, Z
     ba6:	81 60       	ori	r24, 0x01	; 1
     ba8:	80 83       	st	Z, r24
     baa:	08 95       	ret

00000bac <TCB0_stop>:
}

void TCB0_stop() {
	TCB0.CTRLA &= ~TCB_ENABLE_bm; // Detiene el temporizador
     bac:	e0 e8       	ldi	r30, 0x80	; 128
     bae:	fa e0       	ldi	r31, 0x0A	; 10
     bb0:	80 81       	ld	r24, Z
     bb2:	8e 7f       	andi	r24, 0xFE	; 254
     bb4:	80 83       	st	Z, r24
     bb6:	08 95       	ret

00000bb8 <__vector_13>:
}



ISR(TCB0_INT_vect){
     bb8:	1f 92       	push	r1
     bba:	0f 92       	push	r0
     bbc:	0f b6       	in	r0, 0x3f	; 63
     bbe:	0f 92       	push	r0
     bc0:	11 24       	eor	r1, r1
     bc2:	2f 93       	push	r18
     bc4:	3f 93       	push	r19
     bc6:	4f 93       	push	r20
     bc8:	5f 93       	push	r21
     bca:	6f 93       	push	r22
     bcc:	7f 93       	push	r23
     bce:	8f 93       	push	r24
     bd0:	9f 93       	push	r25
     bd2:	af 93       	push	r26
     bd4:	bf 93       	push	r27
     bd6:	ef 93       	push	r30
     bd8:	ff 93       	push	r31
	seconds++;
     bda:	80 91 5e 38 	lds	r24, 0x385E	; 0x80385e <seconds>
     bde:	90 91 5f 38 	lds	r25, 0x385F	; 0x80385f <seconds+0x1>
     be2:	01 96       	adiw	r24, 0x01	; 1
     be4:	80 93 5e 38 	sts	0x385E, r24	; 0x80385e <seconds>
     be8:	90 93 5f 38 	sts	0x385F, r25	; 0x80385f <seconds+0x1>
	TCB0.INTFLAGS = 0x1;
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <__RODATA_PM_OFFSET__+0x7f8a86>
	wdt_reset();
     bf2:	a8 95       	wdr
	if(verbose == 1){
     bf4:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
     bf8:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
     bfc:	01 97       	sbiw	r24, 0x01	; 1
     bfe:	81 f4       	brne	.+32     	; 0xc20 <__vector_13+0x68>
		printf("Tiempo: %d\r", seconds);	
     c00:	80 91 5e 38 	lds	r24, 0x385E	; 0x80385e <seconds>
     c04:	90 91 5f 38 	lds	r25, 0x385F	; 0x80385f <seconds+0x1>
     c08:	9f 93       	push	r25
     c0a:	8f 93       	push	r24
     c0c:	8f e6       	ldi	r24, 0x6F	; 111
     c0e:	98 eb       	ldi	r25, 0xB8	; 184
     c10:	9f 93       	push	r25
     c12:	8f 93       	push	r24
     c14:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     c18:	0f 90       	pop	r0
     c1a:	0f 90       	pop	r0
     c1c:	0f 90       	pop	r0
     c1e:	0f 90       	pop	r0
	}
}
     c20:	ff 91       	pop	r31
     c22:	ef 91       	pop	r30
     c24:	bf 91       	pop	r27
     c26:	af 91       	pop	r26
     c28:	9f 91       	pop	r25
     c2a:	8f 91       	pop	r24
     c2c:	7f 91       	pop	r23
     c2e:	6f 91       	pop	r22
     c30:	5f 91       	pop	r21
     c32:	4f 91       	pop	r20
     c34:	3f 91       	pop	r19
     c36:	2f 91       	pop	r18
     c38:	0f 90       	pop	r0
     c3a:	0f be       	out	0x3f, r0	; 63
     c3c:	0f 90       	pop	r0
     c3e:	1f 90       	pop	r1
     c40:	18 95       	reti

00000c42 <executeCommand>:
int flujo = 0;
int s1 = 0;
int s2 = 0;
char sensor1,sensor2;

void executeCommand(char *command){
     c42:	ef 92       	push	r14
     c44:	ff 92       	push	r15
     c46:	0f 93       	push	r16
     c48:	1f 93       	push	r17
     c4a:	cf 93       	push	r28
     c4c:	df 93       	push	r29
     c4e:	cd b7       	in	r28, 0x3d	; 61
     c50:	de b7       	in	r29, 0x3e	; 62
     c52:	2c 97       	sbiw	r28, 0x0c	; 12
     c54:	cd bf       	out	0x3d, r28	; 61
     c56:	de bf       	out	0x3e, r29	; 62
     c58:	7c 01       	movw	r14, r24
	if(strstr(command,"SM")!= NULL){
     c5a:	6b e7       	ldi	r22, 0x7B	; 123
     c5c:	78 eb       	ldi	r23, 0xB8	; 184
     c5e:	0e 94 9d 1a 	call	0x353a	; 0x353a <strstr>
     c62:	89 2b       	or	r24, r25
     c64:	09 f4       	brne	.+2      	; 0xc68 <executeCommand+0x26>
     c66:	52 c0       	rjmp	.+164    	; 0xd0c <executeCommand+0xca>
		ADC0.CTRLA = (0 << ADC_ENABLE_bp);
     c68:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__RODATA_PM_OFFSET__+0x7f8600>
		TCA0.SPLIT.CTRLA = 0;
     c6c:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__RODATA_PM_OFFSET__+0x7f8a00>
		TCB0.CTRLA = 0;
     c70:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <__RODATA_PM_OFFSET__+0x7f8a80>
		RTC.CTRLA = 0;
     c74:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__RODATA_PM_OFFSET__+0x7f8140>
		wdt_reset();
     c78:	a8 95       	wdr
		TCB0_stop();
     c7a:	0e 94 d6 05 	call	0xbac	; 0xbac <TCB0_stop>
		vol1 = 0;
     c7e:	10 92 58 38 	sts	0x3858, r1	; 0x803858 <vol1>
     c82:	10 92 59 38 	sts	0x3859, r1	; 0x803859 <vol1+0x1>
     c86:	10 92 5a 38 	sts	0x385A, r1	; 0x80385a <vol1+0x2>
     c8a:	10 92 5b 38 	sts	0x385B, r1	; 0x80385b <vol1+0x3>
		vol2 = 0;
     c8e:	10 92 54 38 	sts	0x3854, r1	; 0x803854 <vol2>
     c92:	10 92 55 38 	sts	0x3855, r1	; 0x803855 <vol2+0x1>
     c96:	10 92 56 38 	sts	0x3856, r1	; 0x803856 <vol2+0x2>
     c9a:	10 92 57 38 	sts	0x3857, r1	; 0x803857 <vol2+0x3>
		presion1 = 0;
     c9e:	10 92 50 38 	sts	0x3850, r1	; 0x803850 <presion1>
     ca2:	10 92 51 38 	sts	0x3851, r1	; 0x803851 <presion1+0x1>
     ca6:	10 92 52 38 	sts	0x3852, r1	; 0x803852 <presion1+0x2>
     caa:	10 92 53 38 	sts	0x3853, r1	; 0x803853 <presion1+0x3>
		presion2 = 0;
     cae:	10 92 4c 38 	sts	0x384C, r1	; 0x80384c <presion2>
     cb2:	10 92 4d 38 	sts	0x384D, r1	; 0x80384d <presion2+0x1>
     cb6:	10 92 4e 38 	sts	0x384E, r1	; 0x80384e <presion2+0x2>
     cba:	10 92 4f 38 	sts	0x384F, r1	; 0x80384f <presion2+0x3>
		bateria = 0;
     cbe:	10 92 48 38 	sts	0x3848, r1	; 0x803848 <bateria>
     cc2:	10 92 49 38 	sts	0x3849, r1	; 0x803849 <bateria+0x1>
     cc6:	10 92 4a 38 	sts	0x384A, r1	; 0x80384a <bateria+0x2>
     cca:	10 92 4b 38 	sts	0x384B, r1	; 0x80384b <bateria+0x3>
		printf("SM\r");
     cce:	8e e7       	ldi	r24, 0x7E	; 126
     cd0:	98 eb       	ldi	r25, 0xB8	; 184
     cd2:	9f 93       	push	r25
     cd4:	8f 93       	push	r24
     cd6:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     cda:	86 e6       	ldi	r24, 0x66	; 102
     cdc:	96 e0       	ldi	r25, 0x06	; 6
     cde:	01 97       	sbiw	r24, 0x01	; 1
     ce0:	f1 f7       	brne	.-4      	; 0xcde <executeCommand+0x9c>
     ce2:	00 00       	nop
		_delay_ms(200);
		Sleep_Micro();
     ce4:	0e 94 93 01 	call	0x326	; 0x326 <Sleep_Micro>
     ce8:	e6 e6       	ldi	r30, 0x66	; 102
     cea:	f6 e0       	ldi	r31, 0x06	; 6
     cec:	31 97       	sbiw	r30, 0x01	; 1
     cee:	f1 f7       	brne	.-4      	; 0xcec <executeCommand+0xaa>
     cf0:	00 00       	nop
		_delay_ms(200);
		seconds = 0;
     cf2:	10 92 5e 38 	sts	0x385E, r1	; 0x80385e <seconds>
     cf6:	10 92 5f 38 	sts	0x385F, r1	; 0x80385f <seconds+0x1>
		send = 0;
     cfa:	10 92 5c 38 	sts	0x385C, r1	; 0x80385c <send>
     cfe:	10 92 5d 38 	sts	0x385D, r1	; 0x80385d <send+0x1>
		TCB0_start();	
     d02:	0e 94 ce 05 	call	0xb9c	; 0xb9c <TCB0_start>
     d06:	0f 90       	pop	r0
     d08:	0f 90       	pop	r0
     d0a:	c7 c5       	rjmp	.+2958   	; 0x189a <executeCommand+0xc58>
		
	}
	else{
		if(command[0] == 'W' && command[1] == 'S'){
     d0c:	f7 01       	movw	r30, r14
     d0e:	80 81       	ld	r24, Z
     d10:	87 35       	cpi	r24, 0x57	; 87
     d12:	d9 f4       	brne	.+54     	; 0xd4a <executeCommand+0x108>
     d14:	81 81       	ldd	r24, Z+1	; 0x01
     d16:	83 35       	cpi	r24, 0x53	; 83
     d18:	c1 f4       	brne	.+48     	; 0xd4a <executeCommand+0x108>
		write_EEPROM(5348,command[2]);
     d1a:	62 81       	ldd	r22, Z+2	; 0x02
     d1c:	84 ee       	ldi	r24, 0xE4	; 228
     d1e:	94 e1       	ldi	r25, 0x14	; 20
     d20:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
		write_EEPROM(5349,command[3]);
     d24:	f7 01       	movw	r30, r14
     d26:	63 81       	ldd	r22, Z+3	; 0x03
     d28:	85 ee       	ldi	r24, 0xE5	; 229
     d2a:	94 e1       	ldi	r25, 0x14	; 20
     d2c:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
		printf("%s",command);
     d30:	ff 92       	push	r15
     d32:	ef 92       	push	r14
     d34:	82 e8       	ldi	r24, 0x82	; 130
     d36:	98 eb       	ldi	r25, 0xB8	; 184
     d38:	9f 93       	push	r25
     d3a:	8f 93       	push	r24
     d3c:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     d40:	0f 90       	pop	r0
     d42:	0f 90       	pop	r0
     d44:	0f 90       	pop	r0
     d46:	0f 90       	pop	r0
     d48:	a8 c5       	rjmp	.+2896   	; 0x189a <executeCommand+0xc58>
		}
		else{
			if(strstr(command,"VS")!= NULL){
     d4a:	65 e8       	ldi	r22, 0x85	; 133
     d4c:	78 eb       	ldi	r23, 0xB8	; 184
     d4e:	c7 01       	movw	r24, r14
     d50:	0e 94 9d 1a 	call	0x353a	; 0x353a <strstr>
     d54:	89 2b       	or	r24, r25
     d56:	b9 f1       	breq	.+110    	; 0xdc6 <executeCommand+0x184>
				char *token = strtok(command, " ");
     d58:	68 e8       	ldi	r22, 0x88	; 136
     d5a:	78 eb       	ldi	r23, 0xB8	; 184
     d5c:	c7 01       	movw	r24, r14
     d5e:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
				int i = 0;
				if(token != NULL){
     d62:	00 97       	sbiw	r24, 0x00	; 0
     d64:	f9 f4       	brne	.+62     	; 0xda4 <executeCommand+0x162>
     d66:	22 c0       	rjmp	.+68     	; 0xdac <executeCommand+0x16a>
					while(token != NULL){
						switch(i){
     d68:	01 30       	cpi	r16, 0x01	; 1
     d6a:	11 05       	cpc	r17, r1
     d6c:	91 f4       	brne	.+36     	; 0xd92 <executeCommand+0x150>
							case 0:
							break;
							case 1:
							sscanf(token,"%d",&verbose);
     d6e:	2c e6       	ldi	r18, 0x6C	; 108
     d70:	38 e3       	ldi	r19, 0x38	; 56
     d72:	3f 93       	push	r19
     d74:	2f 93       	push	r18
     d76:	2a e8       	ldi	r18, 0x8A	; 138
     d78:	38 eb       	ldi	r19, 0xB8	; 184
     d7a:	3f 93       	push	r19
     d7c:	2f 93       	push	r18
     d7e:	9f 93       	push	r25
     d80:	8f 93       	push	r24
     d82:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <sscanf>
							break;
     d86:	0f 90       	pop	r0
     d88:	0f 90       	pop	r0
     d8a:	0f 90       	pop	r0
     d8c:	0f 90       	pop	r0
     d8e:	0f 90       	pop	r0
     d90:	0f 90       	pop	r0
						}
						token = strtok(NULL, " ");
     d92:	68 e8       	ldi	r22, 0x88	; 136
     d94:	78 eb       	ldi	r23, 0xB8	; 184
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
						i++;
     d9e:	0f 5f       	subi	r16, 0xFF	; 255
     da0:	1f 4f       	sbci	r17, 0xFF	; 255
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <executeCommand+0x166>
     da4:	00 e0       	ldi	r16, 0x00	; 0
     da6:	10 e0       	ldi	r17, 0x00	; 0
		else{
			if(strstr(command,"VS")!= NULL){
				char *token = strtok(command, " ");
				int i = 0;
				if(token != NULL){
					while(token != NULL){
     da8:	00 97       	sbiw	r24, 0x00	; 0
     daa:	f1 f6       	brne	.-68     	; 0xd68 <executeCommand+0x126>
						}
						token = strtok(NULL, " ");
						i++;
					}
				}
				printf("%s\r",command);
     dac:	ff 92       	push	r15
     dae:	ef 92       	push	r14
     db0:	8d e8       	ldi	r24, 0x8D	; 141
     db2:	98 eb       	ldi	r25, 0xB8	; 184
     db4:	9f 93       	push	r25
     db6:	8f 93       	push	r24
     db8:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     dbc:	0f 90       	pop	r0
     dbe:	0f 90       	pop	r0
     dc0:	0f 90       	pop	r0
     dc2:	0f 90       	pop	r0
     dc4:	6a c5       	rjmp	.+2772   	; 0x189a <executeCommand+0xc58>
			}
			else{
				if(strstr(command,"CN2")!= NULL){
     dc6:	61 e9       	ldi	r22, 0x91	; 145
     dc8:	78 eb       	ldi	r23, 0xB8	; 184
     dca:	c7 01       	movw	r24, r14
     dcc:	0e 94 9d 1a 	call	0x353a	; 0x353a <strstr>
     dd0:	89 2b       	or	r24, r25
     dd2:	09 f4       	brne	.+2      	; 0xdd6 <executeCommand+0x194>
     dd4:	87 c0       	rjmp	.+270    	; 0xee4 <executeCommand+0x2a2>
				Flotante Z1,A,B;
				char *token = strtok(command, " ");
     dd6:	68 e8       	ldi	r22, 0x88	; 136
     dd8:	78 eb       	ldi	r23, 0xB8	; 184
     dda:	c7 01       	movw	r24, r14
     ddc:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
				int i = 0;
				if(token != NULL){
     de0:	00 97       	sbiw	r24, 0x00	; 0
     de2:	c1 f5       	brne	.+112    	; 0xe54 <executeCommand+0x212>
     de4:	3b c0       	rjmp	.+118    	; 0xe5c <executeCommand+0x21a>
					while(token != NULL){
						switch(i){
     de6:	01 30       	cpi	r16, 0x01	; 1
     de8:	11 05       	cpc	r17, r1
     dea:	21 f0       	breq	.+8      	; 0xdf4 <executeCommand+0x1b2>
     dec:	02 30       	cpi	r16, 0x02	; 2
     dee:	11 05       	cpc	r17, r1
     df0:	a9 f0       	breq	.+42     	; 0xe1c <executeCommand+0x1da>
     df2:	27 c0       	rjmp	.+78     	; 0xe42 <executeCommand+0x200>
							case 0:
							break;
							case 1:
							sscanf(token,"%f",&A.f);
     df4:	9e 01       	movw	r18, r28
     df6:	2b 5f       	subi	r18, 0xFB	; 251
     df8:	3f 4f       	sbci	r19, 0xFF	; 255
     dfa:	3f 93       	push	r19
     dfc:	2f 93       	push	r18
     dfe:	25 e9       	ldi	r18, 0x95	; 149
     e00:	38 eb       	ldi	r19, 0xB8	; 184
     e02:	3f 93       	push	r19
     e04:	2f 93       	push	r18
     e06:	9f 93       	push	r25
     e08:	8f 93       	push	r24
     e0a:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <sscanf>
							break;
     e0e:	0f 90       	pop	r0
     e10:	0f 90       	pop	r0
     e12:	0f 90       	pop	r0
     e14:	0f 90       	pop	r0
     e16:	0f 90       	pop	r0
     e18:	0f 90       	pop	r0
     e1a:	13 c0       	rjmp	.+38     	; 0xe42 <executeCommand+0x200>
							case 2:
							sscanf(token,"%f",&B.f);
     e1c:	9e 01       	movw	r18, r28
     e1e:	2f 5f       	subi	r18, 0xFF	; 255
     e20:	3f 4f       	sbci	r19, 0xFF	; 255
     e22:	3f 93       	push	r19
     e24:	2f 93       	push	r18
     e26:	25 e9       	ldi	r18, 0x95	; 149
     e28:	38 eb       	ldi	r19, 0xB8	; 184
     e2a:	3f 93       	push	r19
     e2c:	2f 93       	push	r18
     e2e:	9f 93       	push	r25
     e30:	8f 93       	push	r24
     e32:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <sscanf>
							break;
     e36:	0f 90       	pop	r0
     e38:	0f 90       	pop	r0
     e3a:	0f 90       	pop	r0
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	0f 90       	pop	r0
						}
						token = strtok(NULL, " ");
     e42:	68 e8       	ldi	r22, 0x88	; 136
     e44:	78 eb       	ldi	r23, 0xB8	; 184
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
						i++;
     e4e:	0f 5f       	subi	r16, 0xFF	; 255
     e50:	1f 4f       	sbci	r17, 0xFF	; 255
     e52:	02 c0       	rjmp	.+4      	; 0xe58 <executeCommand+0x216>
     e54:	00 e0       	ldi	r16, 0x00	; 0
     e56:	10 e0       	ldi	r17, 0x00	; 0
				if(strstr(command,"CN2")!= NULL){
				Flotante Z1,A,B;
				char *token = strtok(command, " ");
				int i = 0;
				if(token != NULL){
					while(token != NULL){
     e58:	00 97       	sbiw	r24, 0x00	; 0
     e5a:	29 f6       	brne	.-118    	; 0xde6 <executeCommand+0x1a4>
						}
						token = strtok(NULL, " ");
						i++;
					}
				}
				Z1.f = B.f/A.f;
     e5c:	69 81       	ldd	r22, Y+1	; 0x01
     e5e:	7a 81       	ldd	r23, Y+2	; 0x02
     e60:	8b 81       	ldd	r24, Y+3	; 0x03
     e62:	9c 81       	ldd	r25, Y+4	; 0x04
     e64:	2d 81       	ldd	r18, Y+5	; 0x05
     e66:	3e 81       	ldd	r19, Y+6	; 0x06
     e68:	4f 81       	ldd	r20, Y+7	; 0x07
     e6a:	58 85       	ldd	r21, Y+8	; 0x08
     e6c:	0e 94 24 10 	call	0x2048	; 0x2048 <__divsf3>
     e70:	69 87       	std	Y+9, r22	; 0x09
     e72:	7a 87       	std	Y+10, r23	; 0x0a
     e74:	8b 87       	std	Y+11, r24	; 0x0b
     e76:	9c 87       	std	Y+12, r25	; 0x0c
				wdt_reset();
     e78:	a8 95       	wdr
				for(int i=0; i<=3; i++){
     e7a:	00 e0       	ldi	r16, 0x00	; 0
     e7c:	10 e0       	ldi	r17, 0x00	; 0
     e7e:	26 c0       	rjmp	.+76     	; 0xecc <executeCommand+0x28a>
					write_EEPROM(i+5352,Z1.dato[i]);
     e80:	e9 e0       	ldi	r30, 0x09	; 9
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	ec 0f       	add	r30, r28
     e86:	fd 1f       	adc	r31, r29
     e88:	e0 0f       	add	r30, r16
     e8a:	f1 1f       	adc	r31, r17
     e8c:	60 81       	ld	r22, Z
     e8e:	c8 01       	movw	r24, r16
     e90:	88 51       	subi	r24, 0x18	; 24
     e92:	9b 4e       	sbci	r25, 0xEB	; 235
     e94:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
					write_EEPROM(i+5356,A.dato[i]);
     e98:	e5 e0       	ldi	r30, 0x05	; 5
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	ec 0f       	add	r30, r28
     e9e:	fd 1f       	adc	r31, r29
     ea0:	e0 0f       	add	r30, r16
     ea2:	f1 1f       	adc	r31, r17
     ea4:	60 81       	ld	r22, Z
     ea6:	c8 01       	movw	r24, r16
     ea8:	84 51       	subi	r24, 0x14	; 20
     eaa:	9b 4e       	sbci	r25, 0xEB	; 235
     eac:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
					write_EEPROM(i+5360,B.dato[i]);
     eb0:	e1 e0       	ldi	r30, 0x01	; 1
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	ec 0f       	add	r30, r28
     eb6:	fd 1f       	adc	r31, r29
     eb8:	e0 0f       	add	r30, r16
     eba:	f1 1f       	adc	r31, r17
     ebc:	60 81       	ld	r22, Z
     ebe:	c8 01       	movw	r24, r16
     ec0:	80 51       	subi	r24, 0x10	; 16
     ec2:	9b 4e       	sbci	r25, 0xEB	; 235
     ec4:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
						i++;
					}
				}
				Z1.f = B.f/A.f;
				wdt_reset();
				for(int i=0; i<=3; i++){
     ec8:	0f 5f       	subi	r16, 0xFF	; 255
     eca:	1f 4f       	sbci	r17, 0xFF	; 255
     ecc:	04 30       	cpi	r16, 0x04	; 4
     ece:	11 05       	cpc	r17, r1
     ed0:	bc f2       	brlt	.-82     	; 0xe80 <executeCommand+0x23e>
					write_EEPROM(i+5352,Z1.dato[i]);
					write_EEPROM(i+5356,A.dato[i]);
					write_EEPROM(i+5360,B.dato[i]);
					}
				printf("CN\r");
     ed2:	88 e9       	ldi	r24, 0x98	; 152
     ed4:	98 eb       	ldi	r25, 0xB8	; 184
     ed6:	9f 93       	push	r25
     ed8:	8f 93       	push	r24
     eda:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     ede:	0f 90       	pop	r0
     ee0:	0f 90       	pop	r0
     ee2:	db c4       	rjmp	.+2486   	; 0x189a <executeCommand+0xc58>
				}
				else{
					if(strstr(command,"CN1")!= NULL){
     ee4:	6c e9       	ldi	r22, 0x9C	; 156
     ee6:	78 eb       	ldi	r23, 0xB8	; 184
     ee8:	c7 01       	movw	r24, r14
     eea:	0e 94 9d 1a 	call	0x353a	; 0x353a <strstr>
     eee:	89 2b       	or	r24, r25
     ef0:	09 f4       	brne	.+2      	; 0xef4 <executeCommand+0x2b2>
     ef2:	87 c0       	rjmp	.+270    	; 0x1002 <executeCommand+0x3c0>
						Flotante Z2,C,D;
						char *token = strtok(command, " ");
     ef4:	68 e8       	ldi	r22, 0x88	; 136
     ef6:	78 eb       	ldi	r23, 0xB8	; 184
     ef8:	c7 01       	movw	r24, r14
     efa:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
						int i = 0;
						if(token != NULL){
     efe:	00 97       	sbiw	r24, 0x00	; 0
     f00:	c1 f5       	brne	.+112    	; 0xf72 <executeCommand+0x330>
     f02:	3b c0       	rjmp	.+118    	; 0xf7a <executeCommand+0x338>
							while(token != NULL){
								switch(i){
     f04:	01 30       	cpi	r16, 0x01	; 1
     f06:	11 05       	cpc	r17, r1
     f08:	21 f0       	breq	.+8      	; 0xf12 <executeCommand+0x2d0>
     f0a:	02 30       	cpi	r16, 0x02	; 2
     f0c:	11 05       	cpc	r17, r1
     f0e:	a9 f0       	breq	.+42     	; 0xf3a <executeCommand+0x2f8>
     f10:	27 c0       	rjmp	.+78     	; 0xf60 <executeCommand+0x31e>
									case 0:
										break;
									case 1:
										sscanf(token,"%f",&C.f);
     f12:	9e 01       	movw	r18, r28
     f14:	2b 5f       	subi	r18, 0xFB	; 251
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	3f 93       	push	r19
     f1a:	2f 93       	push	r18
     f1c:	25 e9       	ldi	r18, 0x95	; 149
     f1e:	38 eb       	ldi	r19, 0xB8	; 184
     f20:	3f 93       	push	r19
     f22:	2f 93       	push	r18
     f24:	9f 93       	push	r25
     f26:	8f 93       	push	r24
     f28:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <sscanf>
										break;
     f2c:	0f 90       	pop	r0
     f2e:	0f 90       	pop	r0
     f30:	0f 90       	pop	r0
     f32:	0f 90       	pop	r0
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	13 c0       	rjmp	.+38     	; 0xf60 <executeCommand+0x31e>
								case 2:
									sscanf(token,"%f",&D.f);
     f3a:	9e 01       	movw	r18, r28
     f3c:	2f 5f       	subi	r18, 0xFF	; 255
     f3e:	3f 4f       	sbci	r19, 0xFF	; 255
     f40:	3f 93       	push	r19
     f42:	2f 93       	push	r18
     f44:	25 e9       	ldi	r18, 0x95	; 149
     f46:	38 eb       	ldi	r19, 0xB8	; 184
     f48:	3f 93       	push	r19
     f4a:	2f 93       	push	r18
     f4c:	9f 93       	push	r25
     f4e:	8f 93       	push	r24
     f50:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <sscanf>
									break;
     f54:	0f 90       	pop	r0
     f56:	0f 90       	pop	r0
     f58:	0f 90       	pop	r0
     f5a:	0f 90       	pop	r0
     f5c:	0f 90       	pop	r0
     f5e:	0f 90       	pop	r0
								}
							token = strtok(NULL, " ");
     f60:	68 e8       	ldi	r22, 0x88	; 136
     f62:	78 eb       	ldi	r23, 0xB8	; 184
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
							i++;
     f6c:	0f 5f       	subi	r16, 0xFF	; 255
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
     f70:	02 c0       	rjmp	.+4      	; 0xf76 <executeCommand+0x334>
     f72:	00 e0       	ldi	r16, 0x00	; 0
     f74:	10 e0       	ldi	r17, 0x00	; 0
					if(strstr(command,"CN1")!= NULL){
						Flotante Z2,C,D;
						char *token = strtok(command, " ");
						int i = 0;
						if(token != NULL){
							while(token != NULL){
     f76:	00 97       	sbiw	r24, 0x00	; 0
     f78:	29 f6       	brne	.-118    	; 0xf04 <executeCommand+0x2c2>
								}
							token = strtok(NULL, " ");
							i++;
						}
					}
					Z2.f = D.f/C.f;
     f7a:	69 81       	ldd	r22, Y+1	; 0x01
     f7c:	7a 81       	ldd	r23, Y+2	; 0x02
     f7e:	8b 81       	ldd	r24, Y+3	; 0x03
     f80:	9c 81       	ldd	r25, Y+4	; 0x04
     f82:	2d 81       	ldd	r18, Y+5	; 0x05
     f84:	3e 81       	ldd	r19, Y+6	; 0x06
     f86:	4f 81       	ldd	r20, Y+7	; 0x07
     f88:	58 85       	ldd	r21, Y+8	; 0x08
     f8a:	0e 94 24 10 	call	0x2048	; 0x2048 <__divsf3>
     f8e:	69 87       	std	Y+9, r22	; 0x09
     f90:	7a 87       	std	Y+10, r23	; 0x0a
     f92:	8b 87       	std	Y+11, r24	; 0x0b
     f94:	9c 87       	std	Y+12, r25	; 0x0c
					wdt_reset();
     f96:	a8 95       	wdr
					for(int i=0; i<=3; i++){
     f98:	00 e0       	ldi	r16, 0x00	; 0
     f9a:	10 e0       	ldi	r17, 0x00	; 0
     f9c:	26 c0       	rjmp	.+76     	; 0xfea <executeCommand+0x3a8>
						write_EEPROM(i+5364,Z2.dato[i]);
     f9e:	e9 e0       	ldi	r30, 0x09	; 9
     fa0:	f0 e0       	ldi	r31, 0x00	; 0
     fa2:	ec 0f       	add	r30, r28
     fa4:	fd 1f       	adc	r31, r29
     fa6:	e0 0f       	add	r30, r16
     fa8:	f1 1f       	adc	r31, r17
     faa:	60 81       	ld	r22, Z
     fac:	c8 01       	movw	r24, r16
     fae:	8c 50       	subi	r24, 0x0C	; 12
     fb0:	9b 4e       	sbci	r25, 0xEB	; 235
     fb2:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
						write_EEPROM(i+5368,C.dato[i]);
     fb6:	e5 e0       	ldi	r30, 0x05	; 5
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	ec 0f       	add	r30, r28
     fbc:	fd 1f       	adc	r31, r29
     fbe:	e0 0f       	add	r30, r16
     fc0:	f1 1f       	adc	r31, r17
     fc2:	60 81       	ld	r22, Z
     fc4:	c8 01       	movw	r24, r16
     fc6:	88 50       	subi	r24, 0x08	; 8
     fc8:	9b 4e       	sbci	r25, 0xEB	; 235
     fca:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
						write_EEPROM(i+5372,D.dato[i]);
     fce:	e1 e0       	ldi	r30, 0x01	; 1
     fd0:	f0 e0       	ldi	r31, 0x00	; 0
     fd2:	ec 0f       	add	r30, r28
     fd4:	fd 1f       	adc	r31, r29
     fd6:	e0 0f       	add	r30, r16
     fd8:	f1 1f       	adc	r31, r17
     fda:	60 81       	ld	r22, Z
     fdc:	c8 01       	movw	r24, r16
     fde:	84 50       	subi	r24, 0x04	; 4
     fe0:	9b 4e       	sbci	r25, 0xEB	; 235
     fe2:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
							i++;
						}
					}
					Z2.f = D.f/C.f;
					wdt_reset();
					for(int i=0; i<=3; i++){
     fe6:	0f 5f       	subi	r16, 0xFF	; 255
     fe8:	1f 4f       	sbci	r17, 0xFF	; 255
     fea:	04 30       	cpi	r16, 0x04	; 4
     fec:	11 05       	cpc	r17, r1
     fee:	bc f2       	brlt	.-82     	; 0xf9e <executeCommand+0x35c>
						write_EEPROM(i+5364,Z2.dato[i]);
						write_EEPROM(i+5368,C.dato[i]);
						write_EEPROM(i+5372,D.dato[i]);
					}
					printf("CN\r");
     ff0:	88 e9       	ldi	r24, 0x98	; 152
     ff2:	98 eb       	ldi	r25, 0xB8	; 184
     ff4:	9f 93       	push	r25
     ff6:	8f 93       	push	r24
     ff8:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
     ffc:	0f 90       	pop	r0
     ffe:	0f 90       	pop	r0
    1000:	4c c4       	rjmp	.+2200   	; 0x189a <executeCommand+0xc58>
					}
					else{
						if(strcmp(command,"MS\r") == 0){
    1002:	60 ea       	ldi	r22, 0xA0	; 160
    1004:	78 eb       	ldi	r23, 0xB8	; 184
    1006:	c7 01       	movw	r24, r14
    1008:	0e 94 7a 1a 	call	0x34f4	; 0x34f4 <strcmp>
    100c:	89 2b       	or	r24, r25
    100e:	09 f0       	breq	.+2      	; 0x1012 <executeCommand+0x3d0>
    1010:	e9 c1       	rjmp	.+978    	; 0x13e4 <executeCommand+0x7a2>
							sensor1 = read_EEPROM(5348);
    1012:	84 ee       	ldi	r24, 0xE4	; 228
    1014:	94 e1       	ldi	r25, 0x14	; 20
    1016:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    101a:	18 2f       	mov	r17, r24
    101c:	80 93 08 39 	sts	0x3908, r24	; 0x803908 <sensor1>
							sensor2 = read_EEPROM(5349);
    1020:	85 ee       	ldi	r24, 0xE5	; 229
    1022:	94 e1       	ldi	r25, 0x14	; 20
    1024:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1028:	08 2f       	mov	r16, r24
    102a:	80 93 09 39 	sts	0x3909, r24	; 0x803909 <sensor2>
							flujo = read_EEPROM(5350);
    102e:	86 ee       	ldi	r24, 0xE6	; 230
    1030:	94 e1       	ldi	r25, 0x14	; 20
    1032:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	80 93 46 38 	sts	0x3846, r24	; 0x803846 <flujo>
    103c:	90 93 47 38 	sts	0x3847, r25	; 0x803847 <flujo+0x1>
							PORTB.OUT |= PIN5_bm;
    1040:	e0 e2       	ldi	r30, 0x20	; 32
    1042:	f4 e0       	ldi	r31, 0x04	; 4
    1044:	84 81       	ldd	r24, Z+4	; 0x04
    1046:	80 62       	ori	r24, 0x20	; 32
    1048:	84 83       	std	Z+4, r24	; 0x04
							if(sensor1 == "P" || sensor2 == "P"){
    104a:	81 2f       	mov	r24, r17
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	84 5a       	subi	r24, 0xA4	; 164
    1050:	98 4b       	sbci	r25, 0xB8	; 184
    1052:	29 f0       	breq	.+10     	; 0x105e <executeCommand+0x41c>
    1054:	80 2f       	mov	r24, r16
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	84 5a       	subi	r24, 0xA4	; 164
    105a:	98 4b       	sbci	r25, 0xB8	; 184
    105c:	79 f4       	brne	.+30     	; 0x107c <executeCommand+0x43a>
								wdt_reset();
    105e:	a8 95       	wdr
								unsigned long int iterations = (5000 * F_CPU) / (10000UL);
								for(unsigned long int i = 0; i < iterations; i++){
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	dc 01       	movw	r26, r24
    1066:	04 c0       	rjmp	.+8      	; 0x1070 <executeCommand+0x42e>
									wdt_reset();
    1068:	a8 95       	wdr
							flujo = read_EEPROM(5350);
							PORTB.OUT |= PIN5_bm;
							if(sensor1 == "P" || sensor2 == "P"){
								wdt_reset();
								unsigned long int iterations = (5000 * F_CPU) / (10000UL);
								for(unsigned long int i = 0; i < iterations; i++){
    106a:	01 96       	adiw	r24, 0x01	; 1
    106c:	a1 1d       	adc	r26, r1
    106e:	b1 1d       	adc	r27, r1
    1070:	81 15       	cp	r24, r1
    1072:	e0 e4       	ldi	r30, 0x40	; 64
    1074:	9e 07       	cpc	r25, r30
    1076:	a1 05       	cpc	r26, r1
    1078:	b1 05       	cpc	r27, r1
    107a:	b0 f3       	brcs	.-20     	; 0x1068 <executeCommand+0x426>
									wdt_reset();
								}
							}
							switch(sensor1){
    107c:	19 34       	cpi	r17, 0x49	; 73
    107e:	59 f0       	breq	.+22     	; 0x1096 <executeCommand+0x454>
    1080:	20 f4       	brcc	.+8      	; 0x108a <executeCommand+0x448>
    1082:	11 34       	cpi	r17, 0x41	; 65
    1084:	09 f4       	brne	.+2      	; 0x1088 <executeCommand+0x446>
    1086:	9d c0       	rjmp	.+314    	; 0x11c2 <executeCommand+0x580>
    1088:	a2 c0       	rjmp	.+324    	; 0x11ce <executeCommand+0x58c>
    108a:	10 35       	cpi	r17, 0x50	; 80
    108c:	09 f4       	brne	.+2      	; 0x1090 <executeCommand+0x44e>
    108e:	5b c0       	rjmp	.+182    	; 0x1146 <executeCommand+0x504>
    1090:	19 36       	cpi	r17, 0x69	; 105
    1092:	49 f1       	breq	.+82     	; 0x10e6 <executeCommand+0x4a4>
    1094:	9c c0       	rjmp	.+312    	; 0x11ce <executeCommand+0x58c>
								case 'I':
									PORTA.OUT |= PIN3_bm;
    1096:	00 e0       	ldi	r16, 0x00	; 0
    1098:	14 e0       	ldi	r17, 0x04	; 4
    109a:	f8 01       	movw	r30, r16
    109c:	84 81       	ldd	r24, Z+4	; 0x04
    109e:	88 60       	ori	r24, 0x08	; 8
    10a0:	84 83       	std	Z+4, r24	; 0x04
    10a2:	86 e6       	ldi	r24, 0x66	; 102
    10a4:	96 e0       	ldi	r25, 0x06	; 6
    10a6:	01 97       	sbiw	r24, 0x01	; 1
    10a8:	f1 f7       	brne	.-4      	; 0x10a6 <executeCommand+0x464>
    10aa:	00 00       	nop
									_delay_ms(200);
									wdt_reset();
    10ac:	a8 95       	wdr
									presion1 = get_PressureI2C(get_I2CValue(verbose),2);
    10ae:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    10b2:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    10b6:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    10ba:	62 e0       	ldi	r22, 0x02	; 2
    10bc:	70 e0       	ldi	r23, 0x00	; 0
    10be:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    10c2:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    10c6:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    10ca:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    10ce:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
									PORTA.OUT &= ~PIN3_bm;
    10d2:	f8 01       	movw	r30, r16
    10d4:	84 81       	ldd	r24, Z+4	; 0x04
    10d6:	87 7f       	andi	r24, 0xF7	; 247
    10d8:	84 83       	std	Z+4, r24	; 0x04
    10da:	86 e6       	ldi	r24, 0x66	; 102
    10dc:	96 e0       	ldi	r25, 0x06	; 6
    10de:	01 97       	sbiw	r24, 0x01	; 1
    10e0:	f1 f7       	brne	.-4      	; 0x10de <executeCommand+0x49c>
    10e2:	00 00       	nop
    10e4:	74 c0       	rjmp	.+232    	; 0x11ce <executeCommand+0x58c>
									_delay_ms(200);
									break;
								case 'i':
									//printf("EntraS1\r");
									PORTA.OUT |= PIN7_bm;
    10e6:	00 e0       	ldi	r16, 0x00	; 0
    10e8:	14 e0       	ldi	r17, 0x04	; 4
    10ea:	f8 01       	movw	r30, r16
    10ec:	84 81       	ldd	r24, Z+4	; 0x04
    10ee:	80 68       	ori	r24, 0x80	; 128
    10f0:	84 83       	std	Z+4, r24	; 0x04
									PORTA.OUT |= PIN3_bm;
    10f2:	84 81       	ldd	r24, Z+4	; 0x04
    10f4:	88 60       	ori	r24, 0x08	; 8
    10f6:	84 83       	std	Z+4, r24	; 0x04
    10f8:	8f ef       	ldi	r24, 0xFF	; 255
    10fa:	9f e1       	ldi	r25, 0x1F	; 31
    10fc:	01 97       	sbiw	r24, 0x01	; 1
    10fe:	f1 f7       	brne	.-4      	; 0x10fc <executeCommand+0x4ba>
    1100:	00 c0       	rjmp	.+0      	; 0x1102 <executeCommand+0x4c0>
    1102:	00 00       	nop
									_delay_ms(1000);
									wdt_reset();
    1104:	a8 95       	wdr
									presion1 = get_PressureI2C(get_I2CValue(verbose),1);
    1106:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    110a:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    110e:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    1112:	61 e0       	ldi	r22, 0x01	; 1
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    111a:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    111e:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    1122:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    1126:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
									PORTA.OUT &= ~PIN7_bm;
    112a:	f8 01       	movw	r30, r16
    112c:	84 81       	ldd	r24, Z+4	; 0x04
    112e:	8f 77       	andi	r24, 0x7F	; 127
    1130:	84 83       	std	Z+4, r24	; 0x04
									PORTA.OUT &= ~PIN3_bm;
    1132:	84 81       	ldd	r24, Z+4	; 0x04
    1134:	87 7f       	andi	r24, 0xF7	; 247
    1136:	84 83       	std	Z+4, r24	; 0x04
    1138:	8f ef       	ldi	r24, 0xFF	; 255
    113a:	9f e1       	ldi	r25, 0x1F	; 31
    113c:	01 97       	sbiw	r24, 0x01	; 1
    113e:	f1 f7       	brne	.-4      	; 0x113c <executeCommand+0x4fa>
    1140:	00 c0       	rjmp	.+0      	; 0x1142 <executeCommand+0x500>
    1142:	00 00       	nop
    1144:	44 c0       	rjmp	.+136    	; 0x11ce <executeCommand+0x58c>
									_delay_ms(1000);
									break;
								case 'P':
									wdt_reset();
    1146:	a8 95       	wdr
									vol1 = get_Voltage(9); //2 segundos
    1148:	89 e0       	ldi	r24, 0x09	; 9
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	0e 94 84 02 	call	0x508	; 0x508 <get_Voltage>
    1150:	26 2f       	mov	r18, r22
    1152:	37 2f       	mov	r19, r23
    1154:	46 2f       	mov	r20, r22
    1156:	57 2f       	mov	r21, r23
    1158:	68 2f       	mov	r22, r24
    115a:	79 2f       	mov	r23, r25
    115c:	40 93 58 38 	sts	0x3858, r20	; 0x803858 <vol1>
    1160:	50 93 59 38 	sts	0x3859, r21	; 0x803859 <vol1+0x1>
    1164:	60 93 5a 38 	sts	0x385A, r22	; 0x80385a <vol1+0x2>
    1168:	70 93 5b 38 	sts	0x385B, r23	; 0x80385b <vol1+0x3>
									if(verbose == 1){
    116c:	40 91 6c 38 	lds	r20, 0x386C	; 0x80386c <verbose>
    1170:	50 91 6d 38 	lds	r21, 0x386D	; 0x80386d <verbose+0x1>
    1174:	41 30       	cpi	r20, 0x01	; 1
    1176:	51 05       	cpc	r21, r1
    1178:	81 f4       	brne	.+32     	; 0x119a <executeCommand+0x558>
										printf("Voltaje Sensor1: %f\r",vol1);
    117a:	9f 93       	push	r25
    117c:	8f 93       	push	r24
    117e:	3f 93       	push	r19
    1180:	2f 93       	push	r18
    1182:	86 ea       	ldi	r24, 0xA6	; 166
    1184:	98 eb       	ldi	r25, 0xB8	; 184
    1186:	9f 93       	push	r25
    1188:	8f 93       	push	r24
    118a:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
    1194:	0f 90       	pop	r0
    1196:	0f 90       	pop	r0
    1198:	0f 90       	pop	r0
									}
									presion1 = get_PresureADC1(vol1);
    119a:	60 91 58 38 	lds	r22, 0x3858	; 0x803858 <vol1>
    119e:	70 91 59 38 	lds	r23, 0x3859	; 0x803859 <vol1+0x1>
    11a2:	80 91 5a 38 	lds	r24, 0x385A	; 0x80385a <vol1+0x2>
    11a6:	90 91 5b 38 	lds	r25, 0x385B	; 0x80385b <vol1+0x3>
    11aa:	0e 94 2c 04 	call	0x858	; 0x858 <get_PresureADC1>
    11ae:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    11b2:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    11b6:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    11ba:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
									wdt_reset();
    11be:	a8 95       	wdr
									break;
    11c0:	06 c0       	rjmp	.+12     	; 0x11ce <executeCommand+0x58c>
								case 'A':
									s1 = 1;
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	80 93 44 38 	sts	0x3844, r24	; 0x803844 <s1>
    11ca:	90 93 45 38 	sts	0x3845, r25	; 0x803845 <s1+0x1>
									break;
								default:
									break;
							}
							switch(sensor2){
    11ce:	80 91 09 39 	lds	r24, 0x3909	; 0x803909 <sensor2>
    11d2:	80 35       	cpi	r24, 0x50	; 80
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <executeCommand+0x596>
    11d6:	6c c0       	rjmp	.+216    	; 0x12b0 <executeCommand+0x66e>
    11d8:	30 f4       	brcc	.+12     	; 0x11e6 <executeCommand+0x5a4>
    11da:	81 34       	cpi	r24, 0x41	; 65
    11dc:	09 f4       	brne	.+2      	; 0x11e0 <executeCommand+0x59e>
    11de:	e4 c0       	rjmp	.+456    	; 0x13a8 <executeCommand+0x766>
    11e0:	89 34       	cpi	r24, 0x49	; 73
    11e2:	39 f0       	breq	.+14     	; 0x11f2 <executeCommand+0x5b0>
    11e4:	e7 c0       	rjmp	.+462    	; 0x13b4 <executeCommand+0x772>
    11e6:	89 36       	cpi	r24, 0x69	; 105
    11e8:	61 f1       	breq	.+88     	; 0x1242 <executeCommand+0x600>
    11ea:	80 37       	cpi	r24, 0x70	; 112
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <executeCommand+0x5ae>
    11ee:	9e c0       	rjmp	.+316    	; 0x132c <executeCommand+0x6ea>
    11f0:	e1 c0       	rjmp	.+450    	; 0x13b4 <executeCommand+0x772>
								case 'I':
									PORTA.OUT |= PIN3_bm;
    11f2:	00 e0       	ldi	r16, 0x00	; 0
    11f4:	14 e0       	ldi	r17, 0x04	; 4
    11f6:	f8 01       	movw	r30, r16
    11f8:	84 81       	ldd	r24, Z+4	; 0x04
    11fa:	88 60       	ori	r24, 0x08	; 8
    11fc:	84 83       	std	Z+4, r24	; 0x04
    11fe:	86 e6       	ldi	r24, 0x66	; 102
    1200:	96 e0       	ldi	r25, 0x06	; 6
    1202:	01 97       	sbiw	r24, 0x01	; 1
    1204:	f1 f7       	brne	.-4      	; 0x1202 <executeCommand+0x5c0>
    1206:	00 00       	nop
									_delay_ms(200);
									wdt_reset();
    1208:	a8 95       	wdr
									presion2 = get_PressureI2C(get_I2CValue(verbose),2);
    120a:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    120e:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    1212:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    1216:	62 e0       	ldi	r22, 0x02	; 2
    1218:	70 e0       	ldi	r23, 0x00	; 0
    121a:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    121e:	60 93 4c 38 	sts	0x384C, r22	; 0x80384c <presion2>
    1222:	70 93 4d 38 	sts	0x384D, r23	; 0x80384d <presion2+0x1>
    1226:	80 93 4e 38 	sts	0x384E, r24	; 0x80384e <presion2+0x2>
    122a:	90 93 4f 38 	sts	0x384F, r25	; 0x80384f <presion2+0x3>
									PORTA.OUT &= ~PIN3_bm;
    122e:	f8 01       	movw	r30, r16
    1230:	84 81       	ldd	r24, Z+4	; 0x04
    1232:	87 7f       	andi	r24, 0xF7	; 247
    1234:	84 83       	std	Z+4, r24	; 0x04
    1236:	86 e6       	ldi	r24, 0x66	; 102
    1238:	96 e0       	ldi	r25, 0x06	; 6
    123a:	01 97       	sbiw	r24, 0x01	; 1
    123c:	f1 f7       	brne	.-4      	; 0x123a <executeCommand+0x5f8>
    123e:	00 00       	nop
    1240:	b9 c0       	rjmp	.+370    	; 0x13b4 <executeCommand+0x772>
									_delay_ms(200);
									break;
								case 'i':
									//printf("EntraS2\r");
									PORTC.OUT |= PIN2_bm;
    1242:	68 94       	set
    1244:	ee 24       	eor	r14, r14
    1246:	e6 f8       	bld	r14, 6
    1248:	ff 24       	eor	r15, r15
    124a:	f2 f8       	bld	r15, 2
    124c:	f7 01       	movw	r30, r14
    124e:	84 81       	ldd	r24, Z+4	; 0x04
    1250:	84 60       	ori	r24, 0x04	; 4
    1252:	84 83       	std	Z+4, r24	; 0x04
									PORTA.OUT |= PIN3_bm;
    1254:	00 e0       	ldi	r16, 0x00	; 0
    1256:	14 e0       	ldi	r17, 0x04	; 4
    1258:	f8 01       	movw	r30, r16
    125a:	84 81       	ldd	r24, Z+4	; 0x04
    125c:	88 60       	ori	r24, 0x08	; 8
    125e:	84 83       	std	Z+4, r24	; 0x04
    1260:	8f ef       	ldi	r24, 0xFF	; 255
    1262:	9f e1       	ldi	r25, 0x1F	; 31
    1264:	01 97       	sbiw	r24, 0x01	; 1
    1266:	f1 f7       	brne	.-4      	; 0x1264 <executeCommand+0x622>
    1268:	00 c0       	rjmp	.+0      	; 0x126a <executeCommand+0x628>
    126a:	00 00       	nop
									_delay_ms(1000);
									wdt_reset();
    126c:	a8 95       	wdr
									presion2 = get_PressureI2C(get_I2CValue(verbose),1);
    126e:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    1272:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    1276:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    127a:	61 e0       	ldi	r22, 0x01	; 1
    127c:	70 e0       	ldi	r23, 0x00	; 0
    127e:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    1282:	60 93 4c 38 	sts	0x384C, r22	; 0x80384c <presion2>
    1286:	70 93 4d 38 	sts	0x384D, r23	; 0x80384d <presion2+0x1>
    128a:	80 93 4e 38 	sts	0x384E, r24	; 0x80384e <presion2+0x2>
    128e:	90 93 4f 38 	sts	0x384F, r25	; 0x80384f <presion2+0x3>
									PORTC.OUT &= ~PIN2_bm;
    1292:	f7 01       	movw	r30, r14
    1294:	84 81       	ldd	r24, Z+4	; 0x04
    1296:	8b 7f       	andi	r24, 0xFB	; 251
    1298:	84 83       	std	Z+4, r24	; 0x04
									PORTA.OUT &= ~PIN3_bm;
    129a:	f8 01       	movw	r30, r16
    129c:	84 81       	ldd	r24, Z+4	; 0x04
    129e:	87 7f       	andi	r24, 0xF7	; 247
    12a0:	84 83       	std	Z+4, r24	; 0x04
    12a2:	8f ef       	ldi	r24, 0xFF	; 255
    12a4:	9f e1       	ldi	r25, 0x1F	; 31
    12a6:	01 97       	sbiw	r24, 0x01	; 1
    12a8:	f1 f7       	brne	.-4      	; 0x12a6 <executeCommand+0x664>
    12aa:	00 c0       	rjmp	.+0      	; 0x12ac <executeCommand+0x66a>
    12ac:	00 00       	nop
    12ae:	82 c0       	rjmp	.+260    	; 0x13b4 <executeCommand+0x772>
									_delay_ms(1000);
									break;
								case 'P':
									wdt_reset();
    12b0:	a8 95       	wdr
									vol2 = get_Voltage(5); //2 segundos
    12b2:	85 e0       	ldi	r24, 0x05	; 5
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	0e 94 84 02 	call	0x508	; 0x508 <get_Voltage>
    12ba:	26 2f       	mov	r18, r22
    12bc:	37 2f       	mov	r19, r23
    12be:	46 2f       	mov	r20, r22
    12c0:	57 2f       	mov	r21, r23
    12c2:	68 2f       	mov	r22, r24
    12c4:	79 2f       	mov	r23, r25
    12c6:	40 93 54 38 	sts	0x3854, r20	; 0x803854 <vol2>
    12ca:	50 93 55 38 	sts	0x3855, r21	; 0x803855 <vol2+0x1>
    12ce:	60 93 56 38 	sts	0x3856, r22	; 0x803856 <vol2+0x2>
    12d2:	70 93 57 38 	sts	0x3857, r23	; 0x803857 <vol2+0x3>
									//PORTB.OUT &= ~PIN5_bm;
									if(verbose == 1){
    12d6:	40 91 6c 38 	lds	r20, 0x386C	; 0x80386c <verbose>
    12da:	50 91 6d 38 	lds	r21, 0x386D	; 0x80386d <verbose+0x1>
    12de:	41 30       	cpi	r20, 0x01	; 1
    12e0:	51 05       	cpc	r21, r1
    12e2:	81 f4       	brne	.+32     	; 0x1304 <executeCommand+0x6c2>
										printf("Voltaje Sensor2: %f\r",vol2);
    12e4:	9f 93       	push	r25
    12e6:	8f 93       	push	r24
    12e8:	3f 93       	push	r19
    12ea:	2f 93       	push	r18
    12ec:	8b eb       	ldi	r24, 0xBB	; 187
    12ee:	98 eb       	ldi	r25, 0xB8	; 184
    12f0:	9f 93       	push	r25
    12f2:	8f 93       	push	r24
    12f4:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    12f8:	0f 90       	pop	r0
    12fa:	0f 90       	pop	r0
    12fc:	0f 90       	pop	r0
    12fe:	0f 90       	pop	r0
    1300:	0f 90       	pop	r0
    1302:	0f 90       	pop	r0
									}
									//printf("Voltaje2: %f\r",vol2);
									presion2 = get_PresureADC2(vol2);
    1304:	60 91 54 38 	lds	r22, 0x3854	; 0x803854 <vol2>
    1308:	70 91 55 38 	lds	r23, 0x3855	; 0x803855 <vol2+0x1>
    130c:	80 91 56 38 	lds	r24, 0x3856	; 0x803856 <vol2+0x2>
    1310:	90 91 57 38 	lds	r25, 0x3857	; 0x803857 <vol2+0x3>
    1314:	0e 94 c3 03 	call	0x786	; 0x786 <get_PresureADC2>
    1318:	60 93 4c 38 	sts	0x384C, r22	; 0x80384c <presion2>
    131c:	70 93 4d 38 	sts	0x384D, r23	; 0x80384d <presion2+0x1>
    1320:	80 93 4e 38 	sts	0x384E, r24	; 0x80384e <presion2+0x2>
    1324:	90 93 4f 38 	sts	0x384F, r25	; 0x80384f <presion2+0x3>
									wdt_reset();
    1328:	a8 95       	wdr
									break;
    132a:	44 c0       	rjmp	.+136    	; 0x13b4 <executeCommand+0x772>
								case 'p':
									wdt_reset();
    132c:	a8 95       	wdr
									vol2 = get_Voltage(5); //2 segundos
    132e:	85 e0       	ldi	r24, 0x05	; 5
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	0e 94 84 02 	call	0x508	; 0x508 <get_Voltage>
    1336:	26 2f       	mov	r18, r22
    1338:	37 2f       	mov	r19, r23
    133a:	46 2f       	mov	r20, r22
    133c:	57 2f       	mov	r21, r23
    133e:	68 2f       	mov	r22, r24
    1340:	79 2f       	mov	r23, r25
    1342:	40 93 54 38 	sts	0x3854, r20	; 0x803854 <vol2>
    1346:	50 93 55 38 	sts	0x3855, r21	; 0x803855 <vol2+0x1>
    134a:	60 93 56 38 	sts	0x3856, r22	; 0x803856 <vol2+0x2>
    134e:	70 93 57 38 	sts	0x3857, r23	; 0x803857 <vol2+0x3>
									//PORTB.OUT &= ~PIN5_bm;
									if(verbose == 1){
    1352:	40 91 6c 38 	lds	r20, 0x386C	; 0x80386c <verbose>
    1356:	50 91 6d 38 	lds	r21, 0x386D	; 0x80386d <verbose+0x1>
    135a:	41 30       	cpi	r20, 0x01	; 1
    135c:	51 05       	cpc	r21, r1
    135e:	81 f4       	brne	.+32     	; 0x1380 <executeCommand+0x73e>
										printf("Voltaje Sensor2: %f\r",vol2);
    1360:	9f 93       	push	r25
    1362:	8f 93       	push	r24
    1364:	3f 93       	push	r19
    1366:	2f 93       	push	r18
    1368:	8b eb       	ldi	r24, 0xBB	; 187
    136a:	98 eb       	ldi	r25, 0xB8	; 184
    136c:	9f 93       	push	r25
    136e:	8f 93       	push	r24
    1370:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1374:	0f 90       	pop	r0
    1376:	0f 90       	pop	r0
    1378:	0f 90       	pop	r0
    137a:	0f 90       	pop	r0
    137c:	0f 90       	pop	r0
    137e:	0f 90       	pop	r0
									}
									presion2 = get_PresureADC2(vol2);
    1380:	60 91 54 38 	lds	r22, 0x3854	; 0x803854 <vol2>
    1384:	70 91 55 38 	lds	r23, 0x3855	; 0x803855 <vol2+0x1>
    1388:	80 91 56 38 	lds	r24, 0x3856	; 0x803856 <vol2+0x2>
    138c:	90 91 57 38 	lds	r25, 0x3857	; 0x803857 <vol2+0x3>
    1390:	0e 94 c3 03 	call	0x786	; 0x786 <get_PresureADC2>
    1394:	60 93 4c 38 	sts	0x384C, r22	; 0x80384c <presion2>
    1398:	70 93 4d 38 	sts	0x384D, r23	; 0x80384d <presion2+0x1>
    139c:	80 93 4e 38 	sts	0x384E, r24	; 0x80384e <presion2+0x2>
    13a0:	90 93 4f 38 	sts	0x384F, r25	; 0x80384f <presion2+0x3>
									wdt_reset();
    13a4:	a8 95       	wdr
									break;
    13a6:	06 c0       	rjmp	.+12     	; 0x13b4 <executeCommand+0x772>
								case 'A':
									s2 = 1;
    13a8:	81 e0       	ldi	r24, 0x01	; 1
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	80 93 42 38 	sts	0x3842, r24	; 0x803842 <s2>
    13b0:	90 93 43 38 	sts	0x3843, r25	; 0x803843 <s2+0x1>
									break;
								default:
									break;
							}
							PORTB.OUT &= ~PIN5_bm;
    13b4:	e0 e2       	ldi	r30, 0x20	; 32
    13b6:	f4 e0       	ldi	r31, 0x04	; 4
    13b8:	84 81       	ldd	r24, Z+4	; 0x04
    13ba:	8f 7d       	andi	r24, 0xDF	; 223
    13bc:	84 83       	std	Z+4, r24	; 0x04
							bateria = get_Voltage(6)*5; //2 segundos
    13be:	86 e0       	ldi	r24, 0x06	; 6
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	0e 94 84 02 	call	0x508	; 0x508 <get_Voltage>
    13c6:	20 e0       	ldi	r18, 0x00	; 0
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	40 ea       	ldi	r20, 0xA0	; 160
    13cc:	50 e4       	ldi	r21, 0x40	; 64
    13ce:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
    13d2:	60 93 48 38 	sts	0x3848, r22	; 0x803848 <bateria>
    13d6:	70 93 49 38 	sts	0x3849, r23	; 0x803849 <bateria+0x1>
    13da:	80 93 4a 38 	sts	0x384A, r24	; 0x80384a <bateria+0x2>
    13de:	90 93 4b 38 	sts	0x384B, r25	; 0x80384b <bateria+0x3>
    13e2:	5b c2       	rjmp	.+1206   	; 0x189a <executeCommand+0xc58>
							//count = 0;
						}
						else{
							if(strcmp(command,"RT\r") == 0){
    13e4:	60 ed       	ldi	r22, 0xD0	; 208
    13e6:	78 eb       	ldi	r23, 0xB8	; 184
    13e8:	c7 01       	movw	r24, r14
    13ea:	0e 94 7a 1a 	call	0x34f4	; 0x34f4 <strcmp>
    13ee:	89 2b       	or	r24, r25
    13f0:	09 f0       	breq	.+2      	; 0x13f4 <executeCommand+0x7b2>
    13f2:	34 c1       	rjmp	.+616    	; 0x165c <executeCommand+0xa1a>
								//printf("Bandera1: %d, Bandera2: %d",s1,s2);
								if(s1 == 0 && s2 == 1 && flujo != 0){
    13f4:	80 91 44 38 	lds	r24, 0x3844	; 0x803844 <s1>
    13f8:	90 91 45 38 	lds	r25, 0x3845	; 0x803845 <s1+0x1>
    13fc:	89 2b       	or	r24, r25
    13fe:	c1 f5       	brne	.+112    	; 0x1470 <executeCommand+0x82e>
    1400:	80 91 42 38 	lds	r24, 0x3842	; 0x803842 <s2>
    1404:	90 91 43 38 	lds	r25, 0x3843	; 0x803843 <s2+0x1>
    1408:	01 97       	sbiw	r24, 0x01	; 1
    140a:	91 f5       	brne	.+100    	; 0x1470 <executeCommand+0x82e>
    140c:	80 91 46 38 	lds	r24, 0x3846	; 0x803846 <flujo>
    1410:	90 91 47 38 	lds	r25, 0x3847	; 0x803847 <flujo+0x1>
    1414:	89 2b       	or	r24, r25
    1416:	61 f1       	breq	.+88     	; 0x1470 <executeCommand+0x82e>
									printf("RH%.2fRL%.2fRVO%.2f\r",presion1,caudal,bateria);
    1418:	80 91 4b 38 	lds	r24, 0x384B	; 0x80384b <bateria+0x3>
    141c:	8f 93       	push	r24
    141e:	80 91 4a 38 	lds	r24, 0x384A	; 0x80384a <bateria+0x2>
    1422:	8f 93       	push	r24
    1424:	80 91 49 38 	lds	r24, 0x3849	; 0x803849 <bateria+0x1>
    1428:	8f 93       	push	r24
    142a:	80 91 48 38 	lds	r24, 0x3848	; 0x803848 <bateria>
    142e:	8f 93       	push	r24
    1430:	80 91 63 38 	lds	r24, 0x3863	; 0x803863 <caudal+0x3>
    1434:	8f 93       	push	r24
    1436:	80 91 62 38 	lds	r24, 0x3862	; 0x803862 <caudal+0x2>
    143a:	8f 93       	push	r24
    143c:	80 91 61 38 	lds	r24, 0x3861	; 0x803861 <caudal+0x1>
    1440:	8f 93       	push	r24
    1442:	80 91 60 38 	lds	r24, 0x3860	; 0x803860 <caudal>
    1446:	8f 93       	push	r24
    1448:	80 91 53 38 	lds	r24, 0x3853	; 0x803853 <presion1+0x3>
    144c:	8f 93       	push	r24
    144e:	80 91 52 38 	lds	r24, 0x3852	; 0x803852 <presion1+0x2>
    1452:	8f 93       	push	r24
    1454:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <presion1+0x1>
    1458:	8f 93       	push	r24
    145a:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <presion1>
    145e:	8f 93       	push	r24
    1460:	84 ed       	ldi	r24, 0xD4	; 212
    1462:	98 eb       	ldi	r25, 0xB8	; 184
    1464:	9f 93       	push	r25
    1466:	8f 93       	push	r24
    1468:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    146c:	cd bf       	out	0x3d, r28	; 61
    146e:	de bf       	out	0x3e, r29	; 62
// 									vol1 = 0;
// 									presion1 = 0;
// 									bateria = 0;
								}
								if(s1 == 0 && s2 == 0 && flujo != 0){
    1470:	80 91 44 38 	lds	r24, 0x3844	; 0x803844 <s1>
    1474:	90 91 45 38 	lds	r25, 0x3845	; 0x803845 <s1+0x1>
    1478:	89 2b       	or	r24, r25
    147a:	09 f0       	breq	.+2      	; 0x147e <executeCommand+0x83c>
    147c:	44 c0       	rjmp	.+136    	; 0x1506 <executeCommand+0x8c4>
    147e:	80 91 42 38 	lds	r24, 0x3842	; 0x803842 <s2>
    1482:	90 91 43 38 	lds	r25, 0x3843	; 0x803843 <s2+0x1>
    1486:	89 2b       	or	r24, r25
    1488:	f1 f5       	brne	.+124    	; 0x1506 <executeCommand+0x8c4>
    148a:	80 91 46 38 	lds	r24, 0x3846	; 0x803846 <flujo>
    148e:	90 91 47 38 	lds	r25, 0x3847	; 0x803847 <flujo+0x1>
    1492:	89 2b       	or	r24, r25
    1494:	c1 f1       	breq	.+112    	; 0x1506 <executeCommand+0x8c4>
									printf("RH%.2fRQ%.2fRL%.2fRVO%.2f\r",presion1,presion2,caudal,bateria);
    1496:	80 91 4b 38 	lds	r24, 0x384B	; 0x80384b <bateria+0x3>
    149a:	8f 93       	push	r24
    149c:	80 91 4a 38 	lds	r24, 0x384A	; 0x80384a <bateria+0x2>
    14a0:	8f 93       	push	r24
    14a2:	80 91 49 38 	lds	r24, 0x3849	; 0x803849 <bateria+0x1>
    14a6:	8f 93       	push	r24
    14a8:	80 91 48 38 	lds	r24, 0x3848	; 0x803848 <bateria>
    14ac:	8f 93       	push	r24
    14ae:	80 91 63 38 	lds	r24, 0x3863	; 0x803863 <caudal+0x3>
    14b2:	8f 93       	push	r24
    14b4:	80 91 62 38 	lds	r24, 0x3862	; 0x803862 <caudal+0x2>
    14b8:	8f 93       	push	r24
    14ba:	80 91 61 38 	lds	r24, 0x3861	; 0x803861 <caudal+0x1>
    14be:	8f 93       	push	r24
    14c0:	80 91 60 38 	lds	r24, 0x3860	; 0x803860 <caudal>
    14c4:	8f 93       	push	r24
    14c6:	80 91 4f 38 	lds	r24, 0x384F	; 0x80384f <presion2+0x3>
    14ca:	8f 93       	push	r24
    14cc:	80 91 4e 38 	lds	r24, 0x384E	; 0x80384e <presion2+0x2>
    14d0:	8f 93       	push	r24
    14d2:	80 91 4d 38 	lds	r24, 0x384D	; 0x80384d <presion2+0x1>
    14d6:	8f 93       	push	r24
    14d8:	80 91 4c 38 	lds	r24, 0x384C	; 0x80384c <presion2>
    14dc:	8f 93       	push	r24
    14de:	80 91 53 38 	lds	r24, 0x3853	; 0x803853 <presion1+0x3>
    14e2:	8f 93       	push	r24
    14e4:	80 91 52 38 	lds	r24, 0x3852	; 0x803852 <presion1+0x2>
    14e8:	8f 93       	push	r24
    14ea:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <presion1+0x1>
    14ee:	8f 93       	push	r24
    14f0:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <presion1>
    14f4:	8f 93       	push	r24
    14f6:	89 ee       	ldi	r24, 0xE9	; 233
    14f8:	98 eb       	ldi	r25, 0xB8	; 184
    14fa:	9f 93       	push	r25
    14fc:	8f 93       	push	r24
    14fe:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1502:	cd bf       	out	0x3d, r28	; 61
    1504:	de bf       	out	0x3e, r29	; 62
// 									vol2 = 0;
// 									presion1 = 0;
// 									presion2 = 0;
// 									bateria = 0;
								}
								if(s1 == 0 && s2 == 0 && flujo == 0){
    1506:	80 91 44 38 	lds	r24, 0x3844	; 0x803844 <s1>
    150a:	90 91 45 38 	lds	r25, 0x3845	; 0x803845 <s1+0x1>
    150e:	89 2b       	or	r24, r25
    1510:	e9 f5       	brne	.+122    	; 0x158c <executeCommand+0x94a>
    1512:	80 91 42 38 	lds	r24, 0x3842	; 0x803842 <s2>
    1516:	90 91 43 38 	lds	r25, 0x3843	; 0x803843 <s2+0x1>
    151a:	89 2b       	or	r24, r25
    151c:	b9 f5       	brne	.+110    	; 0x158c <executeCommand+0x94a>
    151e:	80 91 46 38 	lds	r24, 0x3846	; 0x803846 <flujo>
    1522:	90 91 47 38 	lds	r25, 0x3847	; 0x803847 <flujo+0x1>
    1526:	89 2b       	or	r24, r25
    1528:	89 f5       	brne	.+98     	; 0x158c <executeCommand+0x94a>
									printf("RH%.2fRQ%.2fRVO%.2f\r",presion1,presion2,bateria);
    152a:	80 91 4b 38 	lds	r24, 0x384B	; 0x80384b <bateria+0x3>
    152e:	8f 93       	push	r24
    1530:	80 91 4a 38 	lds	r24, 0x384A	; 0x80384a <bateria+0x2>
    1534:	8f 93       	push	r24
    1536:	80 91 49 38 	lds	r24, 0x3849	; 0x803849 <bateria+0x1>
    153a:	8f 93       	push	r24
    153c:	80 91 48 38 	lds	r24, 0x3848	; 0x803848 <bateria>
    1540:	8f 93       	push	r24
    1542:	80 91 4f 38 	lds	r24, 0x384F	; 0x80384f <presion2+0x3>
    1546:	8f 93       	push	r24
    1548:	80 91 4e 38 	lds	r24, 0x384E	; 0x80384e <presion2+0x2>
    154c:	8f 93       	push	r24
    154e:	80 91 4d 38 	lds	r24, 0x384D	; 0x80384d <presion2+0x1>
    1552:	8f 93       	push	r24
    1554:	80 91 4c 38 	lds	r24, 0x384C	; 0x80384c <presion2>
    1558:	8f 93       	push	r24
    155a:	80 91 53 38 	lds	r24, 0x3853	; 0x803853 <presion1+0x3>
    155e:	8f 93       	push	r24
    1560:	80 91 52 38 	lds	r24, 0x3852	; 0x803852 <presion1+0x2>
    1564:	8f 93       	push	r24
    1566:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <presion1+0x1>
    156a:	8f 93       	push	r24
    156c:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <presion1>
    1570:	8f 93       	push	r24
    1572:	84 e0       	ldi	r24, 0x04	; 4
    1574:	99 eb       	ldi	r25, 0xB9	; 185
    1576:	9f 93       	push	r25
    1578:	8f 93       	push	r24
    157a:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
									TCA0.SINGLE.CTRLA &= ~TCA_SINGLE_ENABLE_bm;
    157e:	e0 e0       	ldi	r30, 0x00	; 0
    1580:	fa e0       	ldi	r31, 0x0A	; 10
    1582:	80 81       	ld	r24, Z
    1584:	8e 7f       	andi	r24, 0xFE	; 254
    1586:	80 83       	st	Z, r24
    1588:	cd bf       	out	0x3d, r28	; 61
    158a:	de bf       	out	0x3e, r29	; 62
// 									vol2 = 0;
// 									presion1 = 0;
// 									presion2 = 0;
// 									bateria = 0;
								}
								if(s1 == 0 && s2 != 0 && flujo == 0){
    158c:	80 91 44 38 	lds	r24, 0x3844	; 0x803844 <s1>
    1590:	90 91 45 38 	lds	r25, 0x3845	; 0x803845 <s1+0x1>
    1594:	89 2b       	or	r24, r25
    1596:	61 f5       	brne	.+88     	; 0x15f0 <executeCommand+0x9ae>
    1598:	80 91 42 38 	lds	r24, 0x3842	; 0x803842 <s2>
    159c:	90 91 43 38 	lds	r25, 0x3843	; 0x803843 <s2+0x1>
    15a0:	89 2b       	or	r24, r25
    15a2:	31 f1       	breq	.+76     	; 0x15f0 <executeCommand+0x9ae>
    15a4:	80 91 46 38 	lds	r24, 0x3846	; 0x803846 <flujo>
    15a8:	90 91 47 38 	lds	r25, 0x3847	; 0x803847 <flujo+0x1>
    15ac:	89 2b       	or	r24, r25
    15ae:	01 f5       	brne	.+64     	; 0x15f0 <executeCommand+0x9ae>
									printf("RH%.2fRVO%.2f\r",presion1,bateria);
    15b0:	80 91 4b 38 	lds	r24, 0x384B	; 0x80384b <bateria+0x3>
    15b4:	8f 93       	push	r24
    15b6:	80 91 4a 38 	lds	r24, 0x384A	; 0x80384a <bateria+0x2>
    15ba:	8f 93       	push	r24
    15bc:	80 91 49 38 	lds	r24, 0x3849	; 0x803849 <bateria+0x1>
    15c0:	8f 93       	push	r24
    15c2:	80 91 48 38 	lds	r24, 0x3848	; 0x803848 <bateria>
    15c6:	8f 93       	push	r24
    15c8:	80 91 53 38 	lds	r24, 0x3853	; 0x803853 <presion1+0x3>
    15cc:	8f 93       	push	r24
    15ce:	80 91 52 38 	lds	r24, 0x3852	; 0x803852 <presion1+0x2>
    15d2:	8f 93       	push	r24
    15d4:	80 91 51 38 	lds	r24, 0x3851	; 0x803851 <presion1+0x1>
    15d8:	8f 93       	push	r24
    15da:	80 91 50 38 	lds	r24, 0x3850	; 0x803850 <presion1>
    15de:	8f 93       	push	r24
    15e0:	89 e1       	ldi	r24, 0x19	; 25
    15e2:	99 eb       	ldi	r25, 0xB9	; 185
    15e4:	9f 93       	push	r25
    15e6:	8f 93       	push	r24
    15e8:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    15ec:	cd bf       	out	0x3d, r28	; 61
    15ee:	de bf       	out	0x3e, r29	; 62
// 									vol1 = 0;
// 									presion1 = 0;
// 									bateria = 0;
								}
								if(s1 != 0 && s2 != 0 && flujo != 0){
    15f0:	80 91 44 38 	lds	r24, 0x3844	; 0x803844 <s1>
    15f4:	90 91 45 38 	lds	r25, 0x3845	; 0x803845 <s1+0x1>
    15f8:	89 2b       	or	r24, r25
    15fa:	09 f4       	brne	.+2      	; 0x15fe <executeCommand+0x9bc>
    15fc:	4e c1       	rjmp	.+668    	; 0x189a <executeCommand+0xc58>
    15fe:	80 91 42 38 	lds	r24, 0x3842	; 0x803842 <s2>
    1602:	90 91 43 38 	lds	r25, 0x3843	; 0x803843 <s2+0x1>
    1606:	89 2b       	or	r24, r25
    1608:	09 f4       	brne	.+2      	; 0x160c <executeCommand+0x9ca>
    160a:	47 c1       	rjmp	.+654    	; 0x189a <executeCommand+0xc58>
    160c:	80 91 46 38 	lds	r24, 0x3846	; 0x803846 <flujo>
    1610:	90 91 47 38 	lds	r25, 0x3847	; 0x803847 <flujo+0x1>
    1614:	89 2b       	or	r24, r25
    1616:	09 f4       	brne	.+2      	; 0x161a <executeCommand+0x9d8>
    1618:	40 c1       	rjmp	.+640    	; 0x189a <executeCommand+0xc58>
									printf("RL%.2fRVO%.2f\r",caudal,bateria);
    161a:	80 91 4b 38 	lds	r24, 0x384B	; 0x80384b <bateria+0x3>
    161e:	8f 93       	push	r24
    1620:	80 91 4a 38 	lds	r24, 0x384A	; 0x80384a <bateria+0x2>
    1624:	8f 93       	push	r24
    1626:	80 91 49 38 	lds	r24, 0x3849	; 0x803849 <bateria+0x1>
    162a:	8f 93       	push	r24
    162c:	80 91 48 38 	lds	r24, 0x3848	; 0x803848 <bateria>
    1630:	8f 93       	push	r24
    1632:	80 91 63 38 	lds	r24, 0x3863	; 0x803863 <caudal+0x3>
    1636:	8f 93       	push	r24
    1638:	80 91 62 38 	lds	r24, 0x3862	; 0x803862 <caudal+0x2>
    163c:	8f 93       	push	r24
    163e:	80 91 61 38 	lds	r24, 0x3861	; 0x803861 <caudal+0x1>
    1642:	8f 93       	push	r24
    1644:	80 91 60 38 	lds	r24, 0x3860	; 0x803860 <caudal>
    1648:	8f 93       	push	r24
    164a:	8a ed       	ldi	r24, 0xDA	; 218
    164c:	98 eb       	ldi	r25, 0xB8	; 184
    164e:	9f 93       	push	r25
    1650:	8f 93       	push	r24
    1652:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1656:	cd bf       	out	0x3d, r28	; 61
    1658:	de bf       	out	0x3e, r29	; 62
    165a:	1f c1       	rjmp	.+574    	; 0x189a <executeCommand+0xc58>
								}
							}
							else{
								if(strcmp(command,"AC\r") == 0){
    165c:	68 e2       	ldi	r22, 0x28	; 40
    165e:	79 eb       	ldi	r23, 0xB9	; 185
    1660:	c7 01       	movw	r24, r14
    1662:	0e 94 7a 1a 	call	0x34f4	; 0x34f4 <strcmp>
    1666:	89 2b       	or	r24, r25
    1668:	09 f0       	breq	.+2      	; 0x166c <executeCommand+0xa2a>
    166a:	6f c0       	rjmp	.+222    	; 0x174a <executeCommand+0xb08>
									if(flujo == 0){
    166c:	80 91 46 38 	lds	r24, 0x3846	; 0x803846 <flujo>
    1670:	90 91 47 38 	lds	r25, 0x3847	; 0x803847 <flujo+0x1>
    1674:	89 2b       	or	r24, r25
    1676:	49 f4       	brne	.+18     	; 0x168a <executeCommand+0xa48>
										printf("Incorrect Command\r");
    1678:	8c e2       	ldi	r24, 0x2C	; 44
    167a:	99 eb       	ldi	r25, 0xB9	; 185
    167c:	9f 93       	push	r25
    167e:	8f 93       	push	r24
    1680:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1684:	0f 90       	pop	r0
    1686:	0f 90       	pop	r0
    1688:	08 c1       	rjmp	.+528    	; 0x189a <executeCommand+0xc58>
									}
									else{
										Flotante Volumen;
										int desplazo = read_EEPROM(5351)*4;//*(uint8_t*)(5351)*4;
    168a:	87 ee       	ldi	r24, 0xE7	; 231
    168c:	94 e1       	ldi	r25, 0x14	; 20
    168e:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1692:	08 2f       	mov	r16, r24
    1694:	10 e0       	ldi	r17, 0x00	; 0
    1696:	00 0f       	add	r16, r16
    1698:	11 1f       	adc	r17, r17
    169a:	00 0f       	add	r16, r16
    169c:	11 1f       	adc	r17, r17
										for(int k=0; k <= 3; k++){
    169e:	e1 2c       	mov	r14, r1
    16a0:	f1 2c       	mov	r15, r1
    16a2:	10 c0       	rjmp	.+32     	; 0x16c4 <executeCommand+0xa82>
											Volumen.dato[k] = read_EEPROM(k+desplazo+5120);//*(uint8_t *)(k+desplazo+5120);
    16a4:	c7 01       	movw	r24, r14
    16a6:	80 0f       	add	r24, r16
    16a8:	91 1f       	adc	r25, r17
    16aa:	9c 5e       	subi	r25, 0xEC	; 236
    16ac:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    16b0:	e1 e0       	ldi	r30, 0x01	; 1
    16b2:	f0 e0       	ldi	r31, 0x00	; 0
    16b4:	ec 0f       	add	r30, r28
    16b6:	fd 1f       	adc	r31, r29
    16b8:	ee 0d       	add	r30, r14
    16ba:	ff 1d       	adc	r31, r15
    16bc:	80 83       	st	Z, r24
										printf("Incorrect Command\r");
									}
									else{
										Flotante Volumen;
										int desplazo = read_EEPROM(5351)*4;//*(uint8_t*)(5351)*4;
										for(int k=0; k <= 3; k++){
    16be:	ff ef       	ldi	r31, 0xFF	; 255
    16c0:	ef 1a       	sub	r14, r31
    16c2:	ff 0a       	sbc	r15, r31
    16c4:	24 e0       	ldi	r18, 0x04	; 4
    16c6:	e2 16       	cp	r14, r18
    16c8:	f1 04       	cpc	r15, r1
    16ca:	64 f3       	brlt	.-40     	; 0x16a4 <executeCommand+0xa62>
											Volumen.dato[k] = read_EEPROM(k+desplazo+5120);//*(uint8_t *)(k+desplazo+5120);
										}
										printf("AC%.2f\r", Volumen.f);
    16cc:	89 81       	ldd	r24, Y+1	; 0x01
    16ce:	9a 81       	ldd	r25, Y+2	; 0x02
    16d0:	2b 81       	ldd	r18, Y+3	; 0x03
    16d2:	3c 81       	ldd	r19, Y+4	; 0x04
    16d4:	3f 93       	push	r19
    16d6:	2f 93       	push	r18
    16d8:	9f 93       	push	r25
    16da:	8f 93       	push	r24
    16dc:	8f e3       	ldi	r24, 0x3F	; 63
    16de:	99 eb       	ldi	r25, 0xB9	; 185
    16e0:	9f 93       	push	r25
    16e2:	8f 93       	push	r24
    16e4:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
										for(int k=0; k <= 3; k++){
    16e8:	0f 90       	pop	r0
    16ea:	0f 90       	pop	r0
    16ec:	0f 90       	pop	r0
    16ee:	0f 90       	pop	r0
    16f0:	0f 90       	pop	r0
    16f2:	0f 90       	pop	r0
    16f4:	e1 2c       	mov	r14, r1
    16f6:	f1 2c       	mov	r15, r1
    16f8:	0a c0       	rjmp	.+20     	; 0x170e <executeCommand+0xacc>
											write_EEPROM(k+desplazo+5120,0);
    16fa:	c7 01       	movw	r24, r14
    16fc:	80 0f       	add	r24, r16
    16fe:	91 1f       	adc	r25, r17
    1700:	60 e0       	ldi	r22, 0x00	; 0
    1702:	9c 5e       	subi	r25, 0xEC	; 236
    1704:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
										int desplazo = read_EEPROM(5351)*4;//*(uint8_t*)(5351)*4;
										for(int k=0; k <= 3; k++){
											Volumen.dato[k] = read_EEPROM(k+desplazo+5120);//*(uint8_t *)(k+desplazo+5120);
										}
										printf("AC%.2f\r", Volumen.f);
										for(int k=0; k <= 3; k++){
    1708:	8f ef       	ldi	r24, 0xFF	; 255
    170a:	e8 1a       	sub	r14, r24
    170c:	f8 0a       	sbc	r15, r24
    170e:	94 e0       	ldi	r25, 0x04	; 4
    1710:	e9 16       	cp	r14, r25
    1712:	f1 04       	cpc	r15, r1
    1714:	94 f3       	brlt	.-28     	; 0x16fa <executeCommand+0xab8>
											write_EEPROM(k+desplazo+5120,0);
										}
										int sumador = read_EEPROM(5351);//*(uint8_t*)(5351);
    1716:	87 ee       	ldi	r24, 0xE7	; 231
    1718:	94 e1       	ldi	r25, 0x14	; 20
    171a:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    171e:	68 2f       	mov	r22, r24
    1720:	70 e0       	ldi	r23, 0x00	; 0
										sumador++;
    1722:	6f 5f       	subi	r22, 0xFF	; 255
    1724:	7f 4f       	sbci	r23, 0xFF	; 255
										write_EEPROM(5351,sumador);
    1726:	87 ee       	ldi	r24, 0xE7	; 231
    1728:	94 e1       	ldi	r25, 0x14	; 20
    172a:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
										int	compara = read_EEPROM(5351);
    172e:	87 ee       	ldi	r24, 0xE7	; 231
    1730:	94 e1       	ldi	r25, 0x14	; 20
    1732:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1736:	90 e0       	ldi	r25, 0x00	; 0
										if(compara > 56){
    1738:	c9 97       	sbiw	r24, 0x39	; 57
    173a:	0c f4       	brge	.+2      	; 0x173e <executeCommand+0xafc>
    173c:	ae c0       	rjmp	.+348    	; 0x189a <executeCommand+0xc58>
											write_EEPROM(5351,0);
    173e:	60 e0       	ldi	r22, 0x00	; 0
    1740:	87 ee       	ldi	r24, 0xE7	; 231
    1742:	94 e1       	ldi	r25, 0x14	; 20
    1744:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
    1748:	a8 c0       	rjmp	.+336    	; 0x189a <executeCommand+0xc58>
										}
									}
								}
								else{
									if(strstr(command,"LT")!= NULL){
    174a:	67 e4       	ldi	r22, 0x47	; 71
    174c:	79 eb       	ldi	r23, 0xB9	; 185
    174e:	c7 01       	movw	r24, r14
    1750:	0e 94 9d 1a 	call	0x353a	; 0x353a <strstr>
    1754:	89 2b       	or	r24, r25
    1756:	09 f4       	brne	.+2      	; 0x175a <executeCommand+0xb18>
    1758:	98 c0       	rjmp	.+304    	; 0x188a <executeCommand+0xc48>
										int dato = 0;
    175a:	19 82       	std	Y+1, r1	; 0x01
    175c:	1a 82       	std	Y+2, r1	; 0x02
										char *token = strtok(command, " ");
    175e:	68 e8       	ldi	r22, 0x88	; 136
    1760:	78 eb       	ldi	r23, 0xB8	; 184
    1762:	c7 01       	movw	r24, r14
    1764:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
										int i = 0;
										if(token != NULL){
    1768:	00 97       	sbiw	r24, 0x00	; 0
    176a:	01 f5       	brne	.+64     	; 0x17ac <executeCommand+0xb6a>
    176c:	23 c0       	rjmp	.+70     	; 0x17b4 <executeCommand+0xb72>
											while(token != NULL){
												switch(i){
    176e:	01 30       	cpi	r16, 0x01	; 1
    1770:	11 05       	cpc	r17, r1
    1772:	99 f4       	brne	.+38     	; 0x179a <executeCommand+0xb58>
													case 0:
													break;
													case 1:
														sscanf(token,"%d",&dato);
    1774:	9e 01       	movw	r18, r28
    1776:	2f 5f       	subi	r18, 0xFF	; 255
    1778:	3f 4f       	sbci	r19, 0xFF	; 255
    177a:	3f 93       	push	r19
    177c:	2f 93       	push	r18
    177e:	2a e8       	ldi	r18, 0x8A	; 138
    1780:	38 eb       	ldi	r19, 0xB8	; 184
    1782:	3f 93       	push	r19
    1784:	2f 93       	push	r18
    1786:	9f 93       	push	r25
    1788:	8f 93       	push	r24
    178a:	0e 94 6e 1b 	call	0x36dc	; 0x36dc <sscanf>
													break;
    178e:	0f 90       	pop	r0
    1790:	0f 90       	pop	r0
    1792:	0f 90       	pop	r0
    1794:	0f 90       	pop	r0
    1796:	0f 90       	pop	r0
    1798:	0f 90       	pop	r0
												}
												token = strtok(NULL, " ");
    179a:	68 e8       	ldi	r22, 0x88	; 136
    179c:	78 eb       	ldi	r23, 0xB8	; 184
    179e:	80 e0       	ldi	r24, 0x00	; 0
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	0e 94 75 1a 	call	0x34ea	; 0x34ea <strtok>
												i++;
    17a6:	0f 5f       	subi	r16, 0xFF	; 255
    17a8:	1f 4f       	sbci	r17, 0xFF	; 255
    17aa:	02 c0       	rjmp	.+4      	; 0x17b0 <executeCommand+0xb6e>
    17ac:	00 e0       	ldi	r16, 0x00	; 0
    17ae:	10 e0       	ldi	r17, 0x00	; 0
									if(strstr(command,"LT")!= NULL){
										int dato = 0;
										char *token = strtok(command, " ");
										int i = 0;
										if(token != NULL){
											while(token != NULL){
    17b0:	00 97       	sbiw	r24, 0x00	; 0
    17b2:	e9 f6       	brne	.-70     	; 0x176e <executeCommand+0xb2c>
												}
												token = strtok(NULL, " ");
												i++;
											}
										}
										if(dato == 10){
    17b4:	89 81       	ldd	r24, Y+1	; 0x01
    17b6:	9a 81       	ldd	r25, Y+2	; 0x02
    17b8:	8a 30       	cpi	r24, 0x0A	; 10
    17ba:	91 05       	cpc	r25, r1
    17bc:	c1 f4       	brne	.+48     	; 0x17ee <executeCommand+0xbac>
											write_EEPROM(5350,1);
    17be:	61 e0       	ldi	r22, 0x01	; 1
    17c0:	86 ee       	ldi	r24, 0xE6	; 230
    17c2:	94 e1       	ldi	r25, 0x14	; 20
    17c4:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
											printf("%s %d\r",command, dato);
    17c8:	8a 81       	ldd	r24, Y+2	; 0x02
    17ca:	8f 93       	push	r24
    17cc:	89 81       	ldd	r24, Y+1	; 0x01
    17ce:	8f 93       	push	r24
    17d0:	ff 92       	push	r15
    17d2:	ef 92       	push	r14
    17d4:	8a e4       	ldi	r24, 0x4A	; 74
    17d6:	99 eb       	ldi	r25, 0xB9	; 185
    17d8:	9f 93       	push	r25
    17da:	8f 93       	push	r24
    17dc:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    17e0:	0f 90       	pop	r0
    17e2:	0f 90       	pop	r0
    17e4:	0f 90       	pop	r0
    17e6:	0f 90       	pop	r0
    17e8:	0f 90       	pop	r0
    17ea:	0f 90       	pop	r0
    17ec:	56 c0       	rjmp	.+172    	; 0x189a <executeCommand+0xc58>
										}
										else{
											if(dato == 100){
    17ee:	84 36       	cpi	r24, 0x64	; 100
    17f0:	91 05       	cpc	r25, r1
    17f2:	c1 f4       	brne	.+48     	; 0x1824 <executeCommand+0xbe2>
												write_EEPROM(5350,2);
    17f4:	62 e0       	ldi	r22, 0x02	; 2
    17f6:	86 ee       	ldi	r24, 0xE6	; 230
    17f8:	94 e1       	ldi	r25, 0x14	; 20
    17fa:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
												printf("%s %d\r",command, dato);
    17fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1800:	8f 93       	push	r24
    1802:	89 81       	ldd	r24, Y+1	; 0x01
    1804:	8f 93       	push	r24
    1806:	ff 92       	push	r15
    1808:	ef 92       	push	r14
    180a:	8a e4       	ldi	r24, 0x4A	; 74
    180c:	99 eb       	ldi	r25, 0xB9	; 185
    180e:	9f 93       	push	r25
    1810:	8f 93       	push	r24
    1812:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1816:	0f 90       	pop	r0
    1818:	0f 90       	pop	r0
    181a:	0f 90       	pop	r0
    181c:	0f 90       	pop	r0
    181e:	0f 90       	pop	r0
    1820:	0f 90       	pop	r0
    1822:	3b c0       	rjmp	.+118    	; 0x189a <executeCommand+0xc58>
											}
											else{
												if(dato == 1000){
    1824:	88 3e       	cpi	r24, 0xE8	; 232
    1826:	93 40       	sbci	r25, 0x03	; 3
    1828:	c1 f4       	brne	.+48     	; 0x185a <executeCommand+0xc18>
													write_EEPROM(5350,3);
    182a:	63 e0       	ldi	r22, 0x03	; 3
    182c:	86 ee       	ldi	r24, 0xE6	; 230
    182e:	94 e1       	ldi	r25, 0x14	; 20
    1830:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
													printf("%s %d\r",command, dato);
    1834:	8a 81       	ldd	r24, Y+2	; 0x02
    1836:	8f 93       	push	r24
    1838:	89 81       	ldd	r24, Y+1	; 0x01
    183a:	8f 93       	push	r24
    183c:	ff 92       	push	r15
    183e:	ef 92       	push	r14
    1840:	8a e4       	ldi	r24, 0x4A	; 74
    1842:	99 eb       	ldi	r25, 0xB9	; 185
    1844:	9f 93       	push	r25
    1846:	8f 93       	push	r24
    1848:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    184c:	0f 90       	pop	r0
    184e:	0f 90       	pop	r0
    1850:	0f 90       	pop	r0
    1852:	0f 90       	pop	r0
    1854:	0f 90       	pop	r0
    1856:	0f 90       	pop	r0
    1858:	20 c0       	rjmp	.+64     	; 0x189a <executeCommand+0xc58>
												}
												else{
													write_EEPROM(5350,0);
    185a:	60 e0       	ldi	r22, 0x00	; 0
    185c:	86 ee       	ldi	r24, 0xE6	; 230
    185e:	94 e1       	ldi	r25, 0x14	; 20
    1860:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
													printf("%s %d\r",command, dato);
    1864:	8a 81       	ldd	r24, Y+2	; 0x02
    1866:	8f 93       	push	r24
    1868:	89 81       	ldd	r24, Y+1	; 0x01
    186a:	8f 93       	push	r24
    186c:	ff 92       	push	r15
    186e:	ef 92       	push	r14
    1870:	8a e4       	ldi	r24, 0x4A	; 74
    1872:	99 eb       	ldi	r25, 0xB9	; 185
    1874:	9f 93       	push	r25
    1876:	8f 93       	push	r24
    1878:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    187c:	0f 90       	pop	r0
    187e:	0f 90       	pop	r0
    1880:	0f 90       	pop	r0
    1882:	0f 90       	pop	r0
    1884:	0f 90       	pop	r0
    1886:	0f 90       	pop	r0
    1888:	08 c0       	rjmp	.+16     	; 0x189a <executeCommand+0xc58>
												}
											}
										}
									}
									else{
										printf("Incorrect Command\r");
    188a:	8c e2       	ldi	r24, 0x2C	; 44
    188c:	99 eb       	ldi	r25, 0xB9	; 185
    188e:	9f 93       	push	r25
    1890:	8f 93       	push	r24
    1892:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1896:	0f 90       	pop	r0
    1898:	0f 90       	pop	r0
				}
			}
		}
	}
	
}
    189a:	2c 96       	adiw	r28, 0x0c	; 12
    189c:	cd bf       	out	0x3d, r28	; 61
    189e:	de bf       	out	0x3e, r29	; 62
    18a0:	df 91       	pop	r29
    18a2:	cf 91       	pop	r28
    18a4:	1f 91       	pop	r17
    18a6:	0f 91       	pop	r16
    18a8:	ff 90       	pop	r15
    18aa:	ef 90       	pop	r14
    18ac:	08 95       	ret

000018ae <main>:
// ISR (PORTC_PORT_vect){
// 	PORTC_INTFLAGS |= PIN0_bm;
// }

int main(void)
{
    18ae:	cf 93       	push	r28
    18b0:	df 93       	push	r29
    18b2:	00 d0       	rcall	.+0      	; 0x18b4 <main+0x6>
    18b4:	00 d0       	rcall	.+0      	; 0x18b6 <main+0x8>
    18b6:	cd b7       	in	r28, 0x3d	; 61
    18b8:	de b7       	in	r29, 0x3e	; 62
	Flotante Pulsos;
    //int raw_press = 0;
	CLOCK32K_init();
    18ba:	0e 94 a7 01 	call	0x34e	; 0x34e <CLOCK32K_init>
	PORT_LOWPOWER_Init();
    18be:	0e 94 6e 01 	call	0x2dc	; 0x2dc <PORT_LOWPOWER_Init>
	PinInit();
    18c2:	0e 94 03 01 	call	0x206	; 0x206 <PinInit>
	ADC0_init();
    18c6:	0e 94 6d 02 	call	0x4da	; 0x4da <ADC0_init>
	
	//Activador 1er I2C
	PORTA.DIR |= PIN7_bm;
    18ca:	e0 e0       	ldi	r30, 0x00	; 0
    18cc:	f4 e0       	ldi	r31, 0x04	; 4
    18ce:	80 81       	ld	r24, Z
    18d0:	80 68       	ori	r24, 0x80	; 128
    18d2:	80 83       	st	Z, r24
	PORTA.PIN7CTRL &= ~PORT_PULLUPEN_bm;
    18d4:	87 89       	ldd	r24, Z+23	; 0x17
    18d6:	87 7f       	andi	r24, 0xF7	; 247
    18d8:	87 8b       	std	Z+23, r24	; 0x17
	PORTA.OUT &= ~PIN7_bm;
    18da:	84 81       	ldd	r24, Z+4	; 0x04
    18dc:	8f 77       	andi	r24, 0x7F	; 127
    18de:	84 83       	std	Z+4, r24	; 0x04
	
	//Activador 2do I2C
	PORTC.DIR |= PIN2_bm;
    18e0:	e0 e4       	ldi	r30, 0x40	; 64
    18e2:	f4 e0       	ldi	r31, 0x04	; 4
    18e4:	80 81       	ld	r24, Z
    18e6:	84 60       	ori	r24, 0x04	; 4
    18e8:	80 83       	st	Z, r24
	PORTC.PIN2CTRL &= ~PORT_PULLUPEN_bm;
    18ea:	82 89       	ldd	r24, Z+18	; 0x12
    18ec:	87 7f       	andi	r24, 0xF7	; 247
    18ee:	82 8b       	std	Z+18, r24	; 0x12
	PORTC.OUT &= ~PIN2_bm;
    18f0:	84 81       	ldd	r24, Z+4	; 0x04
    18f2:	8b 7f       	andi	r24, 0xFB	; 251
    18f4:	84 83       	std	Z+4, r24	; 0x04
	
	//Wake up pin
	PORTC.DIR &= ~(1<<0);
    18f6:	80 81       	ld	r24, Z
    18f8:	8e 7f       	andi	r24, 0xFE	; 254
    18fa:	80 83       	st	Z, r24
	PORTC.PIN0CTRL &= ~PORT_PULLUPEN_bm;
    18fc:	80 89       	ldd	r24, Z+16	; 0x10
    18fe:	87 7f       	andi	r24, 0xF7	; 247
    1900:	80 8b       	std	Z+16, r24	; 0x10
	PORTC.PIN0CTRL |= PORT_ISC_BOTHEDGES_gc;
    1902:	80 89       	ldd	r24, Z+16	; 0x10
    1904:	81 60       	ori	r24, 0x01	; 1
    1906:	80 8b       	std	Z+16, r24	; 0x10
	
	*(uint8_t *)(0x1400) = 0x0;
    1908:	10 92 00 14 	sts	0x1400, r1	; 0x801400 <__RODATA_PM_OFFSET__+0x7f9400>
	CPU_CCP = CCP_SPM_gc;
    190c:	8d e9       	ldi	r24, 0x9D	; 157
    190e:	84 bf       	out	0x34, r24	; 52
	NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
    1910:	83 e0       	ldi	r24, 0x03	; 3
    1912:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
		
	CPU_CCP = CCP_IOREG_gc;
    1916:	88 ed       	ldi	r24, 0xD8	; 216
    1918:	84 bf       	out	0x34, r24	; 52
	WDT.CTRLA = WDT_PERIOD_8KCLK_gc;
    191a:	8b e0       	ldi	r24, 0x0B	; 11
    191c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__RODATA_PM_OFFSET__+0x7f8100>
	memset(command, 0, MAX_COMMAND_LEN);
    1920:	82 e3       	ldi	r24, 0x32	; 50
    1922:	ee e0       	ldi	r30, 0x0E	; 14
    1924:	f8 e3       	ldi	r31, 0x38	; 56
    1926:	df 01       	movw	r26, r30
    1928:	1d 92       	st	X+, r1
    192a:	8a 95       	dec	r24
    192c:	e9 f7       	brne	.-6      	; 0x1928 <main+0x7a>

	//TCA0_init();
	USART0_init();
    192e:	0e 94 c3 01 	call	0x386	; 0x386 <USART0_init>
	
	TCB0_init();
    1932:	0e 94 c3 05 	call	0xb86	; 0xb86 <TCB0_init>
	TCB0_start();
    1936:	0e 94 ce 05 	call	0xb9c	; 0xb9c <TCB0_start>
	
	
	
	sei();
    193a:	78 94       	sei
    193c:	e3 e3       	ldi	r30, 0x33	; 51
    193e:	f3 e0       	ldi	r31, 0x03	; 3
    1940:	31 97       	sbiw	r30, 0x01	; 1
    1942:	f1 f7       	brne	.-4      	; 0x1940 <main+0x92>
	
	//write_EEPROM(5120,0x00);
	_delay_ms(100);
	printf("Ayuda\r");
    1944:	81 e5       	ldi	r24, 0x51	; 81
    1946:	99 eb       	ldi	r25, 0xB9	; 185
    1948:	9f 93       	push	r25
    194a:	8f 93       	push	r24
    194c:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1950:	0f 90       	pop	r0
    1952:	0f 90       	pop	r0
    /* Replace with your application code */
    while (1) 
    {
		if(seconds >= 60){
    1954:	80 91 5e 38 	lds	r24, 0x385E	; 0x80385e <seconds>
    1958:	90 91 5f 38 	lds	r25, 0x385F	; 0x80385f <seconds+0x1>
    195c:	cc 97       	sbiw	r24, 0x3c	; 60
    195e:	58 f1       	brcs	.+86     	; 0x19b6 <main+0x108>
			ADC0.CTRLA = (0 << ADC_ENABLE_bp);
    1960:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__RODATA_PM_OFFSET__+0x7f8600>
			TCA0.SPLIT.CTRLA = 0;
    1964:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__RODATA_PM_OFFSET__+0x7f8a00>
			TCB0.CTRLA = 0;
    1968:	10 92 80 0a 	sts	0x0A80, r1	; 0x800a80 <__RODATA_PM_OFFSET__+0x7f8a80>
			RTC.CTRLA = 0;
    196c:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__RODATA_PM_OFFSET__+0x7f8140>
			wdt_reset();
    1970:	a8 95       	wdr
			if(verbose == 1){
    1972:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    1976:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    197a:	01 97       	sbiw	r24, 0x01	; 1
    197c:	41 f4       	brne	.+16     	; 0x198e <main+0xe0>
				printf("Me Duermo\r");		
    197e:	88 e5       	ldi	r24, 0x58	; 88
    1980:	99 eb       	ldi	r25, 0xB9	; 185
    1982:	9f 93       	push	r25
    1984:	8f 93       	push	r24
    1986:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    198a:	0f 90       	pop	r0
    198c:	0f 90       	pop	r0
			}
			TCB0_stop();
    198e:	0e 94 d6 05 	call	0xbac	; 0xbac <TCB0_stop>
    1992:	86 e6       	ldi	r24, 0x66	; 102
    1994:	96 e0       	ldi	r25, 0x06	; 6
    1996:	01 97       	sbiw	r24, 0x01	; 1
    1998:	f1 f7       	brne	.-4      	; 0x1996 <main+0xe8>
    199a:	00 00       	nop
			//printf("SM\r");
			_delay_ms(200);
			Sleep_Micro();
    199c:	0e 94 93 01 	call	0x326	; 0x326 <Sleep_Micro>
    19a0:	a6 e6       	ldi	r26, 0x66	; 102
    19a2:	b6 e0       	ldi	r27, 0x06	; 6
    19a4:	11 97       	sbiw	r26, 0x01	; 1
    19a6:	f1 f7       	brne	.-4      	; 0x19a4 <main+0xf6>
    19a8:	00 00       	nop
			_delay_ms(200);
			send = 0;
    19aa:	10 92 5c 38 	sts	0x385C, r1	; 0x80385c <send>
    19ae:	10 92 5d 38 	sts	0x385D, r1	; 0x80385d <send+0x1>
			TCB0_start();	
    19b2:	0e 94 ce 05 	call	0xb9c	; 0xb9c <TCB0_start>
		}
		if(flag == 1){
    19b6:	80 91 6e 38 	lds	r24, 0x386E	; 0x80386e <flag>
    19ba:	90 91 6f 38 	lds	r25, 0x386F	; 0x80386f <flag+0x1>
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	09 f0       	breq	.+2      	; 0x19c4 <main+0x116>
    19c2:	57 c0       	rjmp	.+174    	; 0x1a72 <main+0x1c4>
			//printf("Comando 1: %s", command1);
			executeCommand(command1);
    19c4:	85 ed       	ldi	r24, 0xD5	; 213
    19c6:	98 e3       	ldi	r25, 0x38	; 56
    19c8:	0e 94 21 06 	call	0xc42	; 0xc42 <executeCommand>
			if(strcmp(command2,"\0") != 0 && strcmp(command3,"\0") != 0){
    19cc:	80 91 a3 38 	lds	r24, 0x38A3	; 0x8038a3 <command2>
    19d0:	88 23       	and	r24, r24
    19d2:	41 f1       	breq	.+80     	; 0x1a24 <main+0x176>
    19d4:	90 91 71 38 	lds	r25, 0x3871	; 0x803871 <command3>
    19d8:	99 23       	and	r25, r25
    19da:	21 f1       	breq	.+72     	; 0x1a24 <main+0x176>
				memset(command1, 0, MAX_COMMAND_LEN);
    19dc:	12 e3       	ldi	r17, 0x32	; 50
    19de:	e5 ed       	ldi	r30, 0xD5	; 213
    19e0:	f8 e3       	ldi	r31, 0x38	; 56
    19e2:	df 01       	movw	r26, r30
    19e4:	21 2f       	mov	r18, r17
    19e6:	1d 92       	st	X+, r1
    19e8:	2a 95       	dec	r18
    19ea:	e9 f7       	brne	.-6      	; 0x19e6 <main+0x138>
				strncpy(command1,command2,MAX_COMMAND_LEN);
    19ec:	42 e3       	ldi	r20, 0x32	; 50
    19ee:	50 e0       	ldi	r21, 0x00	; 0
    19f0:	63 ea       	ldi	r22, 0xA3	; 163
    19f2:	78 e3       	ldi	r23, 0x38	; 56
    19f4:	cf 01       	movw	r24, r30
    19f6:	0e 94 83 1a 	call	0x3506	; 0x3506 <strncpy>
				memset(command2, 0, MAX_COMMAND_LEN);
    19fa:	e3 ea       	ldi	r30, 0xA3	; 163
    19fc:	f8 e3       	ldi	r31, 0x38	; 56
    19fe:	df 01       	movw	r26, r30
    1a00:	21 2f       	mov	r18, r17
    1a02:	1d 92       	st	X+, r1
    1a04:	2a 95       	dec	r18
    1a06:	e9 f7       	brne	.-6      	; 0x1a02 <main+0x154>
				strncpy(command2,command3,MAX_COMMAND_LEN);
    1a08:	42 e3       	ldi	r20, 0x32	; 50
    1a0a:	50 e0       	ldi	r21, 0x00	; 0
    1a0c:	61 e7       	ldi	r22, 0x71	; 113
    1a0e:	78 e3       	ldi	r23, 0x38	; 56
    1a10:	cf 01       	movw	r24, r30
    1a12:	0e 94 83 1a 	call	0x3506	; 0x3506 <strncpy>
				memset(command3, 0, MAX_COMMAND_LEN);
    1a16:	e1 e7       	ldi	r30, 0x71	; 113
    1a18:	f8 e3       	ldi	r31, 0x38	; 56
    1a1a:	df 01       	movw	r26, r30
    1a1c:	1d 92       	st	X+, r1
    1a1e:	1a 95       	dec	r17
    1a20:	e9 f7       	brne	.-6      	; 0x1a1c <main+0x16e>
    1a22:	27 c0       	rjmp	.+78     	; 0x1a72 <main+0x1c4>
				//printf("Comando1: %s, Comando2 %s, Comando3 %s\r",command1,command2,command3);
			}
			else{
				if(strcmp(command2,"\0") != 0 && strcmp(command3,"\0") == 0){
    1a24:	88 23       	and	r24, r24
    1a26:	d1 f0       	breq	.+52     	; 0x1a5c <main+0x1ae>
    1a28:	80 91 71 38 	lds	r24, 0x3871	; 0x803871 <command3>
    1a2c:	81 11       	cpse	r24, r1
    1a2e:	16 c0       	rjmp	.+44     	; 0x1a5c <main+0x1ae>
					//executeCommand(command1);
					memset(command1, 0, MAX_COMMAND_LEN);
    1a30:	12 e3       	ldi	r17, 0x32	; 50
    1a32:	e5 ed       	ldi	r30, 0xD5	; 213
    1a34:	f8 e3       	ldi	r31, 0x38	; 56
    1a36:	df 01       	movw	r26, r30
    1a38:	21 2f       	mov	r18, r17
    1a3a:	1d 92       	st	X+, r1
    1a3c:	2a 95       	dec	r18
    1a3e:	e9 f7       	brne	.-6      	; 0x1a3a <main+0x18c>
					strncpy(command1,command2,MAX_COMMAND_LEN);
    1a40:	42 e3       	ldi	r20, 0x32	; 50
    1a42:	50 e0       	ldi	r21, 0x00	; 0
    1a44:	63 ea       	ldi	r22, 0xA3	; 163
    1a46:	78 e3       	ldi	r23, 0x38	; 56
    1a48:	cf 01       	movw	r24, r30
    1a4a:	0e 94 83 1a 	call	0x3506	; 0x3506 <strncpy>
					memset(command2, 0, MAX_COMMAND_LEN);
    1a4e:	e3 ea       	ldi	r30, 0xA3	; 163
    1a50:	f8 e3       	ldi	r31, 0x38	; 56
    1a52:	df 01       	movw	r26, r30
    1a54:	1d 92       	st	X+, r1
    1a56:	1a 95       	dec	r17
    1a58:	e9 f7       	brne	.-6      	; 0x1a54 <main+0x1a6>
    1a5a:	0b c0       	rjmp	.+22     	; 0x1a72 <main+0x1c4>
					//printf("Comando1: %s, Comando2 %s, Comando3 %s\r",command1,command2,command3); 
				}
				else{
					//executeCommand(command1);
					//eraseCommand(command1);
					memset(command1, 0, MAX_COMMAND_LEN);
    1a5c:	82 e3       	ldi	r24, 0x32	; 50
    1a5e:	e5 ed       	ldi	r30, 0xD5	; 213
    1a60:	f8 e3       	ldi	r31, 0x38	; 56
    1a62:	df 01       	movw	r26, r30
    1a64:	1d 92       	st	X+, r1
    1a66:	8a 95       	dec	r24
    1a68:	e9 f7       	brne	.-6      	; 0x1a64 <main+0x1b6>
					//printf("ComandoE 1: %s", command1);
					flag = 0;
    1a6a:	10 92 6e 38 	sts	0x386E, r1	; 0x80386e <flag>
    1a6e:	10 92 6f 38 	sts	0x386F, r1	; 0x80386f <flag+0x1>
				}
			}
		}
		if(flujo != 0){
    1a72:	80 91 46 38 	lds	r24, 0x3846	; 0x803846 <flujo>
    1a76:	90 91 47 38 	lds	r25, 0x3847	; 0x803847 <flujo+0x1>
    1a7a:	89 2b       	or	r24, r25
    1a7c:	09 f4       	brne	.+2      	; 0x1a80 <main+0x1d2>
    1a7e:	8c c0       	rjmp	.+280    	; 0x1b98 <main+0x2ea>
			if(hr >= hora_acumulado){
    1a80:	80 91 68 38 	lds	r24, 0x3868	; 0x803868 <hr>
    1a84:	90 91 69 38 	lds	r25, 0x3869	; 0x803869 <hr+0x1>
    1a88:	80 32       	cpi	r24, 0x20	; 32
    1a8a:	9c 41       	sbci	r25, 0x1C	; 28
    1a8c:	0c f4       	brge	.+2      	; 0x1a90 <main+0x1e2>
    1a8e:	84 c0       	rjmp	.+264    	; 0x1b98 <main+0x2ea>
				wdt_reset();
    1a90:	a8 95       	wdr
				int move = read_EEPROM(5351)*4;//*(uint8_t*)(5363)*4;
    1a92:	87 ee       	ldi	r24, 0xE7	; 231
    1a94:	94 e1       	ldi	r25, 0x14	; 20
    1a96:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1a9a:	e8 2e       	mov	r14, r24
    1a9c:	f1 2c       	mov	r15, r1
    1a9e:	ee 0c       	add	r14, r14
    1aa0:	ff 1c       	adc	r15, r15
    1aa2:	ee 0c       	add	r14, r14
    1aa4:	ff 1c       	adc	r15, r15
				int entrada = read_EEPROM(5350);
    1aa6:	86 ee       	ldi	r24, 0xE6	; 230
    1aa8:	94 e1       	ldi	r25, 0x14	; 20
    1aaa:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
				int multiplicador = 0;
				switch(entrada){
    1aae:	82 30       	cpi	r24, 0x02	; 2
    1ab0:	a9 f0       	breq	.+42     	; 0x1adc <main+0x22e>
    1ab2:	83 30       	cpi	r24, 0x03	; 3
    1ab4:	41 f0       	breq	.+16     	; 0x1ac6 <main+0x218>
    1ab6:	81 30       	cpi	r24, 0x01	; 1
    1ab8:	69 f4       	brne	.+26     	; 0x1ad4 <main+0x226>
					case 1:
						multiplicador = 10;
    1aba:	0f 2e       	mov	r0, r31
    1abc:	fa e0       	ldi	r31, 0x0A	; 10
    1abe:	cf 2e       	mov	r12, r31
    1ac0:	d1 2c       	mov	r13, r1
    1ac2:	f0 2d       	mov	r31, r0
    1ac4:	10 c0       	rjmp	.+32     	; 0x1ae6 <main+0x238>
						break;
					case 2:
						multiplicador = 100;
						break;
					case 3:
						multiplicador = 1000;
    1ac6:	0f 2e       	mov	r0, r31
    1ac8:	f8 ee       	ldi	r31, 0xE8	; 232
    1aca:	cf 2e       	mov	r12, r31
    1acc:	f3 e0       	ldi	r31, 0x03	; 3
    1ace:	df 2e       	mov	r13, r31
    1ad0:	f0 2d       	mov	r31, r0
						break;
    1ad2:	09 c0       	rjmp	.+18     	; 0x1ae6 <main+0x238>
					default:
						multiplicador = 1;
    1ad4:	cc 24       	eor	r12, r12
    1ad6:	c3 94       	inc	r12
    1ad8:	d1 2c       	mov	r13, r1
					break;
    1ada:	05 c0       	rjmp	.+10     	; 0x1ae6 <main+0x238>
				switch(entrada){
					case 1:
						multiplicador = 10;
						break;
					case 2:
						multiplicador = 100;
    1adc:	0f 2e       	mov	r0, r31
    1ade:	f4 e6       	ldi	r31, 0x64	; 100
    1ae0:	cf 2e       	mov	r12, r31
    1ae2:	d1 2c       	mov	r13, r1
    1ae4:	f0 2d       	mov	r31, r0
						break;
					default:
						multiplicador = 1;
					break;
				}
				for(int i=0; i<=3; i++){
    1ae6:	00 e0       	ldi	r16, 0x00	; 0
    1ae8:	10 e0       	ldi	r17, 0x00	; 0
    1aea:	0f c0       	rjmp	.+30     	; 0x1b0a <main+0x25c>
					Pulsos.dato[i] = read_EEPROM(i+move+5120);//*(uint8_t *)(i+move+5120);
    1aec:	c8 01       	movw	r24, r16
    1aee:	8e 0d       	add	r24, r14
    1af0:	9f 1d       	adc	r25, r15
    1af2:	9c 5e       	subi	r25, 0xEC	; 236
    1af4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1af8:	e1 e0       	ldi	r30, 0x01	; 1
    1afa:	f0 e0       	ldi	r31, 0x00	; 0
    1afc:	ec 0f       	add	r30, r28
    1afe:	fd 1f       	adc	r31, r29
    1b00:	e0 0f       	add	r30, r16
    1b02:	f1 1f       	adc	r31, r17
    1b04:	80 83       	st	Z, r24
						break;
					default:
						multiplicador = 1;
					break;
				}
				for(int i=0; i<=3; i++){
    1b06:	0f 5f       	subi	r16, 0xFF	; 255
    1b08:	1f 4f       	sbci	r17, 0xFF	; 255
    1b0a:	04 30       	cpi	r16, 0x04	; 4
    1b0c:	11 05       	cpc	r17, r1
    1b0e:	74 f3       	brlt	.-36     	; 0x1aec <main+0x23e>
					Pulsos.dato[i] = read_EEPROM(i+move+5120);//*(uint8_t *)(i+move+5120);
				}
				//printf("Guardado en %d:",move+5120);
				Pulsos.f += (float)count*multiplicador/1000;
    1b10:	60 91 66 38 	lds	r22, 0x3866	; 0x803866 <count>
    1b14:	70 91 67 38 	lds	r23, 0x3867	; 0x803867 <count+0x1>
    1b18:	80 e0       	ldi	r24, 0x00	; 0
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	0e 94 96 10 	call	0x212c	; 0x212c <__floatunsisf>
    1b20:	4b 01       	movw	r8, r22
    1b22:	5c 01       	movw	r10, r24
    1b24:	b6 01       	movw	r22, r12
    1b26:	dd 0c       	add	r13, r13
    1b28:	88 0b       	sbc	r24, r24
    1b2a:	99 0b       	sbc	r25, r25
    1b2c:	0e 94 98 10 	call	0x2130	; 0x2130 <__floatsisf>
    1b30:	a5 01       	movw	r20, r10
    1b32:	94 01       	movw	r18, r8
    1b34:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
    1b38:	20 e0       	ldi	r18, 0x00	; 0
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	4a e7       	ldi	r20, 0x7A	; 122
    1b3e:	54 e4       	ldi	r21, 0x44	; 68
    1b40:	0e 94 24 10 	call	0x2048	; 0x2048 <__divsf3>
    1b44:	9b 01       	movw	r18, r22
    1b46:	ac 01       	movw	r20, r24
    1b48:	69 81       	ldd	r22, Y+1	; 0x01
    1b4a:	7a 81       	ldd	r23, Y+2	; 0x02
    1b4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b50:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <__addsf3>
    1b54:	69 83       	std	Y+1, r22	; 0x01
    1b56:	7a 83       	std	Y+2, r23	; 0x02
    1b58:	8b 83       	std	Y+3, r24	; 0x03
    1b5a:	9c 83       	std	Y+4, r25	; 0x04
				for(int i=0; i<=3; i++){
    1b5c:	00 e0       	ldi	r16, 0x00	; 0
    1b5e:	10 e0       	ldi	r17, 0x00	; 0
    1b60:	0f c0       	rjmp	.+30     	; 0x1b80 <main+0x2d2>
					write_EEPROM(i+move+5120,Pulsos.dato[i]);
    1b62:	c8 01       	movw	r24, r16
    1b64:	8e 0d       	add	r24, r14
    1b66:	9f 1d       	adc	r25, r15
    1b68:	e1 e0       	ldi	r30, 0x01	; 1
    1b6a:	f0 e0       	ldi	r31, 0x00	; 0
    1b6c:	ec 0f       	add	r30, r28
    1b6e:	fd 1f       	adc	r31, r29
    1b70:	e0 0f       	add	r30, r16
    1b72:	f1 1f       	adc	r31, r17
    1b74:	60 81       	ld	r22, Z
    1b76:	9c 5e       	subi	r25, 0xEC	; 236
    1b78:	0e 94 62 02 	call	0x4c4	; 0x4c4 <write_EEPROM>
				for(int i=0; i<=3; i++){
					Pulsos.dato[i] = read_EEPROM(i+move+5120);//*(uint8_t *)(i+move+5120);
				}
				//printf("Guardado en %d:",move+5120);
				Pulsos.f += (float)count*multiplicador/1000;
				for(int i=0; i<=3; i++){
    1b7c:	0f 5f       	subi	r16, 0xFF	; 255
    1b7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b80:	04 30       	cpi	r16, 0x04	; 4
    1b82:	11 05       	cpc	r17, r1
    1b84:	74 f3       	brlt	.-36     	; 0x1b62 <main+0x2b4>
					write_EEPROM(i+move+5120,Pulsos.dato[i]);
				}
				hr = 0;
    1b86:	10 92 68 38 	sts	0x3868, r1	; 0x803868 <hr>
    1b8a:	10 92 69 38 	sts	0x3869, r1	; 0x803869 <hr+0x1>
				count = 0;
    1b8e:	10 92 66 38 	sts	0x3866, r1	; 0x803866 <count>
    1b92:	10 92 67 38 	sts	0x3867, r1	; 0x803867 <count+0x1>
				wdt_reset();
    1b96:	a8 95       	wdr
			}
		}
		if(send == 0){
    1b98:	80 91 5c 38 	lds	r24, 0x385C	; 0x80385c <send>
    1b9c:	90 91 5d 38 	lds	r25, 0x385D	; 0x80385d <send+0x1>
    1ba0:	89 2b       	or	r24, r25
    1ba2:	09 f0       	breq	.+2      	; 0x1ba6 <main+0x2f8>
    1ba4:	dc c1       	rjmp	.+952    	; 0x1f5e <main+0x6b0>
			switch(read_EEPROM(5348)){
    1ba6:	84 ee       	ldi	r24, 0xE4	; 228
    1ba8:	94 e1       	ldi	r25, 0x14	; 20
    1baa:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1bae:	89 34       	cpi	r24, 0x49	; 73
    1bb0:	09 f4       	brne	.+2      	; 0x1bb4 <main+0x306>
    1bb2:	42 c0       	rjmp	.+132    	; 0x1c38 <main+0x38a>
    1bb4:	20 f4       	brcc	.+8      	; 0x1bbe <main+0x310>
    1bb6:	81 34       	cpi	r24, 0x41	; 65
    1bb8:	09 f4       	brne	.+2      	; 0x1bbc <main+0x30e>
    1bba:	c8 c0       	rjmp	.+400    	; 0x1d4c <main+0x49e>
    1bbc:	cd c0       	rjmp	.+410    	; 0x1d58 <main+0x4aa>
    1bbe:	80 35       	cpi	r24, 0x50	; 80
    1bc0:	09 f4       	brne	.+2      	; 0x1bc4 <main+0x316>
    1bc2:	78 c0       	rjmp	.+240    	; 0x1cb4 <main+0x406>
    1bc4:	89 36       	cpi	r24, 0x69	; 105
    1bc6:	09 f0       	breq	.+2      	; 0x1bca <main+0x31c>
    1bc8:	c7 c0       	rjmp	.+398    	; 0x1d58 <main+0x4aa>
				case 'i':
					PORTA.OUT |= PIN7_bm;
    1bca:	00 e0       	ldi	r16, 0x00	; 0
    1bcc:	14 e0       	ldi	r17, 0x04	; 4
    1bce:	f8 01       	movw	r30, r16
    1bd0:	84 81       	ldd	r24, Z+4	; 0x04
    1bd2:	80 68       	ori	r24, 0x80	; 128
    1bd4:	84 83       	std	Z+4, r24	; 0x04
					PORTA.OUT |= PIN3_bm;
    1bd6:	84 81       	ldd	r24, Z+4	; 0x04
    1bd8:	88 60       	ori	r24, 0x08	; 8
    1bda:	84 83       	std	Z+4, r24	; 0x04
    1bdc:	8f ef       	ldi	r24, 0xFF	; 255
    1bde:	9f e1       	ldi	r25, 0x1F	; 31
    1be0:	01 97       	sbiw	r24, 0x01	; 1
    1be2:	f1 f7       	brne	.-4      	; 0x1be0 <main+0x332>
    1be4:	00 c0       	rjmp	.+0      	; 0x1be6 <main+0x338>
    1be6:	00 00       	nop
					_delay_ms(1000);
					wdt_reset();
    1be8:	a8 95       	wdr
					presion1 = get_PressureI2C(get_I2CValue(verbose),1);
    1bea:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    1bee:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    1bf2:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    1bf6:	61 e0       	ldi	r22, 0x01	; 1
    1bf8:	70 e0       	ldi	r23, 0x00	; 0
    1bfa:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    1bfe:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    1c02:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    1c06:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    1c0a:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
					PORTA.OUT &= ~PIN7_bm;
    1c0e:	d8 01       	movw	r26, r16
    1c10:	14 96       	adiw	r26, 0x04	; 4
    1c12:	8c 91       	ld	r24, X
    1c14:	14 97       	sbiw	r26, 0x04	; 4
    1c16:	8f 77       	andi	r24, 0x7F	; 127
    1c18:	14 96       	adiw	r26, 0x04	; 4
    1c1a:	8c 93       	st	X, r24
    1c1c:	14 97       	sbiw	r26, 0x04	; 4
					PORTA.OUT &= ~PIN3_bm;
    1c1e:	14 96       	adiw	r26, 0x04	; 4
    1c20:	8c 91       	ld	r24, X
    1c22:	14 97       	sbiw	r26, 0x04	; 4
    1c24:	87 7f       	andi	r24, 0xF7	; 247
    1c26:	14 96       	adiw	r26, 0x04	; 4
    1c28:	8c 93       	st	X, r24
    1c2a:	ef ef       	ldi	r30, 0xFF	; 255
    1c2c:	ff e1       	ldi	r31, 0x1F	; 31
    1c2e:	31 97       	sbiw	r30, 0x01	; 1
    1c30:	f1 f7       	brne	.-4      	; 0x1c2e <main+0x380>
    1c32:	00 c0       	rjmp	.+0      	; 0x1c34 <main+0x386>
    1c34:	00 00       	nop
    1c36:	90 c0       	rjmp	.+288    	; 0x1d58 <main+0x4aa>
					_delay_ms(1000);
				break;
				case 'I':
					PORTA.OUT |= PIN7_bm;
    1c38:	00 e0       	ldi	r16, 0x00	; 0
    1c3a:	14 e0       	ldi	r17, 0x04	; 4
    1c3c:	d8 01       	movw	r26, r16
    1c3e:	14 96       	adiw	r26, 0x04	; 4
    1c40:	8c 91       	ld	r24, X
    1c42:	14 97       	sbiw	r26, 0x04	; 4
    1c44:	80 68       	ori	r24, 0x80	; 128
    1c46:	14 96       	adiw	r26, 0x04	; 4
    1c48:	8c 93       	st	X, r24
    1c4a:	14 97       	sbiw	r26, 0x04	; 4
					PORTA.OUT |= PIN3_bm;
    1c4c:	14 96       	adiw	r26, 0x04	; 4
    1c4e:	8c 91       	ld	r24, X
    1c50:	14 97       	sbiw	r26, 0x04	; 4
    1c52:	88 60       	ori	r24, 0x08	; 8
    1c54:	14 96       	adiw	r26, 0x04	; 4
    1c56:	8c 93       	st	X, r24
    1c58:	ef ef       	ldi	r30, 0xFF	; 255
    1c5a:	ff e1       	ldi	r31, 0x1F	; 31
    1c5c:	31 97       	sbiw	r30, 0x01	; 1
    1c5e:	f1 f7       	brne	.-4      	; 0x1c5c <main+0x3ae>
    1c60:	00 c0       	rjmp	.+0      	; 0x1c62 <main+0x3b4>
    1c62:	00 00       	nop
					_delay_ms(1000);
					wdt_reset();
    1c64:	a8 95       	wdr
					presion1 = get_PressureI2C(get_I2CValue(verbose),2);
    1c66:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    1c6a:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    1c6e:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    1c72:	62 e0       	ldi	r22, 0x02	; 2
    1c74:	70 e0       	ldi	r23, 0x00	; 0
    1c76:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    1c7a:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    1c7e:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    1c82:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    1c86:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
					PORTA.OUT &= ~PIN7_bm;
    1c8a:	d8 01       	movw	r26, r16
    1c8c:	14 96       	adiw	r26, 0x04	; 4
    1c8e:	8c 91       	ld	r24, X
    1c90:	14 97       	sbiw	r26, 0x04	; 4
    1c92:	8f 77       	andi	r24, 0x7F	; 127
    1c94:	14 96       	adiw	r26, 0x04	; 4
    1c96:	8c 93       	st	X, r24
    1c98:	14 97       	sbiw	r26, 0x04	; 4
					PORTA.OUT &= ~PIN3_bm;
    1c9a:	14 96       	adiw	r26, 0x04	; 4
    1c9c:	8c 91       	ld	r24, X
    1c9e:	14 97       	sbiw	r26, 0x04	; 4
    1ca0:	87 7f       	andi	r24, 0xF7	; 247
    1ca2:	14 96       	adiw	r26, 0x04	; 4
    1ca4:	8c 93       	st	X, r24
    1ca6:	ef ef       	ldi	r30, 0xFF	; 255
    1ca8:	ff e1       	ldi	r31, 0x1F	; 31
    1caa:	31 97       	sbiw	r30, 0x01	; 1
    1cac:	f1 f7       	brne	.-4      	; 0x1caa <main+0x3fc>
    1cae:	00 c0       	rjmp	.+0      	; 0x1cb0 <main+0x402>
    1cb0:	00 00       	nop
    1cb2:	52 c0       	rjmp	.+164    	; 0x1d58 <main+0x4aa>
					_delay_ms(1000);
				break;
				case 'P':
					PORTB.OUT |= PIN5_bm;
    1cb4:	e0 e2       	ldi	r30, 0x20	; 32
    1cb6:	f4 e0       	ldi	r31, 0x04	; 4
    1cb8:	84 81       	ldd	r24, Z+4	; 0x04
    1cba:	80 62       	ori	r24, 0x20	; 32
    1cbc:	84 83       	std	Z+4, r24	; 0x04
    1cbe:	80 e0       	ldi	r24, 0x00	; 0
    1cc0:	90 e6       	ldi	r25, 0x60	; 96
    1cc2:	01 97       	sbiw	r24, 0x01	; 1
    1cc4:	f1 f7       	brne	.-4      	; 0x1cc2 <main+0x414>
					_delay_ms(3000);
					//count = 0;
					wdt_reset();
    1cc6:	a8 95       	wdr
					vol1 = get_Voltage(9); //2 segundos
    1cc8:	89 e0       	ldi	r24, 0x09	; 9
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	0e 94 84 02 	call	0x508	; 0x508 <get_Voltage>
    1cd0:	a6 2f       	mov	r26, r22
    1cd2:	b7 2f       	mov	r27, r23
    1cd4:	46 2f       	mov	r20, r22
    1cd6:	57 2f       	mov	r21, r23
    1cd8:	68 2f       	mov	r22, r24
    1cda:	79 2f       	mov	r23, r25
    1cdc:	40 93 58 38 	sts	0x3858, r20	; 0x803858 <vol1>
    1ce0:	50 93 59 38 	sts	0x3859, r21	; 0x803859 <vol1+0x1>
    1ce4:	60 93 5a 38 	sts	0x385A, r22	; 0x80385a <vol1+0x2>
    1ce8:	70 93 5b 38 	sts	0x385B, r23	; 0x80385b <vol1+0x3>
					if(verbose == 1){
    1cec:	20 91 6c 38 	lds	r18, 0x386C	; 0x80386c <verbose>
    1cf0:	30 91 6d 38 	lds	r19, 0x386D	; 0x80386d <verbose+0x1>
    1cf4:	21 30       	cpi	r18, 0x01	; 1
    1cf6:	31 05       	cpc	r19, r1
    1cf8:	81 f4       	brne	.+32     	; 0x1d1a <main+0x46c>
						printf("Voltaje Sensor1: %f\r",vol1);
    1cfa:	9f 93       	push	r25
    1cfc:	8f 93       	push	r24
    1cfe:	bf 93       	push	r27
    1d00:	af 93       	push	r26
    1d02:	86 ea       	ldi	r24, 0xA6	; 166
    1d04:	98 eb       	ldi	r25, 0xB8	; 184
    1d06:	9f 93       	push	r25
    1d08:	8f 93       	push	r24
    1d0a:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1d0e:	0f 90       	pop	r0
    1d10:	0f 90       	pop	r0
    1d12:	0f 90       	pop	r0
    1d14:	0f 90       	pop	r0
    1d16:	0f 90       	pop	r0
    1d18:	0f 90       	pop	r0
					}
					presion1 = get_PresureADC1(vol1);
    1d1a:	60 91 58 38 	lds	r22, 0x3858	; 0x803858 <vol1>
    1d1e:	70 91 59 38 	lds	r23, 0x3859	; 0x803859 <vol1+0x1>
    1d22:	80 91 5a 38 	lds	r24, 0x385A	; 0x80385a <vol1+0x2>
    1d26:	90 91 5b 38 	lds	r25, 0x385B	; 0x80385b <vol1+0x3>
    1d2a:	0e 94 2c 04 	call	0x858	; 0x858 <get_PresureADC1>
    1d2e:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    1d32:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    1d36:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    1d3a:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
					wdt_reset();
    1d3e:	a8 95       	wdr
				
					PORTB.OUT &= ~PIN5_bm;
    1d40:	e0 e2       	ldi	r30, 0x20	; 32
    1d42:	f4 e0       	ldi	r31, 0x04	; 4
    1d44:	84 81       	ldd	r24, Z+4	; 0x04
    1d46:	8f 7d       	andi	r24, 0xDF	; 223
    1d48:	84 83       	std	Z+4, r24	; 0x04
				break;
    1d4a:	06 c0       	rjmp	.+12     	; 0x1d58 <main+0x4aa>
				case 'A':
					s1 = 1;
    1d4c:	81 e0       	ldi	r24, 0x01	; 1
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	80 93 44 38 	sts	0x3844, r24	; 0x803844 <s1>
    1d54:	90 93 45 38 	sts	0x3845, r25	; 0x803845 <s1+0x1>
				break;
			}
			switch(read_EEPROM(5349)){
    1d58:	85 ee       	ldi	r24, 0xE5	; 229
    1d5a:	94 e1       	ldi	r25, 0x14	; 20
    1d5c:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <read_EEPROM>
    1d60:	89 34       	cpi	r24, 0x49	; 73
    1d62:	09 f4       	brne	.+2      	; 0x1d66 <main+0x4b8>
    1d64:	49 c0       	rjmp	.+146    	; 0x1df8 <main+0x54a>
    1d66:	20 f4       	brcc	.+8      	; 0x1d70 <main+0x4c2>
    1d68:	81 34       	cpi	r24, 0x41	; 65
    1d6a:	09 f4       	brne	.+2      	; 0x1d6e <main+0x4c0>
    1d6c:	cf c0       	rjmp	.+414    	; 0x1f0c <main+0x65e>
    1d6e:	d4 c0       	rjmp	.+424    	; 0x1f18 <main+0x66a>
    1d70:	80 35       	cpi	r24, 0x50	; 80
    1d72:	09 f4       	brne	.+2      	; 0x1d76 <main+0x4c8>
    1d74:	7f c0       	rjmp	.+254    	; 0x1e74 <main+0x5c6>
    1d76:	89 36       	cpi	r24, 0x69	; 105
    1d78:	09 f0       	breq	.+2      	; 0x1d7c <main+0x4ce>
    1d7a:	ce c0       	rjmp	.+412    	; 0x1f18 <main+0x66a>
				case 'i':
					PORTA.OUT |= PIN7_bm;
    1d7c:	00 e0       	ldi	r16, 0x00	; 0
    1d7e:	14 e0       	ldi	r17, 0x04	; 4
    1d80:	d8 01       	movw	r26, r16
    1d82:	14 96       	adiw	r26, 0x04	; 4
    1d84:	8c 91       	ld	r24, X
    1d86:	14 97       	sbiw	r26, 0x04	; 4
    1d88:	80 68       	ori	r24, 0x80	; 128
    1d8a:	14 96       	adiw	r26, 0x04	; 4
    1d8c:	8c 93       	st	X, r24
    1d8e:	14 97       	sbiw	r26, 0x04	; 4
					PORTA.OUT |= PIN3_bm;
    1d90:	14 96       	adiw	r26, 0x04	; 4
    1d92:	8c 91       	ld	r24, X
    1d94:	14 97       	sbiw	r26, 0x04	; 4
    1d96:	88 60       	ori	r24, 0x08	; 8
    1d98:	14 96       	adiw	r26, 0x04	; 4
    1d9a:	8c 93       	st	X, r24
    1d9c:	ef ef       	ldi	r30, 0xFF	; 255
    1d9e:	ff e1       	ldi	r31, 0x1F	; 31
    1da0:	31 97       	sbiw	r30, 0x01	; 1
    1da2:	f1 f7       	brne	.-4      	; 0x1da0 <main+0x4f2>
    1da4:	00 c0       	rjmp	.+0      	; 0x1da6 <main+0x4f8>
    1da6:	00 00       	nop
					_delay_ms(1000);
					wdt_reset();
    1da8:	a8 95       	wdr
					presion1 = get_PressureI2C(get_I2CValue(verbose),1);
    1daa:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    1dae:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    1db2:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    1db6:	61 e0       	ldi	r22, 0x01	; 1
    1db8:	70 e0       	ldi	r23, 0x00	; 0
    1dba:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    1dbe:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    1dc2:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    1dc6:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    1dca:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
					PORTA.OUT &= ~PIN7_bm;
    1dce:	d8 01       	movw	r26, r16
    1dd0:	14 96       	adiw	r26, 0x04	; 4
    1dd2:	8c 91       	ld	r24, X
    1dd4:	14 97       	sbiw	r26, 0x04	; 4
    1dd6:	8f 77       	andi	r24, 0x7F	; 127
    1dd8:	14 96       	adiw	r26, 0x04	; 4
    1dda:	8c 93       	st	X, r24
    1ddc:	14 97       	sbiw	r26, 0x04	; 4
					PORTA.OUT &= ~PIN3_bm;
    1dde:	14 96       	adiw	r26, 0x04	; 4
    1de0:	8c 91       	ld	r24, X
    1de2:	14 97       	sbiw	r26, 0x04	; 4
    1de4:	87 7f       	andi	r24, 0xF7	; 247
    1de6:	14 96       	adiw	r26, 0x04	; 4
    1de8:	8c 93       	st	X, r24
    1dea:	ef ef       	ldi	r30, 0xFF	; 255
    1dec:	ff e1       	ldi	r31, 0x1F	; 31
    1dee:	31 97       	sbiw	r30, 0x01	; 1
    1df0:	f1 f7       	brne	.-4      	; 0x1dee <main+0x540>
    1df2:	00 c0       	rjmp	.+0      	; 0x1df4 <main+0x546>
    1df4:	00 00       	nop
    1df6:	90 c0       	rjmp	.+288    	; 0x1f18 <main+0x66a>
					_delay_ms(1000);
				break;
				case 'I':
					PORTA.OUT |= PIN7_bm;
    1df8:	00 e0       	ldi	r16, 0x00	; 0
    1dfa:	14 e0       	ldi	r17, 0x04	; 4
    1dfc:	d8 01       	movw	r26, r16
    1dfe:	14 96       	adiw	r26, 0x04	; 4
    1e00:	8c 91       	ld	r24, X
    1e02:	14 97       	sbiw	r26, 0x04	; 4
    1e04:	80 68       	ori	r24, 0x80	; 128
    1e06:	14 96       	adiw	r26, 0x04	; 4
    1e08:	8c 93       	st	X, r24
    1e0a:	14 97       	sbiw	r26, 0x04	; 4
					PORTA.OUT |= PIN3_bm;
    1e0c:	14 96       	adiw	r26, 0x04	; 4
    1e0e:	8c 91       	ld	r24, X
    1e10:	14 97       	sbiw	r26, 0x04	; 4
    1e12:	88 60       	ori	r24, 0x08	; 8
    1e14:	14 96       	adiw	r26, 0x04	; 4
    1e16:	8c 93       	st	X, r24
    1e18:	ef ef       	ldi	r30, 0xFF	; 255
    1e1a:	ff e1       	ldi	r31, 0x1F	; 31
    1e1c:	31 97       	sbiw	r30, 0x01	; 1
    1e1e:	f1 f7       	brne	.-4      	; 0x1e1c <main+0x56e>
    1e20:	00 c0       	rjmp	.+0      	; 0x1e22 <main+0x574>
    1e22:	00 00       	nop
					_delay_ms(1000);
					wdt_reset();
    1e24:	a8 95       	wdr
					presion1 = get_PressureI2C(get_I2CValue(verbose),2);
    1e26:	80 91 6c 38 	lds	r24, 0x386C	; 0x80386c <verbose>
    1e2a:	90 91 6d 38 	lds	r25, 0x386D	; 0x80386d <verbose+0x1>
    1e2e:	0e 94 06 03 	call	0x60c	; 0x60c <get_I2CValue>
    1e32:	62 e0       	ldi	r22, 0x02	; 2
    1e34:	70 e0       	ldi	r23, 0x00	; 0
    1e36:	0e 94 95 04 	call	0x92a	; 0x92a <get_PressureI2C>
    1e3a:	60 93 50 38 	sts	0x3850, r22	; 0x803850 <presion1>
    1e3e:	70 93 51 38 	sts	0x3851, r23	; 0x803851 <presion1+0x1>
    1e42:	80 93 52 38 	sts	0x3852, r24	; 0x803852 <presion1+0x2>
    1e46:	90 93 53 38 	sts	0x3853, r25	; 0x803853 <presion1+0x3>
					PORTA.OUT &= ~PIN7_bm;
    1e4a:	d8 01       	movw	r26, r16
    1e4c:	14 96       	adiw	r26, 0x04	; 4
    1e4e:	8c 91       	ld	r24, X
    1e50:	14 97       	sbiw	r26, 0x04	; 4
    1e52:	8f 77       	andi	r24, 0x7F	; 127
    1e54:	14 96       	adiw	r26, 0x04	; 4
    1e56:	8c 93       	st	X, r24
    1e58:	14 97       	sbiw	r26, 0x04	; 4
					PORTA.OUT &= ~PIN3_bm;
    1e5a:	14 96       	adiw	r26, 0x04	; 4
    1e5c:	8c 91       	ld	r24, X
    1e5e:	14 97       	sbiw	r26, 0x04	; 4
    1e60:	87 7f       	andi	r24, 0xF7	; 247
    1e62:	14 96       	adiw	r26, 0x04	; 4
    1e64:	8c 93       	st	X, r24
    1e66:	ef ef       	ldi	r30, 0xFF	; 255
    1e68:	ff e1       	ldi	r31, 0x1F	; 31
    1e6a:	31 97       	sbiw	r30, 0x01	; 1
    1e6c:	f1 f7       	brne	.-4      	; 0x1e6a <main+0x5bc>
    1e6e:	00 c0       	rjmp	.+0      	; 0x1e70 <main+0x5c2>
    1e70:	00 00       	nop
    1e72:	52 c0       	rjmp	.+164    	; 0x1f18 <main+0x66a>
					_delay_ms(1000);
				break;
				case 'P':
					PORTB.OUT |= PIN5_bm;
    1e74:	e0 e2       	ldi	r30, 0x20	; 32
    1e76:	f4 e0       	ldi	r31, 0x04	; 4
    1e78:	84 81       	ldd	r24, Z+4	; 0x04
    1e7a:	80 62       	ori	r24, 0x20	; 32
    1e7c:	84 83       	std	Z+4, r24	; 0x04
    1e7e:	80 e0       	ldi	r24, 0x00	; 0
    1e80:	90 e6       	ldi	r25, 0x60	; 96
    1e82:	01 97       	sbiw	r24, 0x01	; 1
    1e84:	f1 f7       	brne	.-4      	; 0x1e82 <main+0x5d4>
					_delay_ms(3000);
					//count = 0;
					wdt_reset();
    1e86:	a8 95       	wdr
					vol2 = get_Voltage(5); //2 segundos
    1e88:	85 e0       	ldi	r24, 0x05	; 5
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	0e 94 84 02 	call	0x508	; 0x508 <get_Voltage>
    1e90:	a6 2f       	mov	r26, r22
    1e92:	b7 2f       	mov	r27, r23
    1e94:	46 2f       	mov	r20, r22
    1e96:	57 2f       	mov	r21, r23
    1e98:	68 2f       	mov	r22, r24
    1e9a:	79 2f       	mov	r23, r25
    1e9c:	40 93 54 38 	sts	0x3854, r20	; 0x803854 <vol2>
    1ea0:	50 93 55 38 	sts	0x3855, r21	; 0x803855 <vol2+0x1>
    1ea4:	60 93 56 38 	sts	0x3856, r22	; 0x803856 <vol2+0x2>
    1ea8:	70 93 57 38 	sts	0x3857, r23	; 0x803857 <vol2+0x3>
					//PORTB.OUT &= ~PIN5_bm;
					if(verbose == 1){
    1eac:	20 91 6c 38 	lds	r18, 0x386C	; 0x80386c <verbose>
    1eb0:	30 91 6d 38 	lds	r19, 0x386D	; 0x80386d <verbose+0x1>
    1eb4:	21 30       	cpi	r18, 0x01	; 1
    1eb6:	31 05       	cpc	r19, r1
    1eb8:	81 f4       	brne	.+32     	; 0x1eda <main+0x62c>
						printf("Voltaje Sensor2: %f\r",vol2);
    1eba:	9f 93       	push	r25
    1ebc:	8f 93       	push	r24
    1ebe:	bf 93       	push	r27
    1ec0:	af 93       	push	r26
    1ec2:	8b eb       	ldi	r24, 0xBB	; 187
    1ec4:	98 eb       	ldi	r25, 0xB8	; 184
    1ec6:	9f 93       	push	r25
    1ec8:	8f 93       	push	r24
    1eca:	0e 94 58 1b 	call	0x36b0	; 0x36b0 <printf>
    1ece:	0f 90       	pop	r0
    1ed0:	0f 90       	pop	r0
    1ed2:	0f 90       	pop	r0
    1ed4:	0f 90       	pop	r0
    1ed6:	0f 90       	pop	r0
    1ed8:	0f 90       	pop	r0
					}
					//printf("Voltaje2: %f\r",vol2);
					presion2 = get_PresureADC2(vol2);
    1eda:	60 91 54 38 	lds	r22, 0x3854	; 0x803854 <vol2>
    1ede:	70 91 55 38 	lds	r23, 0x3855	; 0x803855 <vol2+0x1>
    1ee2:	80 91 56 38 	lds	r24, 0x3856	; 0x803856 <vol2+0x2>
    1ee6:	90 91 57 38 	lds	r25, 0x3857	; 0x803857 <vol2+0x3>
    1eea:	0e 94 c3 03 	call	0x786	; 0x786 <get_PresureADC2>
    1eee:	60 93 4c 38 	sts	0x384C, r22	; 0x80384c <presion2>
    1ef2:	70 93 4d 38 	sts	0x384D, r23	; 0x80384d <presion2+0x1>
    1ef6:	80 93 4e 38 	sts	0x384E, r24	; 0x80384e <presion2+0x2>
    1efa:	90 93 4f 38 	sts	0x384F, r25	; 0x80384f <presion2+0x3>
					wdt_reset();
    1efe:	a8 95       	wdr
				
					PORTB.OUT &= ~PIN5_bm;
    1f00:	e0 e2       	ldi	r30, 0x20	; 32
    1f02:	f4 e0       	ldi	r31, 0x04	; 4
    1f04:	84 81       	ldd	r24, Z+4	; 0x04
    1f06:	8f 7d       	andi	r24, 0xDF	; 223
    1f08:	84 83       	std	Z+4, r24	; 0x04

				break;
    1f0a:	06 c0       	rjmp	.+12     	; 0x1f18 <main+0x66a>
				case 'A':
					s2 = 1;
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	80 93 42 38 	sts	0x3842, r24	; 0x803842 <s2>
    1f14:	90 93 43 38 	sts	0x3843, r25	; 0x803843 <s2+0x1>
				break;
			}
			bateria = get_Voltage(6)*5;
    1f18:	86 e0       	ldi	r24, 0x06	; 6
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	0e 94 84 02 	call	0x508	; 0x508 <get_Voltage>
    1f20:	20 e0       	ldi	r18, 0x00	; 0
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	40 ea       	ldi	r20, 0xA0	; 160
    1f26:	50 e4       	ldi	r21, 0x40	; 64
    1f28:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
    1f2c:	60 93 48 38 	sts	0x3848, r22	; 0x803848 <bateria>
    1f30:	70 93 49 38 	sts	0x3849, r23	; 0x803849 <bateria+0x1>
    1f34:	80 93 4a 38 	sts	0x384A, r24	; 0x80384a <bateria+0x2>
    1f38:	90 93 4b 38 	sts	0x384B, r25	; 0x80384b <bateria+0x3>
			executeCommand("RT\r");
    1f3c:	80 ed       	ldi	r24, 0xD0	; 208
    1f3e:	98 eb       	ldi	r25, 0xB8	; 184
    1f40:	0e 94 21 06 	call	0xc42	; 0xc42 <executeCommand>
			memset(command, 0, MAX_COMMAND_LEN);
    1f44:	82 e3       	ldi	r24, 0x32	; 50
    1f46:	ee e0       	ldi	r30, 0x0E	; 14
    1f48:	f8 e3       	ldi	r31, 0x38	; 56
    1f4a:	df 01       	movw	r26, r30
    1f4c:	1d 92       	st	X+, r1
    1f4e:	8a 95       	dec	r24
    1f50:	e9 f7       	brne	.-6      	; 0x1f4c <main+0x69e>
			send = 1;
    1f52:	81 e0       	ldi	r24, 0x01	; 1
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	80 93 5c 38 	sts	0x385C, r24	; 0x80385c <send>
    1f5a:	90 93 5d 38 	sts	0x385D, r25	; 0x80385d <send+0x1>
		}
		ADC0.CTRLA = (0 << ADC_ENABLE_bp);
    1f5e:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__RODATA_PM_OFFSET__+0x7f8600>
		TCA0.SPLIT.CTRLA = 0;
    1f62:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <__RODATA_PM_OFFSET__+0x7f8a00>
		//TCB0.CTRLA = 0;
		RTC.CTRLA = 0;
    1f66:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <__RODATA_PM_OFFSET__+0x7f8140>
		wdt_reset();
    1f6a:	a8 95       	wdr
    }
    1f6c:	f3 cc       	rjmp	.-1562   	; 0x1954 <main+0xa6>

00001f6e <__subsf3>:
    1f6e:	50 58       	subi	r21, 0x80	; 128

00001f70 <__addsf3>:
    1f70:	bb 27       	eor	r27, r27
    1f72:	aa 27       	eor	r26, r26
    1f74:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <__addsf3x>
    1f78:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <__fp_round>
    1f7c:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <__fp_pscA>
    1f80:	38 f0       	brcs	.+14     	; 0x1f90 <__addsf3+0x20>
    1f82:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__fp_pscB>
    1f86:	20 f0       	brcs	.+8      	; 0x1f90 <__addsf3+0x20>
    1f88:	39 f4       	brne	.+14     	; 0x1f98 <__addsf3+0x28>
    1f8a:	9f 3f       	cpi	r25, 0xFF	; 255
    1f8c:	19 f4       	brne	.+6      	; 0x1f94 <__addsf3+0x24>
    1f8e:	26 f4       	brtc	.+8      	; 0x1f98 <__addsf3+0x28>
    1f90:	0c 94 d9 10 	jmp	0x21b2	; 0x21b2 <__fp_nan>
    1f94:	0e f4       	brtc	.+2      	; 0x1f98 <__addsf3+0x28>
    1f96:	e0 95       	com	r30
    1f98:	e7 fb       	bst	r30, 7
    1f9a:	0c 94 d3 10 	jmp	0x21a6	; 0x21a6 <__fp_inf>

00001f9e <__addsf3x>:
    1f9e:	e9 2f       	mov	r30, r25
    1fa0:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__fp_split3>
    1fa4:	58 f3       	brcs	.-42     	; 0x1f7c <__addsf3+0xc>
    1fa6:	ba 17       	cp	r27, r26
    1fa8:	62 07       	cpc	r22, r18
    1faa:	73 07       	cpc	r23, r19
    1fac:	84 07       	cpc	r24, r20
    1fae:	95 07       	cpc	r25, r21
    1fb0:	20 f0       	brcs	.+8      	; 0x1fba <__addsf3x+0x1c>
    1fb2:	79 f4       	brne	.+30     	; 0x1fd2 <__addsf3x+0x34>
    1fb4:	a6 f5       	brtc	.+104    	; 0x201e <__addsf3x+0x80>
    1fb6:	0c 94 1d 11 	jmp	0x223a	; 0x223a <__fp_zero>
    1fba:	0e f4       	brtc	.+2      	; 0x1fbe <__addsf3x+0x20>
    1fbc:	e0 95       	com	r30
    1fbe:	0b 2e       	mov	r0, r27
    1fc0:	ba 2f       	mov	r27, r26
    1fc2:	a0 2d       	mov	r26, r0
    1fc4:	0b 01       	movw	r0, r22
    1fc6:	b9 01       	movw	r22, r18
    1fc8:	90 01       	movw	r18, r0
    1fca:	0c 01       	movw	r0, r24
    1fcc:	ca 01       	movw	r24, r20
    1fce:	a0 01       	movw	r20, r0
    1fd0:	11 24       	eor	r1, r1
    1fd2:	ff 27       	eor	r31, r31
    1fd4:	59 1b       	sub	r21, r25
    1fd6:	99 f0       	breq	.+38     	; 0x1ffe <__addsf3x+0x60>
    1fd8:	59 3f       	cpi	r21, 0xF9	; 249
    1fda:	50 f4       	brcc	.+20     	; 0x1ff0 <__addsf3x+0x52>
    1fdc:	50 3e       	cpi	r21, 0xE0	; 224
    1fde:	68 f1       	brcs	.+90     	; 0x203a <__addsf3x+0x9c>
    1fe0:	1a 16       	cp	r1, r26
    1fe2:	f0 40       	sbci	r31, 0x00	; 0
    1fe4:	a2 2f       	mov	r26, r18
    1fe6:	23 2f       	mov	r18, r19
    1fe8:	34 2f       	mov	r19, r20
    1fea:	44 27       	eor	r20, r20
    1fec:	58 5f       	subi	r21, 0xF8	; 248
    1fee:	f3 cf       	rjmp	.-26     	; 0x1fd6 <__addsf3x+0x38>
    1ff0:	46 95       	lsr	r20
    1ff2:	37 95       	ror	r19
    1ff4:	27 95       	ror	r18
    1ff6:	a7 95       	ror	r26
    1ff8:	f0 40       	sbci	r31, 0x00	; 0
    1ffa:	53 95       	inc	r21
    1ffc:	c9 f7       	brne	.-14     	; 0x1ff0 <__addsf3x+0x52>
    1ffe:	7e f4       	brtc	.+30     	; 0x201e <__addsf3x+0x80>
    2000:	1f 16       	cp	r1, r31
    2002:	ba 0b       	sbc	r27, r26
    2004:	62 0b       	sbc	r22, r18
    2006:	73 0b       	sbc	r23, r19
    2008:	84 0b       	sbc	r24, r20
    200a:	ba f0       	brmi	.+46     	; 0x203a <__addsf3x+0x9c>
    200c:	91 50       	subi	r25, 0x01	; 1
    200e:	a1 f0       	breq	.+40     	; 0x2038 <__addsf3x+0x9a>
    2010:	ff 0f       	add	r31, r31
    2012:	bb 1f       	adc	r27, r27
    2014:	66 1f       	adc	r22, r22
    2016:	77 1f       	adc	r23, r23
    2018:	88 1f       	adc	r24, r24
    201a:	c2 f7       	brpl	.-16     	; 0x200c <__addsf3x+0x6e>
    201c:	0e c0       	rjmp	.+28     	; 0x203a <__addsf3x+0x9c>
    201e:	ba 0f       	add	r27, r26
    2020:	62 1f       	adc	r22, r18
    2022:	73 1f       	adc	r23, r19
    2024:	84 1f       	adc	r24, r20
    2026:	48 f4       	brcc	.+18     	; 0x203a <__addsf3x+0x9c>
    2028:	87 95       	ror	r24
    202a:	77 95       	ror	r23
    202c:	67 95       	ror	r22
    202e:	b7 95       	ror	r27
    2030:	f7 95       	ror	r31
    2032:	9e 3f       	cpi	r25, 0xFE	; 254
    2034:	08 f0       	brcs	.+2      	; 0x2038 <__addsf3x+0x9a>
    2036:	b0 cf       	rjmp	.-160    	; 0x1f98 <__addsf3+0x28>
    2038:	93 95       	inc	r25
    203a:	88 0f       	add	r24, r24
    203c:	08 f0       	brcs	.+2      	; 0x2040 <__addsf3x+0xa2>
    203e:	99 27       	eor	r25, r25
    2040:	ee 0f       	add	r30, r30
    2042:	97 95       	ror	r25
    2044:	87 95       	ror	r24
    2046:	08 95       	ret

00002048 <__divsf3>:
    2048:	0e 94 38 10 	call	0x2070	; 0x2070 <__divsf3x>
    204c:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <__fp_round>
    2050:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__fp_pscB>
    2054:	58 f0       	brcs	.+22     	; 0x206c <__divsf3+0x24>
    2056:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <__fp_pscA>
    205a:	40 f0       	brcs	.+16     	; 0x206c <__divsf3+0x24>
    205c:	29 f4       	brne	.+10     	; 0x2068 <__divsf3+0x20>
    205e:	5f 3f       	cpi	r21, 0xFF	; 255
    2060:	29 f0       	breq	.+10     	; 0x206c <__divsf3+0x24>
    2062:	0c 94 d3 10 	jmp	0x21a6	; 0x21a6 <__fp_inf>
    2066:	51 11       	cpse	r21, r1
    2068:	0c 94 1e 11 	jmp	0x223c	; 0x223c <__fp_szero>
    206c:	0c 94 d9 10 	jmp	0x21b2	; 0x21b2 <__fp_nan>

00002070 <__divsf3x>:
    2070:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__fp_split3>
    2074:	68 f3       	brcs	.-38     	; 0x2050 <__divsf3+0x8>

00002076 <__divsf3_pse>:
    2076:	99 23       	and	r25, r25
    2078:	b1 f3       	breq	.-20     	; 0x2066 <__divsf3+0x1e>
    207a:	55 23       	and	r21, r21
    207c:	91 f3       	breq	.-28     	; 0x2062 <__divsf3+0x1a>
    207e:	95 1b       	sub	r25, r21
    2080:	55 0b       	sbc	r21, r21
    2082:	bb 27       	eor	r27, r27
    2084:	aa 27       	eor	r26, r26
    2086:	62 17       	cp	r22, r18
    2088:	73 07       	cpc	r23, r19
    208a:	84 07       	cpc	r24, r20
    208c:	38 f0       	brcs	.+14     	; 0x209c <__divsf3_pse+0x26>
    208e:	9f 5f       	subi	r25, 0xFF	; 255
    2090:	5f 4f       	sbci	r21, 0xFF	; 255
    2092:	22 0f       	add	r18, r18
    2094:	33 1f       	adc	r19, r19
    2096:	44 1f       	adc	r20, r20
    2098:	aa 1f       	adc	r26, r26
    209a:	a9 f3       	breq	.-22     	; 0x2086 <__divsf3_pse+0x10>
    209c:	35 d0       	rcall	.+106    	; 0x2108 <__divsf3_pse+0x92>
    209e:	0e 2e       	mov	r0, r30
    20a0:	3a f0       	brmi	.+14     	; 0x20b0 <__divsf3_pse+0x3a>
    20a2:	e0 e8       	ldi	r30, 0x80	; 128
    20a4:	32 d0       	rcall	.+100    	; 0x210a <__divsf3_pse+0x94>
    20a6:	91 50       	subi	r25, 0x01	; 1
    20a8:	50 40       	sbci	r21, 0x00	; 0
    20aa:	e6 95       	lsr	r30
    20ac:	00 1c       	adc	r0, r0
    20ae:	ca f7       	brpl	.-14     	; 0x20a2 <__divsf3_pse+0x2c>
    20b0:	2b d0       	rcall	.+86     	; 0x2108 <__divsf3_pse+0x92>
    20b2:	fe 2f       	mov	r31, r30
    20b4:	29 d0       	rcall	.+82     	; 0x2108 <__divsf3_pse+0x92>
    20b6:	66 0f       	add	r22, r22
    20b8:	77 1f       	adc	r23, r23
    20ba:	88 1f       	adc	r24, r24
    20bc:	bb 1f       	adc	r27, r27
    20be:	26 17       	cp	r18, r22
    20c0:	37 07       	cpc	r19, r23
    20c2:	48 07       	cpc	r20, r24
    20c4:	ab 07       	cpc	r26, r27
    20c6:	b0 e8       	ldi	r27, 0x80	; 128
    20c8:	09 f0       	breq	.+2      	; 0x20cc <__divsf3_pse+0x56>
    20ca:	bb 0b       	sbc	r27, r27
    20cc:	80 2d       	mov	r24, r0
    20ce:	bf 01       	movw	r22, r30
    20d0:	ff 27       	eor	r31, r31
    20d2:	93 58       	subi	r25, 0x83	; 131
    20d4:	5f 4f       	sbci	r21, 0xFF	; 255
    20d6:	3a f0       	brmi	.+14     	; 0x20e6 <__divsf3_pse+0x70>
    20d8:	9e 3f       	cpi	r25, 0xFE	; 254
    20da:	51 05       	cpc	r21, r1
    20dc:	78 f0       	brcs	.+30     	; 0x20fc <__divsf3_pse+0x86>
    20de:	0c 94 d3 10 	jmp	0x21a6	; 0x21a6 <__fp_inf>
    20e2:	0c 94 1e 11 	jmp	0x223c	; 0x223c <__fp_szero>
    20e6:	5f 3f       	cpi	r21, 0xFF	; 255
    20e8:	e4 f3       	brlt	.-8      	; 0x20e2 <__divsf3_pse+0x6c>
    20ea:	98 3e       	cpi	r25, 0xE8	; 232
    20ec:	d4 f3       	brlt	.-12     	; 0x20e2 <__divsf3_pse+0x6c>
    20ee:	86 95       	lsr	r24
    20f0:	77 95       	ror	r23
    20f2:	67 95       	ror	r22
    20f4:	b7 95       	ror	r27
    20f6:	f7 95       	ror	r31
    20f8:	9f 5f       	subi	r25, 0xFF	; 255
    20fa:	c9 f7       	brne	.-14     	; 0x20ee <__divsf3_pse+0x78>
    20fc:	88 0f       	add	r24, r24
    20fe:	91 1d       	adc	r25, r1
    2100:	96 95       	lsr	r25
    2102:	87 95       	ror	r24
    2104:	97 f9       	bld	r25, 7
    2106:	08 95       	ret
    2108:	e1 e0       	ldi	r30, 0x01	; 1
    210a:	66 0f       	add	r22, r22
    210c:	77 1f       	adc	r23, r23
    210e:	88 1f       	adc	r24, r24
    2110:	bb 1f       	adc	r27, r27
    2112:	62 17       	cp	r22, r18
    2114:	73 07       	cpc	r23, r19
    2116:	84 07       	cpc	r24, r20
    2118:	ba 07       	cpc	r27, r26
    211a:	20 f0       	brcs	.+8      	; 0x2124 <__divsf3_pse+0xae>
    211c:	62 1b       	sub	r22, r18
    211e:	73 0b       	sbc	r23, r19
    2120:	84 0b       	sbc	r24, r20
    2122:	ba 0b       	sbc	r27, r26
    2124:	ee 1f       	adc	r30, r30
    2126:	88 f7       	brcc	.-30     	; 0x210a <__divsf3_pse+0x94>
    2128:	e0 95       	com	r30
    212a:	08 95       	ret

0000212c <__floatunsisf>:
    212c:	e8 94       	clt
    212e:	09 c0       	rjmp	.+18     	; 0x2142 <__floatsisf+0x12>

00002130 <__floatsisf>:
    2130:	97 fb       	bst	r25, 7
    2132:	3e f4       	brtc	.+14     	; 0x2142 <__floatsisf+0x12>
    2134:	90 95       	com	r25
    2136:	80 95       	com	r24
    2138:	70 95       	com	r23
    213a:	61 95       	neg	r22
    213c:	7f 4f       	sbci	r23, 0xFF	; 255
    213e:	8f 4f       	sbci	r24, 0xFF	; 255
    2140:	9f 4f       	sbci	r25, 0xFF	; 255
    2142:	99 23       	and	r25, r25
    2144:	a9 f0       	breq	.+42     	; 0x2170 <__floatsisf+0x40>
    2146:	f9 2f       	mov	r31, r25
    2148:	96 e9       	ldi	r25, 0x96	; 150
    214a:	bb 27       	eor	r27, r27
    214c:	93 95       	inc	r25
    214e:	f6 95       	lsr	r31
    2150:	87 95       	ror	r24
    2152:	77 95       	ror	r23
    2154:	67 95       	ror	r22
    2156:	b7 95       	ror	r27
    2158:	f1 11       	cpse	r31, r1
    215a:	f8 cf       	rjmp	.-16     	; 0x214c <__floatsisf+0x1c>
    215c:	fa f4       	brpl	.+62     	; 0x219c <__floatsisf+0x6c>
    215e:	bb 0f       	add	r27, r27
    2160:	11 f4       	brne	.+4      	; 0x2166 <__floatsisf+0x36>
    2162:	60 ff       	sbrs	r22, 0
    2164:	1b c0       	rjmp	.+54     	; 0x219c <__floatsisf+0x6c>
    2166:	6f 5f       	subi	r22, 0xFF	; 255
    2168:	7f 4f       	sbci	r23, 0xFF	; 255
    216a:	8f 4f       	sbci	r24, 0xFF	; 255
    216c:	9f 4f       	sbci	r25, 0xFF	; 255
    216e:	16 c0       	rjmp	.+44     	; 0x219c <__floatsisf+0x6c>
    2170:	88 23       	and	r24, r24
    2172:	11 f0       	breq	.+4      	; 0x2178 <__floatsisf+0x48>
    2174:	96 e9       	ldi	r25, 0x96	; 150
    2176:	11 c0       	rjmp	.+34     	; 0x219a <__floatsisf+0x6a>
    2178:	77 23       	and	r23, r23
    217a:	21 f0       	breq	.+8      	; 0x2184 <__floatsisf+0x54>
    217c:	9e e8       	ldi	r25, 0x8E	; 142
    217e:	87 2f       	mov	r24, r23
    2180:	76 2f       	mov	r23, r22
    2182:	05 c0       	rjmp	.+10     	; 0x218e <__floatsisf+0x5e>
    2184:	66 23       	and	r22, r22
    2186:	71 f0       	breq	.+28     	; 0x21a4 <__floatsisf+0x74>
    2188:	96 e8       	ldi	r25, 0x86	; 134
    218a:	86 2f       	mov	r24, r22
    218c:	70 e0       	ldi	r23, 0x00	; 0
    218e:	60 e0       	ldi	r22, 0x00	; 0
    2190:	2a f0       	brmi	.+10     	; 0x219c <__floatsisf+0x6c>
    2192:	9a 95       	dec	r25
    2194:	66 0f       	add	r22, r22
    2196:	77 1f       	adc	r23, r23
    2198:	88 1f       	adc	r24, r24
    219a:	da f7       	brpl	.-10     	; 0x2192 <__floatsisf+0x62>
    219c:	88 0f       	add	r24, r24
    219e:	96 95       	lsr	r25
    21a0:	87 95       	ror	r24
    21a2:	97 f9       	bld	r25, 7
    21a4:	08 95       	ret

000021a6 <__fp_inf>:
    21a6:	97 f9       	bld	r25, 7
    21a8:	9f 67       	ori	r25, 0x7F	; 127
    21aa:	80 e8       	ldi	r24, 0x80	; 128
    21ac:	70 e0       	ldi	r23, 0x00	; 0
    21ae:	60 e0       	ldi	r22, 0x00	; 0
    21b0:	08 95       	ret

000021b2 <__fp_nan>:
    21b2:	9f ef       	ldi	r25, 0xFF	; 255
    21b4:	80 ec       	ldi	r24, 0xC0	; 192
    21b6:	08 95       	ret

000021b8 <__fp_pscA>:
    21b8:	00 24       	eor	r0, r0
    21ba:	0a 94       	dec	r0
    21bc:	16 16       	cp	r1, r22
    21be:	17 06       	cpc	r1, r23
    21c0:	18 06       	cpc	r1, r24
    21c2:	09 06       	cpc	r0, r25
    21c4:	08 95       	ret

000021c6 <__fp_pscB>:
    21c6:	00 24       	eor	r0, r0
    21c8:	0a 94       	dec	r0
    21ca:	12 16       	cp	r1, r18
    21cc:	13 06       	cpc	r1, r19
    21ce:	14 06       	cpc	r1, r20
    21d0:	05 06       	cpc	r0, r21
    21d2:	08 95       	ret

000021d4 <__fp_round>:
    21d4:	09 2e       	mov	r0, r25
    21d6:	03 94       	inc	r0
    21d8:	00 0c       	add	r0, r0
    21da:	11 f4       	brne	.+4      	; 0x21e0 <__fp_round+0xc>
    21dc:	88 23       	and	r24, r24
    21de:	52 f0       	brmi	.+20     	; 0x21f4 <__fp_round+0x20>
    21e0:	bb 0f       	add	r27, r27
    21e2:	40 f4       	brcc	.+16     	; 0x21f4 <__fp_round+0x20>
    21e4:	bf 2b       	or	r27, r31
    21e6:	11 f4       	brne	.+4      	; 0x21ec <__fp_round+0x18>
    21e8:	60 ff       	sbrs	r22, 0
    21ea:	04 c0       	rjmp	.+8      	; 0x21f4 <__fp_round+0x20>
    21ec:	6f 5f       	subi	r22, 0xFF	; 255
    21ee:	7f 4f       	sbci	r23, 0xFF	; 255
    21f0:	8f 4f       	sbci	r24, 0xFF	; 255
    21f2:	9f 4f       	sbci	r25, 0xFF	; 255
    21f4:	08 95       	ret

000021f6 <__fp_split3>:
    21f6:	57 fd       	sbrc	r21, 7
    21f8:	90 58       	subi	r25, 0x80	; 128
    21fa:	44 0f       	add	r20, r20
    21fc:	55 1f       	adc	r21, r21
    21fe:	59 f0       	breq	.+22     	; 0x2216 <__fp_splitA+0x10>
    2200:	5f 3f       	cpi	r21, 0xFF	; 255
    2202:	71 f0       	breq	.+28     	; 0x2220 <__fp_splitA+0x1a>
    2204:	47 95       	ror	r20

00002206 <__fp_splitA>:
    2206:	88 0f       	add	r24, r24
    2208:	97 fb       	bst	r25, 7
    220a:	99 1f       	adc	r25, r25
    220c:	61 f0       	breq	.+24     	; 0x2226 <__fp_splitA+0x20>
    220e:	9f 3f       	cpi	r25, 0xFF	; 255
    2210:	79 f0       	breq	.+30     	; 0x2230 <__fp_splitA+0x2a>
    2212:	87 95       	ror	r24
    2214:	08 95       	ret
    2216:	12 16       	cp	r1, r18
    2218:	13 06       	cpc	r1, r19
    221a:	14 06       	cpc	r1, r20
    221c:	55 1f       	adc	r21, r21
    221e:	f2 cf       	rjmp	.-28     	; 0x2204 <__fp_split3+0xe>
    2220:	46 95       	lsr	r20
    2222:	f1 df       	rcall	.-30     	; 0x2206 <__fp_splitA>
    2224:	08 c0       	rjmp	.+16     	; 0x2236 <__fp_splitA+0x30>
    2226:	16 16       	cp	r1, r22
    2228:	17 06       	cpc	r1, r23
    222a:	18 06       	cpc	r1, r24
    222c:	99 1f       	adc	r25, r25
    222e:	f1 cf       	rjmp	.-30     	; 0x2212 <__fp_splitA+0xc>
    2230:	86 95       	lsr	r24
    2232:	71 05       	cpc	r23, r1
    2234:	61 05       	cpc	r22, r1
    2236:	08 94       	sec
    2238:	08 95       	ret

0000223a <__fp_zero>:
    223a:	e8 94       	clt

0000223c <__fp_szero>:
    223c:	bb 27       	eor	r27, r27
    223e:	66 27       	eor	r22, r22
    2240:	77 27       	eor	r23, r23
    2242:	cb 01       	movw	r24, r22
    2244:	97 f9       	bld	r25, 7
    2246:	08 95       	ret

00002248 <__gesf2>:
    2248:	0e 94 96 11 	call	0x232c	; 0x232c <__fp_cmp>
    224c:	08 f4       	brcc	.+2      	; 0x2250 <__gesf2+0x8>
    224e:	8f ef       	ldi	r24, 0xFF	; 255
    2250:	08 95       	ret

00002252 <__mulsf3>:
    2252:	0e 94 3c 11 	call	0x2278	; 0x2278 <__mulsf3x>
    2256:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <__fp_round>
    225a:	0e 94 dc 10 	call	0x21b8	; 0x21b8 <__fp_pscA>
    225e:	38 f0       	brcs	.+14     	; 0x226e <__mulsf3+0x1c>
    2260:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__fp_pscB>
    2264:	20 f0       	brcs	.+8      	; 0x226e <__mulsf3+0x1c>
    2266:	95 23       	and	r25, r21
    2268:	11 f0       	breq	.+4      	; 0x226e <__mulsf3+0x1c>
    226a:	0c 94 d3 10 	jmp	0x21a6	; 0x21a6 <__fp_inf>
    226e:	0c 94 d9 10 	jmp	0x21b2	; 0x21b2 <__fp_nan>
    2272:	11 24       	eor	r1, r1
    2274:	0c 94 1e 11 	jmp	0x223c	; 0x223c <__fp_szero>

00002278 <__mulsf3x>:
    2278:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <__fp_split3>
    227c:	70 f3       	brcs	.-36     	; 0x225a <__mulsf3+0x8>

0000227e <__mulsf3_pse>:
    227e:	95 9f       	mul	r25, r21
    2280:	c1 f3       	breq	.-16     	; 0x2272 <__mulsf3+0x20>
    2282:	95 0f       	add	r25, r21
    2284:	50 e0       	ldi	r21, 0x00	; 0
    2286:	55 1f       	adc	r21, r21
    2288:	62 9f       	mul	r22, r18
    228a:	f0 01       	movw	r30, r0
    228c:	72 9f       	mul	r23, r18
    228e:	bb 27       	eor	r27, r27
    2290:	f0 0d       	add	r31, r0
    2292:	b1 1d       	adc	r27, r1
    2294:	63 9f       	mul	r22, r19
    2296:	aa 27       	eor	r26, r26
    2298:	f0 0d       	add	r31, r0
    229a:	b1 1d       	adc	r27, r1
    229c:	aa 1f       	adc	r26, r26
    229e:	64 9f       	mul	r22, r20
    22a0:	66 27       	eor	r22, r22
    22a2:	b0 0d       	add	r27, r0
    22a4:	a1 1d       	adc	r26, r1
    22a6:	66 1f       	adc	r22, r22
    22a8:	82 9f       	mul	r24, r18
    22aa:	22 27       	eor	r18, r18
    22ac:	b0 0d       	add	r27, r0
    22ae:	a1 1d       	adc	r26, r1
    22b0:	62 1f       	adc	r22, r18
    22b2:	73 9f       	mul	r23, r19
    22b4:	b0 0d       	add	r27, r0
    22b6:	a1 1d       	adc	r26, r1
    22b8:	62 1f       	adc	r22, r18
    22ba:	83 9f       	mul	r24, r19
    22bc:	a0 0d       	add	r26, r0
    22be:	61 1d       	adc	r22, r1
    22c0:	22 1f       	adc	r18, r18
    22c2:	74 9f       	mul	r23, r20
    22c4:	33 27       	eor	r19, r19
    22c6:	a0 0d       	add	r26, r0
    22c8:	61 1d       	adc	r22, r1
    22ca:	23 1f       	adc	r18, r19
    22cc:	84 9f       	mul	r24, r20
    22ce:	60 0d       	add	r22, r0
    22d0:	21 1d       	adc	r18, r1
    22d2:	82 2f       	mov	r24, r18
    22d4:	76 2f       	mov	r23, r22
    22d6:	6a 2f       	mov	r22, r26
    22d8:	11 24       	eor	r1, r1
    22da:	9f 57       	subi	r25, 0x7F	; 127
    22dc:	50 40       	sbci	r21, 0x00	; 0
    22de:	9a f0       	brmi	.+38     	; 0x2306 <__mulsf3_pse+0x88>
    22e0:	f1 f0       	breq	.+60     	; 0x231e <__mulsf3_pse+0xa0>
    22e2:	88 23       	and	r24, r24
    22e4:	4a f0       	brmi	.+18     	; 0x22f8 <__mulsf3_pse+0x7a>
    22e6:	ee 0f       	add	r30, r30
    22e8:	ff 1f       	adc	r31, r31
    22ea:	bb 1f       	adc	r27, r27
    22ec:	66 1f       	adc	r22, r22
    22ee:	77 1f       	adc	r23, r23
    22f0:	88 1f       	adc	r24, r24
    22f2:	91 50       	subi	r25, 0x01	; 1
    22f4:	50 40       	sbci	r21, 0x00	; 0
    22f6:	a9 f7       	brne	.-22     	; 0x22e2 <__mulsf3_pse+0x64>
    22f8:	9e 3f       	cpi	r25, 0xFE	; 254
    22fa:	51 05       	cpc	r21, r1
    22fc:	80 f0       	brcs	.+32     	; 0x231e <__mulsf3_pse+0xa0>
    22fe:	0c 94 d3 10 	jmp	0x21a6	; 0x21a6 <__fp_inf>
    2302:	0c 94 1e 11 	jmp	0x223c	; 0x223c <__fp_szero>
    2306:	5f 3f       	cpi	r21, 0xFF	; 255
    2308:	e4 f3       	brlt	.-8      	; 0x2302 <__mulsf3_pse+0x84>
    230a:	98 3e       	cpi	r25, 0xE8	; 232
    230c:	d4 f3       	brlt	.-12     	; 0x2302 <__mulsf3_pse+0x84>
    230e:	86 95       	lsr	r24
    2310:	77 95       	ror	r23
    2312:	67 95       	ror	r22
    2314:	b7 95       	ror	r27
    2316:	f7 95       	ror	r31
    2318:	e7 95       	ror	r30
    231a:	9f 5f       	subi	r25, 0xFF	; 255
    231c:	c1 f7       	brne	.-16     	; 0x230e <__mulsf3_pse+0x90>
    231e:	fe 2b       	or	r31, r30
    2320:	88 0f       	add	r24, r24
    2322:	91 1d       	adc	r25, r1
    2324:	96 95       	lsr	r25
    2326:	87 95       	ror	r24
    2328:	97 f9       	bld	r25, 7
    232a:	08 95       	ret

0000232c <__fp_cmp>:
    232c:	99 0f       	add	r25, r25
    232e:	00 08       	sbc	r0, r0
    2330:	55 0f       	add	r21, r21
    2332:	aa 0b       	sbc	r26, r26
    2334:	e0 e8       	ldi	r30, 0x80	; 128
    2336:	fe ef       	ldi	r31, 0xFE	; 254
    2338:	16 16       	cp	r1, r22
    233a:	17 06       	cpc	r1, r23
    233c:	e8 07       	cpc	r30, r24
    233e:	f9 07       	cpc	r31, r25
    2340:	c0 f0       	brcs	.+48     	; 0x2372 <__fp_cmp+0x46>
    2342:	12 16       	cp	r1, r18
    2344:	13 06       	cpc	r1, r19
    2346:	e4 07       	cpc	r30, r20
    2348:	f5 07       	cpc	r31, r21
    234a:	98 f0       	brcs	.+38     	; 0x2372 <__fp_cmp+0x46>
    234c:	62 1b       	sub	r22, r18
    234e:	73 0b       	sbc	r23, r19
    2350:	84 0b       	sbc	r24, r20
    2352:	95 0b       	sbc	r25, r21
    2354:	39 f4       	brne	.+14     	; 0x2364 <__fp_cmp+0x38>
    2356:	0a 26       	eor	r0, r26
    2358:	61 f0       	breq	.+24     	; 0x2372 <__fp_cmp+0x46>
    235a:	23 2b       	or	r18, r19
    235c:	24 2b       	or	r18, r20
    235e:	25 2b       	or	r18, r21
    2360:	21 f4       	brne	.+8      	; 0x236a <__fp_cmp+0x3e>
    2362:	08 95       	ret
    2364:	0a 26       	eor	r0, r26
    2366:	09 f4       	brne	.+2      	; 0x236a <__fp_cmp+0x3e>
    2368:	a1 40       	sbci	r26, 0x01	; 1
    236a:	a6 95       	lsr	r26
    236c:	8f ef       	ldi	r24, 0xFF	; 255
    236e:	81 1d       	adc	r24, r1
    2370:	81 1d       	adc	r24, r1
    2372:	08 95       	ret

00002374 <putval>:
    2374:	20 fd       	sbrc	r18, 0
    2376:	09 c0       	rjmp	.+18     	; 0x238a <putval+0x16>
    2378:	fc 01       	movw	r30, r24
    237a:	23 fd       	sbrc	r18, 3
    237c:	05 c0       	rjmp	.+10     	; 0x2388 <putval+0x14>
    237e:	22 ff       	sbrs	r18, 2
    2380:	02 c0       	rjmp	.+4      	; 0x2386 <putval+0x12>
    2382:	73 83       	std	Z+3, r23	; 0x03
    2384:	62 83       	std	Z+2, r22	; 0x02
    2386:	51 83       	std	Z+1, r21	; 0x01
    2388:	40 83       	st	Z, r20
    238a:	08 95       	ret

0000238c <mulacc>:
    238c:	44 fd       	sbrc	r20, 4
    238e:	17 c0       	rjmp	.+46     	; 0x23be <mulacc+0x32>
    2390:	46 fd       	sbrc	r20, 6
    2392:	17 c0       	rjmp	.+46     	; 0x23c2 <mulacc+0x36>
    2394:	ab 01       	movw	r20, r22
    2396:	bc 01       	movw	r22, r24
    2398:	da 01       	movw	r26, r20
    239a:	fb 01       	movw	r30, r22
    239c:	aa 0f       	add	r26, r26
    239e:	bb 1f       	adc	r27, r27
    23a0:	ee 1f       	adc	r30, r30
    23a2:	ff 1f       	adc	r31, r31
    23a4:	10 94       	com	r1
    23a6:	d1 f7       	brne	.-12     	; 0x239c <mulacc+0x10>
    23a8:	4a 0f       	add	r20, r26
    23aa:	5b 1f       	adc	r21, r27
    23ac:	6e 1f       	adc	r22, r30
    23ae:	7f 1f       	adc	r23, r31
    23b0:	cb 01       	movw	r24, r22
    23b2:	ba 01       	movw	r22, r20
    23b4:	66 0f       	add	r22, r22
    23b6:	77 1f       	adc	r23, r23
    23b8:	88 1f       	adc	r24, r24
    23ba:	99 1f       	adc	r25, r25
    23bc:	09 c0       	rjmp	.+18     	; 0x23d0 <mulacc+0x44>
    23be:	33 e0       	ldi	r19, 0x03	; 3
    23c0:	01 c0       	rjmp	.+2      	; 0x23c4 <mulacc+0x38>
    23c2:	34 e0       	ldi	r19, 0x04	; 4
    23c4:	66 0f       	add	r22, r22
    23c6:	77 1f       	adc	r23, r23
    23c8:	88 1f       	adc	r24, r24
    23ca:	99 1f       	adc	r25, r25
    23cc:	31 50       	subi	r19, 0x01	; 1
    23ce:	d1 f7       	brne	.-12     	; 0x23c4 <mulacc+0x38>
    23d0:	62 0f       	add	r22, r18
    23d2:	71 1d       	adc	r23, r1
    23d4:	81 1d       	adc	r24, r1
    23d6:	91 1d       	adc	r25, r1
    23d8:	08 95       	ret

000023da <skip_spaces>:
    23da:	0f 93       	push	r16
    23dc:	1f 93       	push	r17
    23de:	cf 93       	push	r28
    23e0:	df 93       	push	r29
    23e2:	8c 01       	movw	r16, r24
    23e4:	c8 01       	movw	r24, r16
    23e6:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    23ea:	ec 01       	movw	r28, r24
    23ec:	97 fd       	sbrc	r25, 7
    23ee:	08 c0       	rjmp	.+16     	; 0x2400 <skip_spaces+0x26>
    23f0:	0e 94 4e 1a 	call	0x349c	; 0x349c <isspace>
    23f4:	89 2b       	or	r24, r25
    23f6:	b1 f7       	brne	.-20     	; 0x23e4 <skip_spaces+0xa>
    23f8:	b8 01       	movw	r22, r16
    23fa:	ce 01       	movw	r24, r28
    23fc:	0e 94 87 1b 	call	0x370e	; 0x370e <ungetc>
    2400:	ce 01       	movw	r24, r28
    2402:	df 91       	pop	r29
    2404:	cf 91       	pop	r28
    2406:	1f 91       	pop	r17
    2408:	0f 91       	pop	r16
    240a:	08 95       	ret

0000240c <conv_int>:
    240c:	a0 e0       	ldi	r26, 0x00	; 0
    240e:	b0 e0       	ldi	r27, 0x00	; 0
    2410:	ec e0       	ldi	r30, 0x0C	; 12
    2412:	f2 e1       	ldi	r31, 0x12	; 18
    2414:	0c 94 4b 19 	jmp	0x3296	; 0x3296 <__prologue_saves__+0xc>
    2418:	7c 01       	movw	r14, r24
    241a:	8b 01       	movw	r16, r22
    241c:	6a 01       	movw	r12, r20
    241e:	d2 2f       	mov	r29, r18
    2420:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2424:	9c 01       	movw	r18, r24
    2426:	33 27       	eor	r19, r19
    2428:	2b 32       	cpi	r18, 0x2B	; 43
    242a:	31 05       	cpc	r19, r1
    242c:	21 f0       	breq	.+8      	; 0x2436 <conv_int+0x2a>
    242e:	2d 32       	cpi	r18, 0x2D	; 45
    2430:	31 05       	cpc	r19, r1
    2432:	59 f4       	brne	.+22     	; 0x244a <conv_int+0x3e>
    2434:	d0 68       	ori	r29, 0x80	; 128
    2436:	01 50       	subi	r16, 0x01	; 1
    2438:	11 09       	sbc	r17, r1
    243a:	11 f4       	brne	.+4      	; 0x2440 <conv_int+0x34>
    243c:	80 e0       	ldi	r24, 0x00	; 0
    243e:	6b c0       	rjmp	.+214    	; 0x2516 <conv_int+0x10a>
    2440:	c7 01       	movw	r24, r14
    2442:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2446:	97 fd       	sbrc	r25, 7
    2448:	f9 cf       	rjmp	.-14     	; 0x243c <conv_int+0x30>
    244a:	cd 2f       	mov	r28, r29
    244c:	cd 7f       	andi	r28, 0xFD	; 253
    244e:	2d 2f       	mov	r18, r29
    2450:	20 73       	andi	r18, 0x30	; 48
    2452:	19 f5       	brne	.+70     	; 0x249a <conv_int+0x8e>
    2454:	80 33       	cpi	r24, 0x30	; 48
    2456:	09 f5       	brne	.+66     	; 0x249a <conv_int+0x8e>
    2458:	58 01       	movw	r10, r16
    245a:	81 e0       	ldi	r24, 0x01	; 1
    245c:	a8 1a       	sub	r10, r24
    245e:	b1 08       	sbc	r11, r1
    2460:	09 f4       	brne	.+2      	; 0x2464 <conv_int+0x58>
    2462:	45 c0       	rjmp	.+138    	; 0x24ee <conv_int+0xe2>
    2464:	c7 01       	movw	r24, r14
    2466:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    246a:	97 fd       	sbrc	r25, 7
    246c:	40 c0       	rjmp	.+128    	; 0x24ee <conv_int+0xe2>
    246e:	9c 01       	movw	r18, r24
    2470:	2f 7d       	andi	r18, 0xDF	; 223
    2472:	33 27       	eor	r19, r19
    2474:	28 35       	cpi	r18, 0x58	; 88
    2476:	31 05       	cpc	r19, r1
    2478:	51 f4       	brne	.+20     	; 0x248e <conv_int+0x82>
    247a:	c2 64       	ori	r28, 0x42	; 66
    247c:	02 50       	subi	r16, 0x02	; 2
    247e:	11 09       	sbc	r17, r1
    2480:	b1 f1       	breq	.+108    	; 0x24ee <conv_int+0xe2>
    2482:	c7 01       	movw	r24, r14
    2484:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2488:	97 ff       	sbrs	r25, 7
    248a:	07 c0       	rjmp	.+14     	; 0x249a <conv_int+0x8e>
    248c:	30 c0       	rjmp	.+96     	; 0x24ee <conv_int+0xe2>
    248e:	d6 ff       	sbrs	r29, 6
    2490:	02 c0       	rjmp	.+4      	; 0x2496 <conv_int+0x8a>
    2492:	c2 60       	ori	r28, 0x02	; 2
    2494:	01 c0       	rjmp	.+2      	; 0x2498 <conv_int+0x8c>
    2496:	c2 61       	ori	r28, 0x12	; 18
    2498:	85 01       	movw	r16, r10
    249a:	81 2c       	mov	r8, r1
    249c:	91 2c       	mov	r9, r1
    249e:	54 01       	movw	r10, r8
    24a0:	20 ed       	ldi	r18, 0xD0	; 208
    24a2:	28 0f       	add	r18, r24
    24a4:	28 30       	cpi	r18, 0x08	; 8
    24a6:	80 f0       	brcs	.+32     	; 0x24c8 <conv_int+0xbc>
    24a8:	c4 ff       	sbrs	r28, 4
    24aa:	04 c0       	rjmp	.+8      	; 0x24b4 <conv_int+0xa8>
    24ac:	b7 01       	movw	r22, r14
    24ae:	0e 94 87 1b 	call	0x370e	; 0x370e <ungetc>
    24b2:	1a c0       	rjmp	.+52     	; 0x24e8 <conv_int+0xdc>
    24b4:	2a 30       	cpi	r18, 0x0A	; 10
    24b6:	40 f0       	brcs	.+16     	; 0x24c8 <conv_int+0xbc>
    24b8:	c6 ff       	sbrs	r28, 6
    24ba:	f8 cf       	rjmp	.-16     	; 0x24ac <conv_int+0xa0>
    24bc:	2f 7d       	andi	r18, 0xDF	; 223
    24be:	3f ee       	ldi	r19, 0xEF	; 239
    24c0:	32 0f       	add	r19, r18
    24c2:	36 30       	cpi	r19, 0x06	; 6
    24c4:	98 f7       	brcc	.-26     	; 0x24ac <conv_int+0xa0>
    24c6:	27 50       	subi	r18, 0x07	; 7
    24c8:	4c 2f       	mov	r20, r28
    24ca:	c5 01       	movw	r24, r10
    24cc:	b4 01       	movw	r22, r8
    24ce:	0e 94 c6 11 	call	0x238c	; 0x238c <mulacc>
    24d2:	4b 01       	movw	r8, r22
    24d4:	5c 01       	movw	r10, r24
    24d6:	c2 60       	ori	r28, 0x02	; 2
    24d8:	01 50       	subi	r16, 0x01	; 1
    24da:	11 09       	sbc	r17, r1
    24dc:	59 f0       	breq	.+22     	; 0x24f4 <conv_int+0xe8>
    24de:	c7 01       	movw	r24, r14
    24e0:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    24e4:	97 ff       	sbrs	r25, 7
    24e6:	dc cf       	rjmp	.-72     	; 0x24a0 <conv_int+0x94>
    24e8:	c1 fd       	sbrc	r28, 1
    24ea:	04 c0       	rjmp	.+8      	; 0x24f4 <conv_int+0xe8>
    24ec:	a7 cf       	rjmp	.-178    	; 0x243c <conv_int+0x30>
    24ee:	81 2c       	mov	r8, r1
    24f0:	91 2c       	mov	r9, r1
    24f2:	54 01       	movw	r10, r8
    24f4:	c7 ff       	sbrs	r28, 7
    24f6:	08 c0       	rjmp	.+16     	; 0x2508 <conv_int+0xfc>
    24f8:	b0 94       	com	r11
    24fa:	a0 94       	com	r10
    24fc:	90 94       	com	r9
    24fe:	80 94       	com	r8
    2500:	81 1c       	adc	r8, r1
    2502:	91 1c       	adc	r9, r1
    2504:	a1 1c       	adc	r10, r1
    2506:	b1 1c       	adc	r11, r1
    2508:	2c 2f       	mov	r18, r28
    250a:	b5 01       	movw	r22, r10
    250c:	a4 01       	movw	r20, r8
    250e:	c6 01       	movw	r24, r12
    2510:	0e 94 ba 11 	call	0x2374	; 0x2374 <putval>
    2514:	81 e0       	ldi	r24, 0x01	; 1
    2516:	cd b7       	in	r28, 0x3d	; 61
    2518:	de b7       	in	r29, 0x3e	; 62
    251a:	ec e0       	ldi	r30, 0x0C	; 12
    251c:	0c 94 64 19 	jmp	0x32c8	; 0x32c8 <__epilogue_restores__+0xc>

00002520 <conv_brk>:
    2520:	a0 e2       	ldi	r26, 0x20	; 32
    2522:	b0 e0       	ldi	r27, 0x00	; 0
    2524:	e6 e9       	ldi	r30, 0x96	; 150
    2526:	f2 e1       	ldi	r31, 0x12	; 18
    2528:	0c 94 47 19 	jmp	0x328e	; 0x328e <__prologue_saves__+0x4>
    252c:	5c 01       	movw	r10, r24
    252e:	4b 01       	movw	r8, r22
    2530:	7a 01       	movw	r14, r20
    2532:	8e 01       	movw	r16, r28
    2534:	0f 5f       	subi	r16, 0xFF	; 255
    2536:	1f 4f       	sbci	r17, 0xFF	; 255
    2538:	68 01       	movw	r12, r16
    253a:	80 e2       	ldi	r24, 0x20	; 32
    253c:	f8 01       	movw	r30, r16
    253e:	11 92       	st	Z+, r1
    2540:	8a 95       	dec	r24
    2542:	e9 f7       	brne	.-6      	; 0x253e <conv_brk+0x1e>
    2544:	f5 01       	movw	r30, r10
    2546:	53 80       	ldd	r5, Z+3	; 0x03
    2548:	40 e0       	ldi	r20, 0x00	; 0
    254a:	50 e0       	ldi	r21, 0x00	; 0
    254c:	61 2c       	mov	r6, r1
    254e:	90 e0       	ldi	r25, 0x00	; 0
    2550:	71 2c       	mov	r7, r1
    2552:	a1 e0       	ldi	r26, 0x01	; 1
    2554:	b0 e0       	ldi	r27, 0x00	; 0
    2556:	f9 01       	movw	r30, r18
    2558:	53 fc       	sbrc	r5, 3
    255a:	85 91       	lpm	r24, Z+
    255c:	53 fe       	sbrs	r5, 3
    255e:	81 91       	ld	r24, Z+
    2560:	8f 01       	movw	r16, r30
    2562:	48 2e       	mov	r4, r24
    2564:	9f 01       	movw	r18, r30
    2566:	81 11       	cpse	r24, r1
    2568:	03 c0       	rjmp	.+6      	; 0x2570 <conv_brk+0x50>
    256a:	80 e0       	ldi	r24, 0x00	; 0
    256c:	90 e0       	ldi	r25, 0x00	; 0
    256e:	96 c0       	rjmp	.+300    	; 0x269c <conv_brk+0x17c>
    2570:	8e 35       	cpi	r24, 0x5E	; 94
    2572:	19 f4       	brne	.+6      	; 0x257a <conv_brk+0x5a>
    2574:	41 15       	cp	r20, r1
    2576:	51 05       	cpc	r21, r1
    2578:	51 f1       	breq	.+84     	; 0x25ce <conv_brk+0xae>
    257a:	67 2d       	mov	r22, r7
    257c:	70 e0       	ldi	r23, 0x00	; 0
    257e:	64 17       	cp	r22, r20
    2580:	75 07       	cpc	r23, r21
    2582:	3c f4       	brge	.+14     	; 0x2592 <conv_brk+0x72>
    2584:	8d 35       	cpi	r24, 0x5D	; 93
    2586:	61 f1       	breq	.+88     	; 0x25e0 <conv_brk+0xc0>
    2588:	8d 32       	cpi	r24, 0x2D	; 45
    258a:	19 f4       	brne	.+6      	; 0x2592 <conv_brk+0x72>
    258c:	99 23       	and	r25, r25
    258e:	11 f1       	breq	.+68     	; 0x25d4 <conv_brk+0xb4>
    2590:	03 c0       	rjmp	.+6      	; 0x2598 <conv_brk+0x78>
    2592:	99 23       	and	r25, r25
    2594:	09 f4       	brne	.+2      	; 0x2598 <conv_brk+0x78>
    2596:	6d c0       	rjmp	.+218    	; 0x2672 <conv_brk+0x152>
    2598:	84 2d       	mov	r24, r4
    259a:	86 95       	lsr	r24
    259c:	86 95       	lsr	r24
    259e:	86 95       	lsr	r24
    25a0:	f6 01       	movw	r30, r12
    25a2:	e8 0f       	add	r30, r24
    25a4:	f1 1d       	adc	r31, r1
    25a6:	84 2d       	mov	r24, r4
    25a8:	87 70       	andi	r24, 0x07	; 7
    25aa:	8d 01       	movw	r16, r26
    25ac:	02 c0       	rjmp	.+4      	; 0x25b2 <conv_brk+0x92>
    25ae:	00 0f       	add	r16, r16
    25b0:	11 1f       	adc	r17, r17
    25b2:	8a 95       	dec	r24
    25b4:	e2 f7       	brpl	.-8      	; 0x25ae <conv_brk+0x8e>
    25b6:	c8 01       	movw	r24, r16
    25b8:	90 81       	ld	r25, Z
    25ba:	89 2b       	or	r24, r25
    25bc:	80 83       	st	Z, r24
    25be:	64 14       	cp	r6, r4
    25c0:	59 f0       	breq	.+22     	; 0x25d8 <conv_brk+0xb8>
    25c2:	46 14       	cp	r4, r6
    25c4:	10 f4       	brcc	.+4      	; 0x25ca <conv_brk+0xaa>
    25c6:	43 94       	inc	r4
    25c8:	e7 cf       	rjmp	.-50     	; 0x2598 <conv_brk+0x78>
    25ca:	4a 94       	dec	r4
    25cc:	e5 cf       	rjmp	.-54     	; 0x2598 <conv_brk+0x78>
    25ce:	77 24       	eor	r7, r7
    25d0:	73 94       	inc	r7
    25d2:	03 c0       	rjmp	.+6      	; 0x25da <conv_brk+0xba>
    25d4:	91 e0       	ldi	r25, 0x01	; 1
    25d6:	01 c0       	rjmp	.+2      	; 0x25da <conv_brk+0xba>
    25d8:	90 e0       	ldi	r25, 0x00	; 0
    25da:	4f 5f       	subi	r20, 0xFF	; 255
    25dc:	5f 4f       	sbci	r21, 0xFF	; 255
    25de:	bb cf       	rjmp	.-138    	; 0x2556 <conv_brk+0x36>
    25e0:	99 23       	and	r25, r25
    25e2:	19 f0       	breq	.+6      	; 0x25ea <conv_brk+0xca>
    25e4:	8e 81       	ldd	r24, Y+6	; 0x06
    25e6:	80 62       	ori	r24, 0x20	; 32
    25e8:	8e 83       	std	Y+6, r24	; 0x06
    25ea:	71 10       	cpse	r7, r1
    25ec:	03 c0       	rjmp	.+6      	; 0x25f4 <conv_brk+0xd4>
    25ee:	77 24       	eor	r7, r7
    25f0:	73 94       	inc	r7
    25f2:	19 c0       	rjmp	.+50     	; 0x2626 <conv_brk+0x106>
    25f4:	f6 01       	movw	r30, r12
    25f6:	9e 01       	movw	r18, r28
    25f8:	2f 5d       	subi	r18, 0xDF	; 223
    25fa:	3f 4f       	sbci	r19, 0xFF	; 255
    25fc:	80 81       	ld	r24, Z
    25fe:	80 95       	com	r24
    2600:	81 93       	st	Z+, r24
    2602:	2e 17       	cp	r18, r30
    2604:	3f 07       	cpc	r19, r31
    2606:	d1 f7       	brne	.-12     	; 0x25fc <conv_brk+0xdc>
    2608:	f2 cf       	rjmp	.-28     	; 0x25ee <conv_brk+0xce>
    260a:	e1 14       	cp	r14, r1
    260c:	f1 04       	cpc	r15, r1
    260e:	31 f0       	breq	.+12     	; 0x261c <conv_brk+0xfc>
    2610:	f7 01       	movw	r30, r14
    2612:	80 83       	st	Z, r24
    2614:	b7 01       	movw	r22, r14
    2616:	6f 5f       	subi	r22, 0xFF	; 255
    2618:	7f 4f       	sbci	r23, 0xFF	; 255
    261a:	7b 01       	movw	r14, r22
    261c:	71 e0       	ldi	r23, 0x01	; 1
    261e:	87 1a       	sub	r8, r23
    2620:	91 08       	sbc	r9, r1
    2622:	71 2c       	mov	r7, r1
    2624:	f9 f0       	breq	.+62     	; 0x2664 <conv_brk+0x144>
    2626:	c5 01       	movw	r24, r10
    2628:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    262c:	97 fd       	sbrc	r25, 7
    262e:	18 c0       	rjmp	.+48     	; 0x2660 <conv_brk+0x140>
    2630:	fc 01       	movw	r30, r24
    2632:	ff 27       	eor	r31, r31
    2634:	23 e0       	ldi	r18, 0x03	; 3
    2636:	f5 95       	asr	r31
    2638:	e7 95       	ror	r30
    263a:	2a 95       	dec	r18
    263c:	e1 f7       	brne	.-8      	; 0x2636 <conv_brk+0x116>
    263e:	ec 0d       	add	r30, r12
    2640:	fd 1d       	adc	r31, r13
    2642:	20 81       	ld	r18, Z
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	ac 01       	movw	r20, r24
    2648:	47 70       	andi	r20, 0x07	; 7
    264a:	55 27       	eor	r21, r21
    264c:	02 c0       	rjmp	.+4      	; 0x2652 <conv_brk+0x132>
    264e:	35 95       	asr	r19
    2650:	27 95       	ror	r18
    2652:	4a 95       	dec	r20
    2654:	e2 f7       	brpl	.-8      	; 0x264e <conv_brk+0x12e>
    2656:	20 fd       	sbrc	r18, 0
    2658:	d8 cf       	rjmp	.-80     	; 0x260a <conv_brk+0xea>
    265a:	b5 01       	movw	r22, r10
    265c:	0e 94 87 1b 	call	0x370e	; 0x370e <ungetc>
    2660:	71 10       	cpse	r7, r1
    2662:	83 cf       	rjmp	.-250    	; 0x256a <conv_brk+0x4a>
    2664:	e1 14       	cp	r14, r1
    2666:	f1 04       	cpc	r15, r1
    2668:	11 f0       	breq	.+4      	; 0x266e <conv_brk+0x14e>
    266a:	f7 01       	movw	r30, r14
    266c:	10 82       	st	Z, r1
    266e:	c8 01       	movw	r24, r16
    2670:	15 c0       	rjmp	.+42     	; 0x269c <conv_brk+0x17c>
    2672:	68 2f       	mov	r22, r24
    2674:	66 95       	lsr	r22
    2676:	66 95       	lsr	r22
    2678:	66 95       	lsr	r22
    267a:	f6 01       	movw	r30, r12
    267c:	e6 0f       	add	r30, r22
    267e:	f1 1d       	adc	r31, r1
    2680:	68 2f       	mov	r22, r24
    2682:	67 70       	andi	r22, 0x07	; 7
    2684:	8d 01       	movw	r16, r26
    2686:	02 c0       	rjmp	.+4      	; 0x268c <conv_brk+0x16c>
    2688:	00 0f       	add	r16, r16
    268a:	11 1f       	adc	r17, r17
    268c:	6a 95       	dec	r22
    268e:	e2 f7       	brpl	.-8      	; 0x2688 <conv_brk+0x168>
    2690:	b8 01       	movw	r22, r16
    2692:	70 81       	ld	r23, Z
    2694:	67 2b       	or	r22, r23
    2696:	60 83       	st	Z, r22
    2698:	68 2e       	mov	r6, r24
    269a:	9f cf       	rjmp	.-194    	; 0x25da <conv_brk+0xba>
    269c:	a0 96       	adiw	r28, 0x20	; 32
    269e:	e0 e1       	ldi	r30, 0x10	; 16
    26a0:	0c 94 60 19 	jmp	0x32c0	; 0x32c0 <__epilogue_restores__+0x4>

000026a4 <conv_flt>:
    26a4:	2f 92       	push	r2
    26a6:	3f 92       	push	r3
    26a8:	4f 92       	push	r4
    26aa:	5f 92       	push	r5
    26ac:	6f 92       	push	r6
    26ae:	7f 92       	push	r7
    26b0:	9f 92       	push	r9
    26b2:	af 92       	push	r10
    26b4:	bf 92       	push	r11
    26b6:	cf 92       	push	r12
    26b8:	df 92       	push	r13
    26ba:	ef 92       	push	r14
    26bc:	ff 92       	push	r15
    26be:	0f 93       	push	r16
    26c0:	1f 93       	push	r17
    26c2:	cf 93       	push	r28
    26c4:	df 93       	push	r29
    26c6:	6c 01       	movw	r12, r24
    26c8:	8b 01       	movw	r16, r22
    26ca:	1a 01       	movw	r2, r20
    26cc:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    26d0:	ec 01       	movw	r28, r24
    26d2:	99 27       	eor	r25, r25
    26d4:	8b 32       	cpi	r24, 0x2B	; 43
    26d6:	91 05       	cpc	r25, r1
    26d8:	29 f0       	breq	.+10     	; 0x26e4 <conv_flt+0x40>
    26da:	8d 97       	sbiw	r24, 0x2d	; 45
    26dc:	81 f4       	brne	.+32     	; 0x26fe <conv_flt+0x5a>
    26de:	30 e8       	ldi	r19, 0x80	; 128
    26e0:	93 2e       	mov	r9, r19
    26e2:	01 c0       	rjmp	.+2      	; 0x26e6 <conv_flt+0x42>
    26e4:	91 2c       	mov	r9, r1
    26e6:	01 50       	subi	r16, 0x01	; 1
    26e8:	11 09       	sbc	r17, r1
    26ea:	11 f4       	brne	.+4      	; 0x26f0 <conv_flt+0x4c>
    26ec:	80 e0       	ldi	r24, 0x00	; 0
    26ee:	0c c1       	rjmp	.+536    	; 0x2908 <conv_flt+0x264>
    26f0:	c6 01       	movw	r24, r12
    26f2:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    26f6:	ec 01       	movw	r28, r24
    26f8:	97 ff       	sbrs	r25, 7
    26fa:	02 c0       	rjmp	.+4      	; 0x2700 <conv_flt+0x5c>
    26fc:	f7 cf       	rjmp	.-18     	; 0x26ec <conv_flt+0x48>
    26fe:	91 2c       	mov	r9, r1
    2700:	ce 01       	movw	r24, r28
    2702:	0e 94 57 1a 	call	0x34ae	; 0x34ae <tolower>
    2706:	89 36       	cpi	r24, 0x69	; 105
    2708:	91 05       	cpc	r25, r1
    270a:	31 f0       	breq	.+12     	; 0x2718 <conv_flt+0x74>
    270c:	8e 36       	cpi	r24, 0x6E	; 110
    270e:	91 05       	cpc	r25, r1
    2710:	99 f5       	brne	.+102    	; 0x2778 <conv_flt+0xd4>
    2712:	cc e8       	ldi	r28, 0x8C	; 140
    2714:	d1 e0       	ldi	r29, 0x01	; 1
    2716:	02 c0       	rjmp	.+4      	; 0x271c <conv_flt+0x78>
    2718:	cf e8       	ldi	r28, 0x8F	; 143
    271a:	d1 e0       	ldi	r29, 0x01	; 1
    271c:	21 96       	adiw	r28, 0x01	; 1
    271e:	fe 01       	movw	r30, r28
    2720:	31 97       	sbiw	r30, 0x01	; 1
    2722:	b4 90       	lpm	r11, Z
    2724:	bb 20       	and	r11, r11
    2726:	c9 f0       	breq	.+50     	; 0x275a <conv_flt+0xb6>
    2728:	01 50       	subi	r16, 0x01	; 1
    272a:	11 09       	sbc	r17, r1
    272c:	91 f0       	breq	.+36     	; 0x2752 <conv_flt+0xae>
    272e:	c6 01       	movw	r24, r12
    2730:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2734:	7c 01       	movw	r14, r24
    2736:	97 fd       	sbrc	r25, 7
    2738:	0c c0       	rjmp	.+24     	; 0x2752 <conv_flt+0xae>
    273a:	0e 94 57 1a 	call	0x34ae	; 0x34ae <tolower>
    273e:	99 27       	eor	r25, r25
    2740:	eb 2d       	mov	r30, r11
    2742:	f0 e0       	ldi	r31, 0x00	; 0
    2744:	8e 17       	cp	r24, r30
    2746:	9f 07       	cpc	r25, r31
    2748:	49 f3       	breq	.-46     	; 0x271c <conv_flt+0x78>
    274a:	b6 01       	movw	r22, r12
    274c:	c7 01       	movw	r24, r14
    274e:	0e 94 87 1b 	call	0x370e	; 0x370e <ungetc>
    2752:	c2 59       	subi	r28, 0x92	; 146
    2754:	d1 40       	sbci	r29, 0x01	; 1
    2756:	51 f6       	brne	.-108    	; 0x26ec <conv_flt+0x48>
    2758:	03 c0       	rjmp	.+6      	; 0x2760 <conv_flt+0xbc>
    275a:	cf 58       	subi	r28, 0x8F	; 143
    275c:	d1 40       	sbci	r29, 0x01	; 1
    275e:	29 f0       	breq	.+10     	; 0x276a <conv_flt+0xc6>
    2760:	80 e0       	ldi	r24, 0x00	; 0
    2762:	90 e0       	ldi	r25, 0x00	; 0
    2764:	a0 e8       	ldi	r26, 0x80	; 128
    2766:	bf e7       	ldi	r27, 0x7F	; 127
    2768:	04 c0       	rjmp	.+8      	; 0x2772 <conv_flt+0xce>
    276a:	80 e0       	ldi	r24, 0x00	; 0
    276c:	90 e0       	ldi	r25, 0x00	; 0
    276e:	a0 ec       	ldi	r26, 0xC0	; 192
    2770:	bf e7       	ldi	r27, 0x7F	; 127
    2772:	bc 01       	movw	r22, r24
    2774:	cd 01       	movw	r24, r26
    2776:	b8 c0       	rjmp	.+368    	; 0x28e8 <conv_flt+0x244>
    2778:	41 2c       	mov	r4, r1
    277a:	51 2c       	mov	r5, r1
    277c:	32 01       	movw	r6, r4
    277e:	e1 2c       	mov	r14, r1
    2780:	f1 2c       	mov	r15, r1
    2782:	2c 2f       	mov	r18, r28
    2784:	20 53       	subi	r18, 0x30	; 48
    2786:	2a 30       	cpi	r18, 0x0A	; 10
    2788:	10 f5       	brcc	.+68     	; 0x27ce <conv_flt+0x12a>
    278a:	e9 2d       	mov	r30, r9
    278c:	e2 60       	ori	r30, 0x02	; 2
    278e:	be 2e       	mov	r11, r30
    2790:	89 2d       	mov	r24, r9
    2792:	88 70       	andi	r24, 0x08	; 8
    2794:	92 fe       	sbrs	r9, 2
    2796:	06 c0       	rjmp	.+12     	; 0x27a4 <conv_flt+0x100>
    2798:	81 11       	cpse	r24, r1
    279a:	20 c0       	rjmp	.+64     	; 0x27dc <conv_flt+0x138>
    279c:	ff ef       	ldi	r31, 0xFF	; 255
    279e:	ef 1a       	sub	r14, r31
    27a0:	ff 0a       	sbc	r15, r31
    27a2:	1c c0       	rjmp	.+56     	; 0x27dc <conv_flt+0x138>
    27a4:	88 23       	and	r24, r24
    27a6:	19 f0       	breq	.+6      	; 0x27ae <conv_flt+0x10a>
    27a8:	81 e0       	ldi	r24, 0x01	; 1
    27aa:	e8 1a       	sub	r14, r24
    27ac:	f1 08       	sbc	r15, r1
    27ae:	40 e2       	ldi	r20, 0x20	; 32
    27b0:	c3 01       	movw	r24, r6
    27b2:	b2 01       	movw	r22, r4
    27b4:	0e 94 c6 11 	call	0x238c	; 0x238c <mulacc>
    27b8:	2b 01       	movw	r4, r22
    27ba:	3c 01       	movw	r6, r24
    27bc:	68 39       	cpi	r22, 0x98	; 152
    27be:	79 49       	sbci	r23, 0x99	; 153
    27c0:	89 49       	sbci	r24, 0x99	; 153
    27c2:	99 41       	sbci	r25, 0x19	; 25
    27c4:	58 f0       	brcs	.+22     	; 0x27dc <conv_flt+0x138>
    27c6:	f9 2d       	mov	r31, r9
    27c8:	f6 60       	ori	r31, 0x06	; 6
    27ca:	bf 2e       	mov	r11, r31
    27cc:	07 c0       	rjmp	.+14     	; 0x27dc <conv_flt+0x138>
    27ce:	2e 3f       	cpi	r18, 0xFE	; 254
    27d0:	89 f4       	brne	.+34     	; 0x27f4 <conv_flt+0x150>
    27d2:	93 fc       	sbrc	r9, 3
    27d4:	0f c0       	rjmp	.+30     	; 0x27f4 <conv_flt+0x150>
    27d6:	29 2d       	mov	r18, r9
    27d8:	28 60       	ori	r18, 0x08	; 8
    27da:	b2 2e       	mov	r11, r18
    27dc:	01 50       	subi	r16, 0x01	; 1
    27de:	11 09       	sbc	r17, r1
    27e0:	41 f0       	breq	.+16     	; 0x27f2 <conv_flt+0x14e>
    27e2:	c6 01       	movw	r24, r12
    27e4:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    27e8:	ec 01       	movw	r28, r24
    27ea:	9b 2c       	mov	r9, r11
    27ec:	97 ff       	sbrs	r25, 7
    27ee:	c9 cf       	rjmp	.-110    	; 0x2782 <conv_flt+0xde>
    27f0:	01 c0       	rjmp	.+2      	; 0x27f4 <conv_flt+0x150>
    27f2:	9b 2c       	mov	r9, r11
    27f4:	91 fe       	sbrs	r9, 1
    27f6:	7a cf       	rjmp	.-268    	; 0x26ec <conv_flt+0x48>
    27f8:	ce 01       	movw	r24, r28
    27fa:	8f 7d       	andi	r24, 0xDF	; 223
    27fc:	99 27       	eor	r25, r25
    27fe:	85 34       	cpi	r24, 0x45	; 69
    2800:	91 05       	cpc	r25, r1
    2802:	09 f0       	breq	.+2      	; 0x2806 <conv_flt+0x162>
    2804:	42 c0       	rjmp	.+132    	; 0x288a <conv_flt+0x1e6>
    2806:	58 01       	movw	r10, r16
    2808:	81 e0       	ldi	r24, 0x01	; 1
    280a:	a8 1a       	sub	r10, r24
    280c:	b1 08       	sbc	r11, r1
    280e:	09 f4       	brne	.+2      	; 0x2812 <conv_flt+0x16e>
    2810:	6d cf       	rjmp	.-294    	; 0x26ec <conv_flt+0x48>
    2812:	c6 01       	movw	r24, r12
    2814:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2818:	ec 01       	movw	r28, r24
    281a:	97 fd       	sbrc	r25, 7
    281c:	67 cf       	rjmp	.-306    	; 0x26ec <conv_flt+0x48>
    281e:	99 27       	eor	r25, r25
    2820:	8b 32       	cpi	r24, 0x2B	; 43
    2822:	91 05       	cpc	r25, r1
    2824:	29 f0       	breq	.+10     	; 0x2830 <conv_flt+0x18c>
    2826:	8d 97       	sbiw	r24, 0x2d	; 45
    2828:	69 f4       	brne	.+26     	; 0x2844 <conv_flt+0x1a0>
    282a:	e9 2d       	mov	r30, r9
    282c:	e0 61       	ori	r30, 0x10	; 16
    282e:	9e 2e       	mov	r9, r30
    2830:	58 01       	movw	r10, r16
    2832:	f2 e0       	ldi	r31, 0x02	; 2
    2834:	af 1a       	sub	r10, r31
    2836:	b1 08       	sbc	r11, r1
    2838:	09 f4       	brne	.+2      	; 0x283c <conv_flt+0x198>
    283a:	58 cf       	rjmp	.-336    	; 0x26ec <conv_flt+0x48>
    283c:	c6 01       	movw	r24, r12
    283e:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2842:	ec 01       	movw	r28, r24
    2844:	ce 01       	movw	r24, r28
    2846:	c0 97       	sbiw	r24, 0x30	; 48
    2848:	0a 97       	sbiw	r24, 0x0a	; 10
    284a:	08 f0       	brcs	.+2      	; 0x284e <conv_flt+0x1aa>
    284c:	4f cf       	rjmp	.-354    	; 0x26ec <conv_flt+0x48>
    284e:	85 01       	movw	r16, r10
    2850:	a1 2c       	mov	r10, r1
    2852:	b1 2c       	mov	r11, r1
    2854:	b5 01       	movw	r22, r10
    2856:	bb 0c       	add	r11, r11
    2858:	88 0b       	sbc	r24, r24
    285a:	99 0b       	sbc	r25, r25
    285c:	2c 2f       	mov	r18, r28
    285e:	20 53       	subi	r18, 0x30	; 48
    2860:	40 e2       	ldi	r20, 0x20	; 32
    2862:	0e 94 c6 11 	call	0x238c	; 0x238c <mulacc>
    2866:	5b 01       	movw	r10, r22
    2868:	01 50       	subi	r16, 0x01	; 1
    286a:	11 09       	sbc	r17, r1
    286c:	39 f0       	breq	.+14     	; 0x287c <conv_flt+0x1d8>
    286e:	c6 01       	movw	r24, r12
    2870:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2874:	ec 01       	movw	r28, r24
    2876:	c0 97       	sbiw	r24, 0x30	; 48
    2878:	0a 97       	sbiw	r24, 0x0a	; 10
    287a:	60 f3       	brcs	.-40     	; 0x2854 <conv_flt+0x1b0>
    287c:	94 fe       	sbrs	r9, 4
    287e:	03 c0       	rjmp	.+6      	; 0x2886 <conv_flt+0x1e2>
    2880:	b1 94       	neg	r11
    2882:	a1 94       	neg	r10
    2884:	b1 08       	sbc	r11, r1
    2886:	ea 0c       	add	r14, r10
    2888:	fb 1c       	adc	r15, r11
    288a:	01 2b       	or	r16, r17
    288c:	31 f0       	breq	.+12     	; 0x289a <conv_flt+0x1f6>
    288e:	d7 fd       	sbrc	r29, 7
    2890:	04 c0       	rjmp	.+8      	; 0x289a <conv_flt+0x1f6>
    2892:	b6 01       	movw	r22, r12
    2894:	ce 01       	movw	r24, r28
    2896:	0e 94 87 1b 	call	0x370e	; 0x370e <ungetc>
    289a:	c3 01       	movw	r24, r6
    289c:	b2 01       	movw	r22, r4
    289e:	0e 94 96 10 	call	0x212c	; 0x212c <__floatunsisf>
    28a2:	f7 fe       	sbrs	r15, 7
    28a4:	06 c0       	rjmp	.+12     	; 0x28b2 <conv_flt+0x20e>
    28a6:	f1 94       	neg	r15
    28a8:	e1 94       	neg	r14
    28aa:	f1 08       	sbc	r15, r1
    28ac:	cb ea       	ldi	r28, 0xAB	; 171
    28ae:	d1 e0       	ldi	r29, 0x01	; 1
    28b0:	02 c0       	rjmp	.+4      	; 0x28b6 <conv_flt+0x212>
    28b2:	c3 ec       	ldi	r28, 0xC3	; 195
    28b4:	d1 e0       	ldi	r29, 0x01	; 1
    28b6:	6e 01       	movw	r12, r28
    28b8:	28 e1       	ldi	r18, 0x18	; 24
    28ba:	c2 1a       	sub	r12, r18
    28bc:	d1 08       	sbc	r13, r1
    28be:	00 e2       	ldi	r16, 0x20	; 32
    28c0:	10 e0       	ldi	r17, 0x00	; 0
    28c2:	e0 16       	cp	r14, r16
    28c4:	f1 06       	cpc	r15, r17
    28c6:	50 f0       	brcs	.+20     	; 0x28dc <conv_flt+0x238>
    28c8:	fe 01       	movw	r30, r28
    28ca:	25 91       	lpm	r18, Z+
    28cc:	35 91       	lpm	r19, Z+
    28ce:	45 91       	lpm	r20, Z+
    28d0:	54 91       	lpm	r21, Z
    28d2:	0e 94 29 11 	call	0x2252	; 0x2252 <__mulsf3>
    28d6:	e0 1a       	sub	r14, r16
    28d8:	f1 0a       	sbc	r15, r17
    28da:	f3 cf       	rjmp	.-26     	; 0x28c2 <conv_flt+0x21e>
    28dc:	24 97       	sbiw	r28, 0x04	; 4
    28de:	16 95       	lsr	r17
    28e0:	07 95       	ror	r16
    28e2:	cc 16       	cp	r12, r28
    28e4:	dd 06       	cpc	r13, r29
    28e6:	69 f7       	brne	.-38     	; 0x28c2 <conv_flt+0x21e>
    28e8:	97 fe       	sbrs	r9, 7
    28ea:	05 c0       	rjmp	.+10     	; 0x28f6 <conv_flt+0x252>
    28ec:	dc 01       	movw	r26, r24
    28ee:	cb 01       	movw	r24, r22
    28f0:	b0 58       	subi	r27, 0x80	; 128
    28f2:	bc 01       	movw	r22, r24
    28f4:	cd 01       	movw	r24, r26
    28f6:	21 14       	cp	r2, r1
    28f8:	31 04       	cpc	r3, r1
    28fa:	29 f0       	breq	.+10     	; 0x2906 <conv_flt+0x262>
    28fc:	f1 01       	movw	r30, r2
    28fe:	60 83       	st	Z, r22
    2900:	71 83       	std	Z+1, r23	; 0x01
    2902:	82 83       	std	Z+2, r24	; 0x02
    2904:	93 83       	std	Z+3, r25	; 0x03
    2906:	81 e0       	ldi	r24, 0x01	; 1
    2908:	df 91       	pop	r29
    290a:	cf 91       	pop	r28
    290c:	1f 91       	pop	r17
    290e:	0f 91       	pop	r16
    2910:	ff 90       	pop	r15
    2912:	ef 90       	pop	r14
    2914:	df 90       	pop	r13
    2916:	cf 90       	pop	r12
    2918:	bf 90       	pop	r11
    291a:	af 90       	pop	r10
    291c:	9f 90       	pop	r9
    291e:	7f 90       	pop	r7
    2920:	6f 90       	pop	r6
    2922:	5f 90       	pop	r5
    2924:	4f 90       	pop	r4
    2926:	3f 90       	pop	r3
    2928:	2f 90       	pop	r2
    292a:	08 95       	ret

0000292c <vfscanf>:
    292c:	a0 e0       	ldi	r26, 0x00	; 0
    292e:	b0 e0       	ldi	r27, 0x00	; 0
    2930:	ec e9       	ldi	r30, 0x9C	; 156
    2932:	f4 e1       	ldi	r31, 0x14	; 20
    2934:	0c 94 49 19 	jmp	0x3292	; 0x3292 <__prologue_saves__+0x8>
    2938:	5c 01       	movw	r10, r24
    293a:	eb 01       	movw	r28, r22
    293c:	4a 01       	movw	r8, r20
    293e:	fc 01       	movw	r30, r24
    2940:	16 82       	std	Z+6, r1	; 0x06
    2942:	17 82       	std	Z+7, r1	; 0x07
    2944:	61 2c       	mov	r6, r1
    2946:	f5 01       	movw	r30, r10
    2948:	03 81       	ldd	r16, Z+3	; 0x03
    294a:	fe 01       	movw	r30, r28
    294c:	03 fd       	sbrc	r16, 3
    294e:	85 91       	lpm	r24, Z+
    2950:	03 ff       	sbrs	r16, 3
    2952:	81 91       	ld	r24, Z+
    2954:	18 2f       	mov	r17, r24
    2956:	ef 01       	movw	r28, r30
    2958:	88 23       	and	r24, r24
    295a:	09 f4       	brne	.+2      	; 0x295e <vfscanf+0x32>
    295c:	0f c1       	rjmp	.+542    	; 0x2b7c <vfscanf+0x250>
    295e:	90 e0       	ldi	r25, 0x00	; 0
    2960:	0e 94 4e 1a 	call	0x349c	; 0x349c <isspace>
    2964:	89 2b       	or	r24, r25
    2966:	21 f0       	breq	.+8      	; 0x2970 <vfscanf+0x44>
    2968:	c5 01       	movw	r24, r10
    296a:	0e 94 ed 11 	call	0x23da	; 0x23da <skip_spaces>
    296e:	eb cf       	rjmp	.-42     	; 0x2946 <vfscanf+0x1a>
    2970:	15 32       	cpi	r17, 0x25	; 37
    2972:	41 f4       	brne	.+16     	; 0x2984 <vfscanf+0x58>
    2974:	fe 01       	movw	r30, r28
    2976:	03 fd       	sbrc	r16, 3
    2978:	15 91       	lpm	r17, Z+
    297a:	03 ff       	sbrs	r16, 3
    297c:	11 91       	ld	r17, Z+
    297e:	ef 01       	movw	r28, r30
    2980:	15 32       	cpi	r17, 0x25	; 37
    2982:	81 f4       	brne	.+32     	; 0x29a4 <vfscanf+0x78>
    2984:	c5 01       	movw	r24, r10
    2986:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    298a:	97 fd       	sbrc	r25, 7
    298c:	f5 c0       	rjmp	.+490    	; 0x2b78 <vfscanf+0x24c>
    298e:	41 2f       	mov	r20, r17
    2990:	50 e0       	ldi	r21, 0x00	; 0
    2992:	9c 01       	movw	r18, r24
    2994:	33 27       	eor	r19, r19
    2996:	24 17       	cp	r18, r20
    2998:	35 07       	cpc	r19, r21
    299a:	a9 f2       	breq	.-86     	; 0x2946 <vfscanf+0x1a>
    299c:	b5 01       	movw	r22, r10
    299e:	0e 94 87 1b 	call	0x370e	; 0x370e <ungetc>
    29a2:	ec c0       	rjmp	.+472    	; 0x2b7c <vfscanf+0x250>
    29a4:	1a 32       	cpi	r17, 0x2A	; 42
    29a6:	41 f4       	brne	.+16     	; 0x29b8 <vfscanf+0x8c>
    29a8:	03 fd       	sbrc	r16, 3
    29aa:	15 91       	lpm	r17, Z+
    29ac:	03 ff       	sbrs	r16, 3
    29ae:	11 91       	ld	r17, Z+
    29b0:	ef 01       	movw	r28, r30
    29b2:	77 24       	eor	r7, r7
    29b4:	73 94       	inc	r7
    29b6:	01 c0       	rjmp	.+2      	; 0x29ba <vfscanf+0x8e>
    29b8:	71 2c       	mov	r7, r1
    29ba:	e1 2c       	mov	r14, r1
    29bc:	f1 2c       	mov	r15, r1
    29be:	20 ed       	ldi	r18, 0xD0	; 208
    29c0:	21 0f       	add	r18, r17
    29c2:	2a 30       	cpi	r18, 0x0A	; 10
    29c4:	88 f4       	brcc	.+34     	; 0x29e8 <vfscanf+0xbc>
    29c6:	f7 2d       	mov	r31, r7
    29c8:	f2 60       	ori	r31, 0x02	; 2
    29ca:	7f 2e       	mov	r7, r31
    29cc:	b7 01       	movw	r22, r14
    29ce:	80 e0       	ldi	r24, 0x00	; 0
    29d0:	90 e0       	ldi	r25, 0x00	; 0
    29d2:	40 e2       	ldi	r20, 0x20	; 32
    29d4:	0e 94 c6 11 	call	0x238c	; 0x238c <mulacc>
    29d8:	7b 01       	movw	r14, r22
    29da:	fe 01       	movw	r30, r28
    29dc:	03 fd       	sbrc	r16, 3
    29de:	15 91       	lpm	r17, Z+
    29e0:	03 ff       	sbrs	r16, 3
    29e2:	11 91       	ld	r17, Z+
    29e4:	ef 01       	movw	r28, r30
    29e6:	eb cf       	rjmp	.-42     	; 0x29be <vfscanf+0x92>
    29e8:	71 fe       	sbrs	r7, 1
    29ea:	04 c0       	rjmp	.+8      	; 0x29f4 <vfscanf+0xc8>
    29ec:	e1 14       	cp	r14, r1
    29ee:	f1 04       	cpc	r15, r1
    29f0:	21 f4       	brne	.+8      	; 0x29fa <vfscanf+0xce>
    29f2:	c4 c0       	rjmp	.+392    	; 0x2b7c <vfscanf+0x250>
    29f4:	ee 24       	eor	r14, r14
    29f6:	ea 94       	dec	r14
    29f8:	fe 2c       	mov	r15, r14
    29fa:	18 36       	cpi	r17, 0x68	; 104
    29fc:	19 f0       	breq	.+6      	; 0x2a04 <vfscanf+0xd8>
    29fe:	1c 36       	cpi	r17, 0x6C	; 108
    2a00:	61 f0       	breq	.+24     	; 0x2a1a <vfscanf+0xee>
    2a02:	14 c0       	rjmp	.+40     	; 0x2a2c <vfscanf+0x100>
    2a04:	fe 01       	movw	r30, r28
    2a06:	03 fd       	sbrc	r16, 3
    2a08:	15 91       	lpm	r17, Z+
    2a0a:	03 ff       	sbrs	r16, 3
    2a0c:	11 91       	ld	r17, Z+
    2a0e:	ef 01       	movw	r28, r30
    2a10:	18 36       	cpi	r17, 0x68	; 104
    2a12:	61 f4       	brne	.+24     	; 0x2a2c <vfscanf+0x100>
    2a14:	87 2d       	mov	r24, r7
    2a16:	88 60       	ori	r24, 0x08	; 8
    2a18:	78 2e       	mov	r7, r24
    2a1a:	97 2d       	mov	r25, r7
    2a1c:	94 60       	ori	r25, 0x04	; 4
    2a1e:	79 2e       	mov	r7, r25
    2a20:	fe 01       	movw	r30, r28
    2a22:	03 fd       	sbrc	r16, 3
    2a24:	15 91       	lpm	r17, Z+
    2a26:	03 ff       	sbrs	r16, 3
    2a28:	11 91       	ld	r17, Z+
    2a2a:	ef 01       	movw	r28, r30
    2a2c:	11 23       	and	r17, r17
    2a2e:	09 f4       	brne	.+2      	; 0x2a32 <vfscanf+0x106>
    2a30:	a5 c0       	rjmp	.+330    	; 0x2b7c <vfscanf+0x250>
    2a32:	61 2f       	mov	r22, r17
    2a34:	70 e0       	ldi	r23, 0x00	; 0
    2a36:	8a e7       	ldi	r24, 0x7A	; 122
    2a38:	91 e0       	ldi	r25, 0x01	; 1
    2a3a:	0e 94 5f 1a 	call	0x34be	; 0x34be <strchr_P>
    2a3e:	89 2b       	or	r24, r25
    2a40:	09 f4       	brne	.+2      	; 0x2a44 <vfscanf+0x118>
    2a42:	9c c0       	rjmp	.+312    	; 0x2b7c <vfscanf+0x250>
    2a44:	70 fc       	sbrc	r7, 0
    2a46:	07 c0       	rjmp	.+14     	; 0x2a56 <vfscanf+0x12a>
    2a48:	f4 01       	movw	r30, r8
    2a4a:	c0 80       	ld	r12, Z
    2a4c:	d1 80       	ldd	r13, Z+1	; 0x01
    2a4e:	c4 01       	movw	r24, r8
    2a50:	02 96       	adiw	r24, 0x02	; 2
    2a52:	4c 01       	movw	r8, r24
    2a54:	02 c0       	rjmp	.+4      	; 0x2a5a <vfscanf+0x12e>
    2a56:	c1 2c       	mov	r12, r1
    2a58:	d1 2c       	mov	r13, r1
    2a5a:	1e 36       	cpi	r17, 0x6E	; 110
    2a5c:	51 f4       	brne	.+20     	; 0x2a72 <vfscanf+0x146>
    2a5e:	f5 01       	movw	r30, r10
    2a60:	46 81       	ldd	r20, Z+6	; 0x06
    2a62:	57 81       	ldd	r21, Z+7	; 0x07
    2a64:	60 e0       	ldi	r22, 0x00	; 0
    2a66:	70 e0       	ldi	r23, 0x00	; 0
    2a68:	27 2d       	mov	r18, r7
    2a6a:	c6 01       	movw	r24, r12
    2a6c:	0e 94 ba 11 	call	0x2374	; 0x2374 <putval>
    2a70:	6a cf       	rjmp	.-300    	; 0x2946 <vfscanf+0x1a>
    2a72:	13 36       	cpi	r17, 0x63	; 99
    2a74:	b9 f4       	brne	.+46     	; 0x2aa4 <vfscanf+0x178>
    2a76:	71 fc       	sbrc	r7, 1
    2a78:	03 c0       	rjmp	.+6      	; 0x2a80 <vfscanf+0x154>
    2a7a:	ee 24       	eor	r14, r14
    2a7c:	e3 94       	inc	r14
    2a7e:	f1 2c       	mov	r15, r1
    2a80:	c5 01       	movw	r24, r10
    2a82:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2a86:	97 fd       	sbrc	r25, 7
    2a88:	77 c0       	rjmp	.+238    	; 0x2b78 <vfscanf+0x24c>
    2a8a:	c1 14       	cp	r12, r1
    2a8c:	d1 04       	cpc	r13, r1
    2a8e:	29 f0       	breq	.+10     	; 0x2a9a <vfscanf+0x16e>
    2a90:	f6 01       	movw	r30, r12
    2a92:	80 83       	st	Z, r24
    2a94:	c6 01       	movw	r24, r12
    2a96:	01 96       	adiw	r24, 0x01	; 1
    2a98:	6c 01       	movw	r12, r24
    2a9a:	91 e0       	ldi	r25, 0x01	; 1
    2a9c:	e9 1a       	sub	r14, r25
    2a9e:	f1 08       	sbc	r15, r1
    2aa0:	79 f7       	brne	.-34     	; 0x2a80 <vfscanf+0x154>
    2aa2:	66 c0       	rjmp	.+204    	; 0x2b70 <vfscanf+0x244>
    2aa4:	1b 35       	cpi	r17, 0x5B	; 91
    2aa6:	59 f4       	brne	.+22     	; 0x2abe <vfscanf+0x192>
    2aa8:	9e 01       	movw	r18, r28
    2aaa:	a6 01       	movw	r20, r12
    2aac:	b7 01       	movw	r22, r14
    2aae:	c5 01       	movw	r24, r10
    2ab0:	0e 94 90 12 	call	0x2520	; 0x2520 <conv_brk>
    2ab4:	ec 01       	movw	r28, r24
    2ab6:	89 2b       	or	r24, r25
    2ab8:	09 f0       	breq	.+2      	; 0x2abc <vfscanf+0x190>
    2aba:	5a c0       	rjmp	.+180    	; 0x2b70 <vfscanf+0x244>
    2abc:	54 c0       	rjmp	.+168    	; 0x2b66 <vfscanf+0x23a>
    2abe:	c5 01       	movw	r24, r10
    2ac0:	0e 94 ed 11 	call	0x23da	; 0x23da <skip_spaces>
    2ac4:	97 fd       	sbrc	r25, 7
    2ac6:	58 c0       	rjmp	.+176    	; 0x2b78 <vfscanf+0x24c>
    2ac8:	1f 36       	cpi	r17, 0x6F	; 111
    2aca:	e1 f1       	breq	.+120    	; 0x2b44 <vfscanf+0x218>
    2acc:	40 f4       	brcc	.+16     	; 0x2ade <vfscanf+0x1b2>
    2ace:	14 36       	cpi	r17, 0x64	; 100
    2ad0:	a9 f1       	breq	.+106    	; 0x2b3c <vfscanf+0x210>
    2ad2:	19 36       	cpi	r17, 0x69	; 105
    2ad4:	d1 f1       	breq	.+116    	; 0x2b4a <vfscanf+0x21e>
    2ad6:	18 35       	cpi	r17, 0x58	; 88
    2ad8:	09 f0       	breq	.+2      	; 0x2adc <vfscanf+0x1b0>
    2ada:	3e c0       	rjmp	.+124    	; 0x2b58 <vfscanf+0x22c>
    2adc:	2b c0       	rjmp	.+86     	; 0x2b34 <vfscanf+0x208>
    2ade:	13 37       	cpi	r17, 0x73	; 115
    2ae0:	a9 f0       	breq	.+42     	; 0x2b0c <vfscanf+0x1e0>
    2ae2:	18 f4       	brcc	.+6      	; 0x2aea <vfscanf+0x1be>
    2ae4:	10 37       	cpi	r17, 0x70	; 112
    2ae6:	31 f1       	breq	.+76     	; 0x2b34 <vfscanf+0x208>
    2ae8:	37 c0       	rjmp	.+110    	; 0x2b58 <vfscanf+0x22c>
    2aea:	15 37       	cpi	r17, 0x75	; 117
    2aec:	39 f1       	breq	.+78     	; 0x2b3c <vfscanf+0x210>
    2aee:	18 37       	cpi	r17, 0x78	; 120
    2af0:	09 f1       	breq	.+66     	; 0x2b34 <vfscanf+0x208>
    2af2:	32 c0       	rjmp	.+100    	; 0x2b58 <vfscanf+0x22c>
    2af4:	c1 14       	cp	r12, r1
    2af6:	d1 04       	cpc	r13, r1
    2af8:	29 f0       	breq	.+10     	; 0x2b04 <vfscanf+0x1d8>
    2afa:	f6 01       	movw	r30, r12
    2afc:	00 83       	st	Z, r16
    2afe:	c6 01       	movw	r24, r12
    2b00:	01 96       	adiw	r24, 0x01	; 1
    2b02:	6c 01       	movw	r12, r24
    2b04:	91 e0       	ldi	r25, 0x01	; 1
    2b06:	e9 1a       	sub	r14, r25
    2b08:	f1 08       	sbc	r15, r1
    2b0a:	71 f0       	breq	.+28     	; 0x2b28 <vfscanf+0x1fc>
    2b0c:	c5 01       	movw	r24, r10
    2b0e:	0e 94 de 1a 	call	0x35bc	; 0x35bc <fgetc>
    2b12:	8c 01       	movw	r16, r24
    2b14:	97 fd       	sbrc	r25, 7
    2b16:	08 c0       	rjmp	.+16     	; 0x2b28 <vfscanf+0x1fc>
    2b18:	0e 94 4e 1a 	call	0x349c	; 0x349c <isspace>
    2b1c:	89 2b       	or	r24, r25
    2b1e:	51 f3       	breq	.-44     	; 0x2af4 <vfscanf+0x1c8>
    2b20:	b5 01       	movw	r22, r10
    2b22:	c8 01       	movw	r24, r16
    2b24:	0e 94 87 1b 	call	0x370e	; 0x370e <ungetc>
    2b28:	c1 14       	cp	r12, r1
    2b2a:	d1 04       	cpc	r13, r1
    2b2c:	09 f1       	breq	.+66     	; 0x2b70 <vfscanf+0x244>
    2b2e:	f6 01       	movw	r30, r12
    2b30:	10 82       	st	Z, r1
    2b32:	1e c0       	rjmp	.+60     	; 0x2b70 <vfscanf+0x244>
    2b34:	f7 2d       	mov	r31, r7
    2b36:	f0 64       	ori	r31, 0x40	; 64
    2b38:	7f 2e       	mov	r7, r31
    2b3a:	07 c0       	rjmp	.+14     	; 0x2b4a <vfscanf+0x21e>
    2b3c:	87 2d       	mov	r24, r7
    2b3e:	80 62       	ori	r24, 0x20	; 32
    2b40:	78 2e       	mov	r7, r24
    2b42:	03 c0       	rjmp	.+6      	; 0x2b4a <vfscanf+0x21e>
    2b44:	97 2d       	mov	r25, r7
    2b46:	90 61       	ori	r25, 0x10	; 16
    2b48:	79 2e       	mov	r7, r25
    2b4a:	27 2d       	mov	r18, r7
    2b4c:	a6 01       	movw	r20, r12
    2b4e:	b7 01       	movw	r22, r14
    2b50:	c5 01       	movw	r24, r10
    2b52:	0e 94 06 12 	call	0x240c	; 0x240c <conv_int>
    2b56:	05 c0       	rjmp	.+10     	; 0x2b62 <vfscanf+0x236>
    2b58:	a6 01       	movw	r20, r12
    2b5a:	b7 01       	movw	r22, r14
    2b5c:	c5 01       	movw	r24, r10
    2b5e:	0e 94 52 13 	call	0x26a4	; 0x26a4 <conv_flt>
    2b62:	81 11       	cpse	r24, r1
    2b64:	05 c0       	rjmp	.+10     	; 0x2b70 <vfscanf+0x244>
    2b66:	f5 01       	movw	r30, r10
    2b68:	83 81       	ldd	r24, Z+3	; 0x03
    2b6a:	80 73       	andi	r24, 0x30	; 48
    2b6c:	29 f4       	brne	.+10     	; 0x2b78 <vfscanf+0x24c>
    2b6e:	06 c0       	rjmp	.+12     	; 0x2b7c <vfscanf+0x250>
    2b70:	70 fc       	sbrc	r7, 0
    2b72:	e9 ce       	rjmp	.-558    	; 0x2946 <vfscanf+0x1a>
    2b74:	63 94       	inc	r6
    2b76:	e7 ce       	rjmp	.-562    	; 0x2946 <vfscanf+0x1a>
    2b78:	66 20       	and	r6, r6
    2b7a:	19 f0       	breq	.+6      	; 0x2b82 <vfscanf+0x256>
    2b7c:	86 2d       	mov	r24, r6
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	02 c0       	rjmp	.+4      	; 0x2b86 <vfscanf+0x25a>
    2b82:	8f ef       	ldi	r24, 0xFF	; 255
    2b84:	9f ef       	ldi	r25, 0xFF	; 255
    2b86:	cd b7       	in	r28, 0x3d	; 61
    2b88:	de b7       	in	r29, 0x3e	; 62
    2b8a:	ee e0       	ldi	r30, 0x0E	; 14
    2b8c:	0c 94 62 19 	jmp	0x32c4	; 0x32c4 <__epilogue_restores__+0x8>

00002b90 <vfprintf>:
    2b90:	a0 e1       	ldi	r26, 0x10	; 16
    2b92:	b0 e0       	ldi	r27, 0x00	; 0
    2b94:	ee ec       	ldi	r30, 0xCE	; 206
    2b96:	f5 e1       	ldi	r31, 0x15	; 21
    2b98:	0c 94 45 19 	jmp	0x328a	; 0x328a <__prologue_saves__>
    2b9c:	7c 01       	movw	r14, r24
    2b9e:	1b 01       	movw	r2, r22
    2ba0:	6a 01       	movw	r12, r20
    2ba2:	fc 01       	movw	r30, r24
    2ba4:	16 82       	std	Z+6, r1	; 0x06
    2ba6:	17 82       	std	Z+7, r1	; 0x07
    2ba8:	83 81       	ldd	r24, Z+3	; 0x03
    2baa:	81 ff       	sbrs	r24, 1
    2bac:	44 c3       	rjmp	.+1672   	; 0x3236 <vfprintf+0x6a6>
    2bae:	9e 01       	movw	r18, r28
    2bb0:	2f 5f       	subi	r18, 0xFF	; 255
    2bb2:	3f 4f       	sbci	r19, 0xFF	; 255
    2bb4:	39 01       	movw	r6, r18
    2bb6:	f7 01       	movw	r30, r14
    2bb8:	93 81       	ldd	r25, Z+3	; 0x03
    2bba:	f1 01       	movw	r30, r2
    2bbc:	93 fd       	sbrc	r25, 3
    2bbe:	85 91       	lpm	r24, Z+
    2bc0:	93 ff       	sbrs	r25, 3
    2bc2:	81 91       	ld	r24, Z+
    2bc4:	1f 01       	movw	r2, r30
    2bc6:	88 23       	and	r24, r24
    2bc8:	09 f4       	brne	.+2      	; 0x2bcc <vfprintf+0x3c>
    2bca:	31 c3       	rjmp	.+1634   	; 0x322e <vfprintf+0x69e>
    2bcc:	85 32       	cpi	r24, 0x25	; 37
    2bce:	39 f4       	brne	.+14     	; 0x2bde <vfprintf+0x4e>
    2bd0:	93 fd       	sbrc	r25, 3
    2bd2:	85 91       	lpm	r24, Z+
    2bd4:	93 ff       	sbrs	r25, 3
    2bd6:	81 91       	ld	r24, Z+
    2bd8:	1f 01       	movw	r2, r30
    2bda:	85 32       	cpi	r24, 0x25	; 37
    2bdc:	39 f4       	brne	.+14     	; 0x2bec <vfprintf+0x5c>
    2bde:	b7 01       	movw	r22, r14
    2be0:	90 e0       	ldi	r25, 0x00	; 0
    2be2:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2be6:	56 01       	movw	r10, r12
    2be8:	65 01       	movw	r12, r10
    2bea:	e5 cf       	rjmp	.-54     	; 0x2bb6 <vfprintf+0x26>
    2bec:	10 e0       	ldi	r17, 0x00	; 0
    2bee:	51 2c       	mov	r5, r1
    2bf0:	91 2c       	mov	r9, r1
    2bf2:	ff e1       	ldi	r31, 0x1F	; 31
    2bf4:	f9 15       	cp	r31, r9
    2bf6:	d8 f0       	brcs	.+54     	; 0x2c2e <vfprintf+0x9e>
    2bf8:	8b 32       	cpi	r24, 0x2B	; 43
    2bfa:	79 f0       	breq	.+30     	; 0x2c1a <vfprintf+0x8a>
    2bfc:	38 f4       	brcc	.+14     	; 0x2c0c <vfprintf+0x7c>
    2bfe:	80 32       	cpi	r24, 0x20	; 32
    2c00:	79 f0       	breq	.+30     	; 0x2c20 <vfprintf+0x90>
    2c02:	83 32       	cpi	r24, 0x23	; 35
    2c04:	a1 f4       	brne	.+40     	; 0x2c2e <vfprintf+0x9e>
    2c06:	f9 2d       	mov	r31, r9
    2c08:	f0 61       	ori	r31, 0x10	; 16
    2c0a:	2e c0       	rjmp	.+92     	; 0x2c68 <vfprintf+0xd8>
    2c0c:	8d 32       	cpi	r24, 0x2D	; 45
    2c0e:	61 f0       	breq	.+24     	; 0x2c28 <vfprintf+0x98>
    2c10:	80 33       	cpi	r24, 0x30	; 48
    2c12:	69 f4       	brne	.+26     	; 0x2c2e <vfprintf+0x9e>
    2c14:	29 2d       	mov	r18, r9
    2c16:	21 60       	ori	r18, 0x01	; 1
    2c18:	2d c0       	rjmp	.+90     	; 0x2c74 <vfprintf+0xe4>
    2c1a:	39 2d       	mov	r19, r9
    2c1c:	32 60       	ori	r19, 0x02	; 2
    2c1e:	93 2e       	mov	r9, r19
    2c20:	89 2d       	mov	r24, r9
    2c22:	84 60       	ori	r24, 0x04	; 4
    2c24:	98 2e       	mov	r9, r24
    2c26:	2a c0       	rjmp	.+84     	; 0x2c7c <vfprintf+0xec>
    2c28:	e9 2d       	mov	r30, r9
    2c2a:	e8 60       	ori	r30, 0x08	; 8
    2c2c:	15 c0       	rjmp	.+42     	; 0x2c58 <vfprintf+0xc8>
    2c2e:	97 fc       	sbrc	r9, 7
    2c30:	2d c0       	rjmp	.+90     	; 0x2c8c <vfprintf+0xfc>
    2c32:	20 ed       	ldi	r18, 0xD0	; 208
    2c34:	28 0f       	add	r18, r24
    2c36:	2a 30       	cpi	r18, 0x0A	; 10
    2c38:	88 f4       	brcc	.+34     	; 0x2c5c <vfprintf+0xcc>
    2c3a:	96 fe       	sbrs	r9, 6
    2c3c:	06 c0       	rjmp	.+12     	; 0x2c4a <vfprintf+0xba>
    2c3e:	3a e0       	ldi	r19, 0x0A	; 10
    2c40:	13 9f       	mul	r17, r19
    2c42:	20 0d       	add	r18, r0
    2c44:	11 24       	eor	r1, r1
    2c46:	12 2f       	mov	r17, r18
    2c48:	19 c0       	rjmp	.+50     	; 0x2c7c <vfprintf+0xec>
    2c4a:	8a e0       	ldi	r24, 0x0A	; 10
    2c4c:	58 9e       	mul	r5, r24
    2c4e:	20 0d       	add	r18, r0
    2c50:	11 24       	eor	r1, r1
    2c52:	52 2e       	mov	r5, r18
    2c54:	e9 2d       	mov	r30, r9
    2c56:	e0 62       	ori	r30, 0x20	; 32
    2c58:	9e 2e       	mov	r9, r30
    2c5a:	10 c0       	rjmp	.+32     	; 0x2c7c <vfprintf+0xec>
    2c5c:	8e 32       	cpi	r24, 0x2E	; 46
    2c5e:	31 f4       	brne	.+12     	; 0x2c6c <vfprintf+0xdc>
    2c60:	96 fc       	sbrc	r9, 6
    2c62:	e5 c2       	rjmp	.+1482   	; 0x322e <vfprintf+0x69e>
    2c64:	f9 2d       	mov	r31, r9
    2c66:	f0 64       	ori	r31, 0x40	; 64
    2c68:	9f 2e       	mov	r9, r31
    2c6a:	08 c0       	rjmp	.+16     	; 0x2c7c <vfprintf+0xec>
    2c6c:	8c 36       	cpi	r24, 0x6C	; 108
    2c6e:	21 f4       	brne	.+8      	; 0x2c78 <vfprintf+0xe8>
    2c70:	29 2d       	mov	r18, r9
    2c72:	20 68       	ori	r18, 0x80	; 128
    2c74:	92 2e       	mov	r9, r18
    2c76:	02 c0       	rjmp	.+4      	; 0x2c7c <vfprintf+0xec>
    2c78:	88 36       	cpi	r24, 0x68	; 104
    2c7a:	41 f4       	brne	.+16     	; 0x2c8c <vfprintf+0xfc>
    2c7c:	f1 01       	movw	r30, r2
    2c7e:	93 fd       	sbrc	r25, 3
    2c80:	85 91       	lpm	r24, Z+
    2c82:	93 ff       	sbrs	r25, 3
    2c84:	81 91       	ld	r24, Z+
    2c86:	1f 01       	movw	r2, r30
    2c88:	81 11       	cpse	r24, r1
    2c8a:	b3 cf       	rjmp	.-154    	; 0x2bf2 <vfprintf+0x62>
    2c8c:	9b eb       	ldi	r25, 0xBB	; 187
    2c8e:	98 0f       	add	r25, r24
    2c90:	93 30       	cpi	r25, 0x03	; 3
    2c92:	20 f4       	brcc	.+8      	; 0x2c9c <vfprintf+0x10c>
    2c94:	99 2d       	mov	r25, r9
    2c96:	90 61       	ori	r25, 0x10	; 16
    2c98:	80 5e       	subi	r24, 0xE0	; 224
    2c9a:	07 c0       	rjmp	.+14     	; 0x2caa <vfprintf+0x11a>
    2c9c:	9b e9       	ldi	r25, 0x9B	; 155
    2c9e:	98 0f       	add	r25, r24
    2ca0:	93 30       	cpi	r25, 0x03	; 3
    2ca2:	08 f0       	brcs	.+2      	; 0x2ca6 <vfprintf+0x116>
    2ca4:	66 c1       	rjmp	.+716    	; 0x2f72 <vfprintf+0x3e2>
    2ca6:	99 2d       	mov	r25, r9
    2ca8:	9f 7e       	andi	r25, 0xEF	; 239
    2caa:	96 ff       	sbrs	r25, 6
    2cac:	16 e0       	ldi	r17, 0x06	; 6
    2cae:	9f 73       	andi	r25, 0x3F	; 63
    2cb0:	99 2e       	mov	r9, r25
    2cb2:	85 36       	cpi	r24, 0x65	; 101
    2cb4:	19 f4       	brne	.+6      	; 0x2cbc <vfprintf+0x12c>
    2cb6:	90 64       	ori	r25, 0x40	; 64
    2cb8:	99 2e       	mov	r9, r25
    2cba:	08 c0       	rjmp	.+16     	; 0x2ccc <vfprintf+0x13c>
    2cbc:	86 36       	cpi	r24, 0x66	; 102
    2cbe:	21 f4       	brne	.+8      	; 0x2cc8 <vfprintf+0x138>
    2cc0:	39 2f       	mov	r19, r25
    2cc2:	30 68       	ori	r19, 0x80	; 128
    2cc4:	93 2e       	mov	r9, r19
    2cc6:	02 c0       	rjmp	.+4      	; 0x2ccc <vfprintf+0x13c>
    2cc8:	11 11       	cpse	r17, r1
    2cca:	11 50       	subi	r17, 0x01	; 1
    2ccc:	97 fe       	sbrs	r9, 7
    2cce:	07 c0       	rjmp	.+14     	; 0x2cde <vfprintf+0x14e>
    2cd0:	1c 33       	cpi	r17, 0x3C	; 60
    2cd2:	50 f4       	brcc	.+20     	; 0x2ce8 <vfprintf+0x158>
    2cd4:	44 24       	eor	r4, r4
    2cd6:	43 94       	inc	r4
    2cd8:	41 0e       	add	r4, r17
    2cda:	27 e0       	ldi	r18, 0x07	; 7
    2cdc:	0b c0       	rjmp	.+22     	; 0x2cf4 <vfprintf+0x164>
    2cde:	18 30       	cpi	r17, 0x08	; 8
    2ce0:	38 f0       	brcs	.+14     	; 0x2cf0 <vfprintf+0x160>
    2ce2:	27 e0       	ldi	r18, 0x07	; 7
    2ce4:	17 e0       	ldi	r17, 0x07	; 7
    2ce6:	05 c0       	rjmp	.+10     	; 0x2cf2 <vfprintf+0x162>
    2ce8:	27 e0       	ldi	r18, 0x07	; 7
    2cea:	9c e3       	ldi	r25, 0x3C	; 60
    2cec:	49 2e       	mov	r4, r25
    2cee:	02 c0       	rjmp	.+4      	; 0x2cf4 <vfprintf+0x164>
    2cf0:	21 2f       	mov	r18, r17
    2cf2:	41 2c       	mov	r4, r1
    2cf4:	56 01       	movw	r10, r12
    2cf6:	84 e0       	ldi	r24, 0x04	; 4
    2cf8:	a8 0e       	add	r10, r24
    2cfa:	b1 1c       	adc	r11, r1
    2cfc:	f6 01       	movw	r30, r12
    2cfe:	60 81       	ld	r22, Z
    2d00:	71 81       	ldd	r23, Z+1	; 0x01
    2d02:	82 81       	ldd	r24, Z+2	; 0x02
    2d04:	93 81       	ldd	r25, Z+3	; 0x03
    2d06:	04 2d       	mov	r16, r4
    2d08:	a3 01       	movw	r20, r6
    2d0a:	0e 94 76 19 	call	0x32ec	; 0x32ec <__ftoa_engine>
    2d0e:	6c 01       	movw	r12, r24
    2d10:	f9 81       	ldd	r31, Y+1	; 0x01
    2d12:	fc 87       	std	Y+12, r31	; 0x0c
    2d14:	f0 ff       	sbrs	r31, 0
    2d16:	02 c0       	rjmp	.+4      	; 0x2d1c <vfprintf+0x18c>
    2d18:	f3 ff       	sbrs	r31, 3
    2d1a:	06 c0       	rjmp	.+12     	; 0x2d28 <vfprintf+0x198>
    2d1c:	91 fc       	sbrc	r9, 1
    2d1e:	06 c0       	rjmp	.+12     	; 0x2d2c <vfprintf+0x19c>
    2d20:	92 fe       	sbrs	r9, 2
    2d22:	06 c0       	rjmp	.+12     	; 0x2d30 <vfprintf+0x1a0>
    2d24:	00 e2       	ldi	r16, 0x20	; 32
    2d26:	05 c0       	rjmp	.+10     	; 0x2d32 <vfprintf+0x1a2>
    2d28:	0d e2       	ldi	r16, 0x2D	; 45
    2d2a:	03 c0       	rjmp	.+6      	; 0x2d32 <vfprintf+0x1a2>
    2d2c:	0b e2       	ldi	r16, 0x2B	; 43
    2d2e:	01 c0       	rjmp	.+2      	; 0x2d32 <vfprintf+0x1a2>
    2d30:	00 e0       	ldi	r16, 0x00	; 0
    2d32:	8c 85       	ldd	r24, Y+12	; 0x0c
    2d34:	8c 70       	andi	r24, 0x0C	; 12
    2d36:	19 f0       	breq	.+6      	; 0x2d3e <vfprintf+0x1ae>
    2d38:	01 11       	cpse	r16, r1
    2d3a:	5a c2       	rjmp	.+1204   	; 0x31f0 <vfprintf+0x660>
    2d3c:	9b c2       	rjmp	.+1334   	; 0x3274 <vfprintf+0x6e4>
    2d3e:	97 fe       	sbrs	r9, 7
    2d40:	10 c0       	rjmp	.+32     	; 0x2d62 <vfprintf+0x1d2>
    2d42:	4c 0c       	add	r4, r12
    2d44:	fc 85       	ldd	r31, Y+12	; 0x0c
    2d46:	f4 ff       	sbrs	r31, 4
    2d48:	04 c0       	rjmp	.+8      	; 0x2d52 <vfprintf+0x1c2>
    2d4a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d4c:	81 33       	cpi	r24, 0x31	; 49
    2d4e:	09 f4       	brne	.+2      	; 0x2d52 <vfprintf+0x1c2>
    2d50:	4a 94       	dec	r4
    2d52:	14 14       	cp	r1, r4
    2d54:	74 f5       	brge	.+92     	; 0x2db2 <vfprintf+0x222>
    2d56:	28 e0       	ldi	r18, 0x08	; 8
    2d58:	24 15       	cp	r18, r4
    2d5a:	78 f5       	brcc	.+94     	; 0x2dba <vfprintf+0x22a>
    2d5c:	88 e0       	ldi	r24, 0x08	; 8
    2d5e:	48 2e       	mov	r4, r24
    2d60:	2c c0       	rjmp	.+88     	; 0x2dba <vfprintf+0x22a>
    2d62:	96 fc       	sbrc	r9, 6
    2d64:	2a c0       	rjmp	.+84     	; 0x2dba <vfprintf+0x22a>
    2d66:	81 2f       	mov	r24, r17
    2d68:	90 e0       	ldi	r25, 0x00	; 0
    2d6a:	8c 15       	cp	r24, r12
    2d6c:	9d 05       	cpc	r25, r13
    2d6e:	9c f0       	brlt	.+38     	; 0x2d96 <vfprintf+0x206>
    2d70:	3c ef       	ldi	r19, 0xFC	; 252
    2d72:	c3 16       	cp	r12, r19
    2d74:	3f ef       	ldi	r19, 0xFF	; 255
    2d76:	d3 06       	cpc	r13, r19
    2d78:	74 f0       	brlt	.+28     	; 0x2d96 <vfprintf+0x206>
    2d7a:	89 2d       	mov	r24, r9
    2d7c:	80 68       	ori	r24, 0x80	; 128
    2d7e:	98 2e       	mov	r9, r24
    2d80:	0a c0       	rjmp	.+20     	; 0x2d96 <vfprintf+0x206>
    2d82:	e2 e0       	ldi	r30, 0x02	; 2
    2d84:	f0 e0       	ldi	r31, 0x00	; 0
    2d86:	ec 0f       	add	r30, r28
    2d88:	fd 1f       	adc	r31, r29
    2d8a:	e1 0f       	add	r30, r17
    2d8c:	f1 1d       	adc	r31, r1
    2d8e:	80 81       	ld	r24, Z
    2d90:	80 33       	cpi	r24, 0x30	; 48
    2d92:	19 f4       	brne	.+6      	; 0x2d9a <vfprintf+0x20a>
    2d94:	11 50       	subi	r17, 0x01	; 1
    2d96:	11 11       	cpse	r17, r1
    2d98:	f4 cf       	rjmp	.-24     	; 0x2d82 <vfprintf+0x1f2>
    2d9a:	97 fe       	sbrs	r9, 7
    2d9c:	0e c0       	rjmp	.+28     	; 0x2dba <vfprintf+0x22a>
    2d9e:	44 24       	eor	r4, r4
    2da0:	43 94       	inc	r4
    2da2:	41 0e       	add	r4, r17
    2da4:	81 2f       	mov	r24, r17
    2da6:	90 e0       	ldi	r25, 0x00	; 0
    2da8:	c8 16       	cp	r12, r24
    2daa:	d9 06       	cpc	r13, r25
    2dac:	2c f4       	brge	.+10     	; 0x2db8 <vfprintf+0x228>
    2dae:	1c 19       	sub	r17, r12
    2db0:	04 c0       	rjmp	.+8      	; 0x2dba <vfprintf+0x22a>
    2db2:	44 24       	eor	r4, r4
    2db4:	43 94       	inc	r4
    2db6:	01 c0       	rjmp	.+2      	; 0x2dba <vfprintf+0x22a>
    2db8:	10 e0       	ldi	r17, 0x00	; 0
    2dba:	97 fe       	sbrs	r9, 7
    2dbc:	06 c0       	rjmp	.+12     	; 0x2dca <vfprintf+0x23a>
    2dbe:	1c 14       	cp	r1, r12
    2dc0:	1d 04       	cpc	r1, r13
    2dc2:	34 f4       	brge	.+12     	; 0x2dd0 <vfprintf+0x240>
    2dc4:	c6 01       	movw	r24, r12
    2dc6:	01 96       	adiw	r24, 0x01	; 1
    2dc8:	05 c0       	rjmp	.+10     	; 0x2dd4 <vfprintf+0x244>
    2dca:	85 e0       	ldi	r24, 0x05	; 5
    2dcc:	90 e0       	ldi	r25, 0x00	; 0
    2dce:	02 c0       	rjmp	.+4      	; 0x2dd4 <vfprintf+0x244>
    2dd0:	81 e0       	ldi	r24, 0x01	; 1
    2dd2:	90 e0       	ldi	r25, 0x00	; 0
    2dd4:	01 11       	cpse	r16, r1
    2dd6:	01 96       	adiw	r24, 0x01	; 1
    2dd8:	11 23       	and	r17, r17
    2dda:	31 f0       	breq	.+12     	; 0x2de8 <vfprintf+0x258>
    2ddc:	21 2f       	mov	r18, r17
    2dde:	30 e0       	ldi	r19, 0x00	; 0
    2de0:	2f 5f       	subi	r18, 0xFF	; 255
    2de2:	3f 4f       	sbci	r19, 0xFF	; 255
    2de4:	82 0f       	add	r24, r18
    2de6:	93 1f       	adc	r25, r19
    2de8:	25 2d       	mov	r18, r5
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	82 17       	cp	r24, r18
    2dee:	93 07       	cpc	r25, r19
    2df0:	14 f4       	brge	.+4      	; 0x2df6 <vfprintf+0x266>
    2df2:	58 1a       	sub	r5, r24
    2df4:	01 c0       	rjmp	.+2      	; 0x2df8 <vfprintf+0x268>
    2df6:	51 2c       	mov	r5, r1
    2df8:	89 2d       	mov	r24, r9
    2dfa:	89 70       	andi	r24, 0x09	; 9
    2dfc:	49 f4       	brne	.+18     	; 0x2e10 <vfprintf+0x280>
    2dfe:	55 20       	and	r5, r5
    2e00:	39 f0       	breq	.+14     	; 0x2e10 <vfprintf+0x280>
    2e02:	b7 01       	movw	r22, r14
    2e04:	80 e2       	ldi	r24, 0x20	; 32
    2e06:	90 e0       	ldi	r25, 0x00	; 0
    2e08:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2e0c:	5a 94       	dec	r5
    2e0e:	f7 cf       	rjmp	.-18     	; 0x2dfe <vfprintf+0x26e>
    2e10:	00 23       	and	r16, r16
    2e12:	29 f0       	breq	.+10     	; 0x2e1e <vfprintf+0x28e>
    2e14:	b7 01       	movw	r22, r14
    2e16:	80 2f       	mov	r24, r16
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2e1e:	93 fc       	sbrc	r9, 3
    2e20:	09 c0       	rjmp	.+18     	; 0x2e34 <vfprintf+0x2a4>
    2e22:	55 20       	and	r5, r5
    2e24:	39 f0       	breq	.+14     	; 0x2e34 <vfprintf+0x2a4>
    2e26:	b7 01       	movw	r22, r14
    2e28:	80 e3       	ldi	r24, 0x30	; 48
    2e2a:	90 e0       	ldi	r25, 0x00	; 0
    2e2c:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2e30:	5a 94       	dec	r5
    2e32:	f7 cf       	rjmp	.-18     	; 0x2e22 <vfprintf+0x292>
    2e34:	97 fe       	sbrs	r9, 7
    2e36:	4c c0       	rjmp	.+152    	; 0x2ed0 <vfprintf+0x340>
    2e38:	46 01       	movw	r8, r12
    2e3a:	d7 fe       	sbrs	r13, 7
    2e3c:	02 c0       	rjmp	.+4      	; 0x2e42 <vfprintf+0x2b2>
    2e3e:	81 2c       	mov	r8, r1
    2e40:	91 2c       	mov	r9, r1
    2e42:	c6 01       	movw	r24, r12
    2e44:	88 19       	sub	r24, r8
    2e46:	99 09       	sbc	r25, r9
    2e48:	f3 01       	movw	r30, r6
    2e4a:	e8 0f       	add	r30, r24
    2e4c:	f9 1f       	adc	r31, r25
    2e4e:	ed 87       	std	Y+13, r30	; 0x0d
    2e50:	fe 87       	std	Y+14, r31	; 0x0e
    2e52:	96 01       	movw	r18, r12
    2e54:	24 19       	sub	r18, r4
    2e56:	31 09       	sbc	r19, r1
    2e58:	2f 87       	std	Y+15, r18	; 0x0f
    2e5a:	38 8b       	std	Y+16, r19	; 0x10
    2e5c:	01 2f       	mov	r16, r17
    2e5e:	10 e0       	ldi	r17, 0x00	; 0
    2e60:	11 95       	neg	r17
    2e62:	01 95       	neg	r16
    2e64:	11 09       	sbc	r17, r1
    2e66:	3f ef       	ldi	r19, 0xFF	; 255
    2e68:	83 16       	cp	r8, r19
    2e6a:	93 06       	cpc	r9, r19
    2e6c:	29 f4       	brne	.+10     	; 0x2e78 <vfprintf+0x2e8>
    2e6e:	b7 01       	movw	r22, r14
    2e70:	8e e2       	ldi	r24, 0x2E	; 46
    2e72:	90 e0       	ldi	r25, 0x00	; 0
    2e74:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2e78:	c8 14       	cp	r12, r8
    2e7a:	d9 04       	cpc	r13, r9
    2e7c:	4c f0       	brlt	.+18     	; 0x2e90 <vfprintf+0x300>
    2e7e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2e80:	98 89       	ldd	r25, Y+16	; 0x10
    2e82:	88 15       	cp	r24, r8
    2e84:	99 05       	cpc	r25, r9
    2e86:	24 f4       	brge	.+8      	; 0x2e90 <vfprintf+0x300>
    2e88:	ed 85       	ldd	r30, Y+13	; 0x0d
    2e8a:	fe 85       	ldd	r31, Y+14	; 0x0e
    2e8c:	81 81       	ldd	r24, Z+1	; 0x01
    2e8e:	01 c0       	rjmp	.+2      	; 0x2e92 <vfprintf+0x302>
    2e90:	80 e3       	ldi	r24, 0x30	; 48
    2e92:	f1 e0       	ldi	r31, 0x01	; 1
    2e94:	8f 1a       	sub	r8, r31
    2e96:	91 08       	sbc	r9, r1
    2e98:	2d 85       	ldd	r18, Y+13	; 0x0d
    2e9a:	3e 85       	ldd	r19, Y+14	; 0x0e
    2e9c:	2f 5f       	subi	r18, 0xFF	; 255
    2e9e:	3f 4f       	sbci	r19, 0xFF	; 255
    2ea0:	2d 87       	std	Y+13, r18	; 0x0d
    2ea2:	3e 87       	std	Y+14, r19	; 0x0e
    2ea4:	80 16       	cp	r8, r16
    2ea6:	91 06       	cpc	r9, r17
    2ea8:	2c f0       	brlt	.+10     	; 0x2eb4 <vfprintf+0x324>
    2eaa:	b7 01       	movw	r22, r14
    2eac:	90 e0       	ldi	r25, 0x00	; 0
    2eae:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2eb2:	d9 cf       	rjmp	.-78     	; 0x2e66 <vfprintf+0x2d6>
    2eb4:	c8 14       	cp	r12, r8
    2eb6:	d9 04       	cpc	r13, r9
    2eb8:	41 f4       	brne	.+16     	; 0x2eca <vfprintf+0x33a>
    2eba:	9a 81       	ldd	r25, Y+2	; 0x02
    2ebc:	96 33       	cpi	r25, 0x36	; 54
    2ebe:	20 f4       	brcc	.+8      	; 0x2ec8 <vfprintf+0x338>
    2ec0:	95 33       	cpi	r25, 0x35	; 53
    2ec2:	19 f4       	brne	.+6      	; 0x2eca <vfprintf+0x33a>
    2ec4:	3c 85       	ldd	r19, Y+12	; 0x0c
    2ec6:	34 ff       	sbrs	r19, 4
    2ec8:	81 e3       	ldi	r24, 0x31	; 49
    2eca:	b7 01       	movw	r22, r14
    2ecc:	90 e0       	ldi	r25, 0x00	; 0
    2ece:	4e c0       	rjmp	.+156    	; 0x2f6c <vfprintf+0x3dc>
    2ed0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ed2:	81 33       	cpi	r24, 0x31	; 49
    2ed4:	19 f0       	breq	.+6      	; 0x2edc <vfprintf+0x34c>
    2ed6:	9c 85       	ldd	r25, Y+12	; 0x0c
    2ed8:	9f 7e       	andi	r25, 0xEF	; 239
    2eda:	9c 87       	std	Y+12, r25	; 0x0c
    2edc:	b7 01       	movw	r22, r14
    2ede:	90 e0       	ldi	r25, 0x00	; 0
    2ee0:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2ee4:	11 11       	cpse	r17, r1
    2ee6:	05 c0       	rjmp	.+10     	; 0x2ef2 <vfprintf+0x362>
    2ee8:	94 fc       	sbrc	r9, 4
    2eea:	18 c0       	rjmp	.+48     	; 0x2f1c <vfprintf+0x38c>
    2eec:	85 e6       	ldi	r24, 0x65	; 101
    2eee:	90 e0       	ldi	r25, 0x00	; 0
    2ef0:	17 c0       	rjmp	.+46     	; 0x2f20 <vfprintf+0x390>
    2ef2:	b7 01       	movw	r22, r14
    2ef4:	8e e2       	ldi	r24, 0x2E	; 46
    2ef6:	90 e0       	ldi	r25, 0x00	; 0
    2ef8:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2efc:	1e 5f       	subi	r17, 0xFE	; 254
    2efe:	82 e0       	ldi	r24, 0x02	; 2
    2f00:	01 e0       	ldi	r16, 0x01	; 1
    2f02:	08 0f       	add	r16, r24
    2f04:	f3 01       	movw	r30, r6
    2f06:	e8 0f       	add	r30, r24
    2f08:	f1 1d       	adc	r31, r1
    2f0a:	80 81       	ld	r24, Z
    2f0c:	b7 01       	movw	r22, r14
    2f0e:	90 e0       	ldi	r25, 0x00	; 0
    2f10:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2f14:	80 2f       	mov	r24, r16
    2f16:	01 13       	cpse	r16, r17
    2f18:	f3 cf       	rjmp	.-26     	; 0x2f00 <vfprintf+0x370>
    2f1a:	e6 cf       	rjmp	.-52     	; 0x2ee8 <vfprintf+0x358>
    2f1c:	85 e4       	ldi	r24, 0x45	; 69
    2f1e:	90 e0       	ldi	r25, 0x00	; 0
    2f20:	b7 01       	movw	r22, r14
    2f22:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2f26:	d7 fc       	sbrc	r13, 7
    2f28:	06 c0       	rjmp	.+12     	; 0x2f36 <vfprintf+0x3a6>
    2f2a:	c1 14       	cp	r12, r1
    2f2c:	d1 04       	cpc	r13, r1
    2f2e:	41 f4       	brne	.+16     	; 0x2f40 <vfprintf+0x3b0>
    2f30:	ec 85       	ldd	r30, Y+12	; 0x0c
    2f32:	e4 ff       	sbrs	r30, 4
    2f34:	05 c0       	rjmp	.+10     	; 0x2f40 <vfprintf+0x3b0>
    2f36:	d1 94       	neg	r13
    2f38:	c1 94       	neg	r12
    2f3a:	d1 08       	sbc	r13, r1
    2f3c:	8d e2       	ldi	r24, 0x2D	; 45
    2f3e:	01 c0       	rjmp	.+2      	; 0x2f42 <vfprintf+0x3b2>
    2f40:	8b e2       	ldi	r24, 0x2B	; 43
    2f42:	b7 01       	movw	r22, r14
    2f44:	90 e0       	ldi	r25, 0x00	; 0
    2f46:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2f4a:	80 e3       	ldi	r24, 0x30	; 48
    2f4c:	2a e0       	ldi	r18, 0x0A	; 10
    2f4e:	c2 16       	cp	r12, r18
    2f50:	d1 04       	cpc	r13, r1
    2f52:	2c f0       	brlt	.+10     	; 0x2f5e <vfprintf+0x3ce>
    2f54:	8f 5f       	subi	r24, 0xFF	; 255
    2f56:	fa e0       	ldi	r31, 0x0A	; 10
    2f58:	cf 1a       	sub	r12, r31
    2f5a:	d1 08       	sbc	r13, r1
    2f5c:	f7 cf       	rjmp	.-18     	; 0x2f4c <vfprintf+0x3bc>
    2f5e:	b7 01       	movw	r22, r14
    2f60:	90 e0       	ldi	r25, 0x00	; 0
    2f62:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2f66:	b7 01       	movw	r22, r14
    2f68:	c6 01       	movw	r24, r12
    2f6a:	c0 96       	adiw	r24, 0x30	; 48
    2f6c:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    2f70:	54 c1       	rjmp	.+680    	; 0x321a <vfprintf+0x68a>
    2f72:	83 36       	cpi	r24, 0x63	; 99
    2f74:	31 f0       	breq	.+12     	; 0x2f82 <vfprintf+0x3f2>
    2f76:	83 37       	cpi	r24, 0x73	; 115
    2f78:	79 f0       	breq	.+30     	; 0x2f98 <vfprintf+0x408>
    2f7a:	83 35       	cpi	r24, 0x53	; 83
    2f7c:	09 f0       	breq	.+2      	; 0x2f80 <vfprintf+0x3f0>
    2f7e:	56 c0       	rjmp	.+172    	; 0x302c <vfprintf+0x49c>
    2f80:	20 c0       	rjmp	.+64     	; 0x2fc2 <vfprintf+0x432>
    2f82:	56 01       	movw	r10, r12
    2f84:	32 e0       	ldi	r19, 0x02	; 2
    2f86:	a3 0e       	add	r10, r19
    2f88:	b1 1c       	adc	r11, r1
    2f8a:	f6 01       	movw	r30, r12
    2f8c:	80 81       	ld	r24, Z
    2f8e:	89 83       	std	Y+1, r24	; 0x01
    2f90:	01 e0       	ldi	r16, 0x01	; 1
    2f92:	10 e0       	ldi	r17, 0x00	; 0
    2f94:	63 01       	movw	r12, r6
    2f96:	12 c0       	rjmp	.+36     	; 0x2fbc <vfprintf+0x42c>
    2f98:	56 01       	movw	r10, r12
    2f9a:	f2 e0       	ldi	r31, 0x02	; 2
    2f9c:	af 0e       	add	r10, r31
    2f9e:	b1 1c       	adc	r11, r1
    2fa0:	f6 01       	movw	r30, r12
    2fa2:	c0 80       	ld	r12, Z
    2fa4:	d1 80       	ldd	r13, Z+1	; 0x01
    2fa6:	96 fe       	sbrs	r9, 6
    2fa8:	03 c0       	rjmp	.+6      	; 0x2fb0 <vfprintf+0x420>
    2faa:	61 2f       	mov	r22, r17
    2fac:	70 e0       	ldi	r23, 0x00	; 0
    2fae:	02 c0       	rjmp	.+4      	; 0x2fb4 <vfprintf+0x424>
    2fb0:	6f ef       	ldi	r22, 0xFF	; 255
    2fb2:	7f ef       	ldi	r23, 0xFF	; 255
    2fb4:	c6 01       	movw	r24, r12
    2fb6:	0e 94 92 1a 	call	0x3524	; 0x3524 <strnlen>
    2fba:	8c 01       	movw	r16, r24
    2fbc:	f9 2d       	mov	r31, r9
    2fbe:	ff 77       	andi	r31, 0x7F	; 127
    2fc0:	14 c0       	rjmp	.+40     	; 0x2fea <vfprintf+0x45a>
    2fc2:	56 01       	movw	r10, r12
    2fc4:	22 e0       	ldi	r18, 0x02	; 2
    2fc6:	a2 0e       	add	r10, r18
    2fc8:	b1 1c       	adc	r11, r1
    2fca:	f6 01       	movw	r30, r12
    2fcc:	c0 80       	ld	r12, Z
    2fce:	d1 80       	ldd	r13, Z+1	; 0x01
    2fd0:	96 fe       	sbrs	r9, 6
    2fd2:	03 c0       	rjmp	.+6      	; 0x2fda <vfprintf+0x44a>
    2fd4:	61 2f       	mov	r22, r17
    2fd6:	70 e0       	ldi	r23, 0x00	; 0
    2fd8:	02 c0       	rjmp	.+4      	; 0x2fde <vfprintf+0x44e>
    2fda:	6f ef       	ldi	r22, 0xFF	; 255
    2fdc:	7f ef       	ldi	r23, 0xFF	; 255
    2fde:	c6 01       	movw	r24, r12
    2fe0:	0e 94 6a 1a 	call	0x34d4	; 0x34d4 <strnlen_P>
    2fe4:	8c 01       	movw	r16, r24
    2fe6:	f9 2d       	mov	r31, r9
    2fe8:	f0 68       	ori	r31, 0x80	; 128
    2fea:	9f 2e       	mov	r9, r31
    2fec:	f3 fd       	sbrc	r31, 3
    2fee:	1a c0       	rjmp	.+52     	; 0x3024 <vfprintf+0x494>
    2ff0:	85 2d       	mov	r24, r5
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	08 17       	cp	r16, r24
    2ff6:	19 07       	cpc	r17, r25
    2ff8:	a8 f4       	brcc	.+42     	; 0x3024 <vfprintf+0x494>
    2ffa:	b7 01       	movw	r22, r14
    2ffc:	80 e2       	ldi	r24, 0x20	; 32
    2ffe:	90 e0       	ldi	r25, 0x00	; 0
    3000:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    3004:	5a 94       	dec	r5
    3006:	f4 cf       	rjmp	.-24     	; 0x2ff0 <vfprintf+0x460>
    3008:	f6 01       	movw	r30, r12
    300a:	97 fc       	sbrc	r9, 7
    300c:	85 91       	lpm	r24, Z+
    300e:	97 fe       	sbrs	r9, 7
    3010:	81 91       	ld	r24, Z+
    3012:	6f 01       	movw	r12, r30
    3014:	b7 01       	movw	r22, r14
    3016:	90 e0       	ldi	r25, 0x00	; 0
    3018:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    301c:	51 10       	cpse	r5, r1
    301e:	5a 94       	dec	r5
    3020:	01 50       	subi	r16, 0x01	; 1
    3022:	11 09       	sbc	r17, r1
    3024:	01 15       	cp	r16, r1
    3026:	11 05       	cpc	r17, r1
    3028:	79 f7       	brne	.-34     	; 0x3008 <vfprintf+0x478>
    302a:	f7 c0       	rjmp	.+494    	; 0x321a <vfprintf+0x68a>
    302c:	84 36       	cpi	r24, 0x64	; 100
    302e:	11 f0       	breq	.+4      	; 0x3034 <vfprintf+0x4a4>
    3030:	89 36       	cpi	r24, 0x69	; 105
    3032:	61 f5       	brne	.+88     	; 0x308c <vfprintf+0x4fc>
    3034:	56 01       	movw	r10, r12
    3036:	97 fe       	sbrs	r9, 7
    3038:	09 c0       	rjmp	.+18     	; 0x304c <vfprintf+0x4bc>
    303a:	24 e0       	ldi	r18, 0x04	; 4
    303c:	a2 0e       	add	r10, r18
    303e:	b1 1c       	adc	r11, r1
    3040:	f6 01       	movw	r30, r12
    3042:	60 81       	ld	r22, Z
    3044:	71 81       	ldd	r23, Z+1	; 0x01
    3046:	82 81       	ldd	r24, Z+2	; 0x02
    3048:	93 81       	ldd	r25, Z+3	; 0x03
    304a:	0a c0       	rjmp	.+20     	; 0x3060 <vfprintf+0x4d0>
    304c:	f2 e0       	ldi	r31, 0x02	; 2
    304e:	af 0e       	add	r10, r31
    3050:	b1 1c       	adc	r11, r1
    3052:	f6 01       	movw	r30, r12
    3054:	60 81       	ld	r22, Z
    3056:	71 81       	ldd	r23, Z+1	; 0x01
    3058:	07 2e       	mov	r0, r23
    305a:	00 0c       	add	r0, r0
    305c:	88 0b       	sbc	r24, r24
    305e:	99 0b       	sbc	r25, r25
    3060:	f9 2d       	mov	r31, r9
    3062:	ff 76       	andi	r31, 0x6F	; 111
    3064:	9f 2e       	mov	r9, r31
    3066:	97 ff       	sbrs	r25, 7
    3068:	09 c0       	rjmp	.+18     	; 0x307c <vfprintf+0x4ec>
    306a:	90 95       	com	r25
    306c:	80 95       	com	r24
    306e:	70 95       	com	r23
    3070:	61 95       	neg	r22
    3072:	7f 4f       	sbci	r23, 0xFF	; 255
    3074:	8f 4f       	sbci	r24, 0xFF	; 255
    3076:	9f 4f       	sbci	r25, 0xFF	; 255
    3078:	f0 68       	ori	r31, 0x80	; 128
    307a:	9f 2e       	mov	r9, r31
    307c:	2a e0       	ldi	r18, 0x0A	; 10
    307e:	30 e0       	ldi	r19, 0x00	; 0
    3080:	a3 01       	movw	r20, r6
    3082:	0e 94 a0 1b 	call	0x3740	; 0x3740 <__ultoa_invert>
    3086:	c8 2e       	mov	r12, r24
    3088:	c6 18       	sub	r12, r6
    308a:	3f c0       	rjmp	.+126    	; 0x310a <vfprintf+0x57a>
    308c:	09 2d       	mov	r16, r9
    308e:	85 37       	cpi	r24, 0x75	; 117
    3090:	21 f4       	brne	.+8      	; 0x309a <vfprintf+0x50a>
    3092:	0f 7e       	andi	r16, 0xEF	; 239
    3094:	2a e0       	ldi	r18, 0x0A	; 10
    3096:	30 e0       	ldi	r19, 0x00	; 0
    3098:	1d c0       	rjmp	.+58     	; 0x30d4 <vfprintf+0x544>
    309a:	09 7f       	andi	r16, 0xF9	; 249
    309c:	8f 36       	cpi	r24, 0x6F	; 111
    309e:	91 f0       	breq	.+36     	; 0x30c4 <vfprintf+0x534>
    30a0:	18 f4       	brcc	.+6      	; 0x30a8 <vfprintf+0x518>
    30a2:	88 35       	cpi	r24, 0x58	; 88
    30a4:	59 f0       	breq	.+22     	; 0x30bc <vfprintf+0x52c>
    30a6:	c3 c0       	rjmp	.+390    	; 0x322e <vfprintf+0x69e>
    30a8:	80 37       	cpi	r24, 0x70	; 112
    30aa:	19 f0       	breq	.+6      	; 0x30b2 <vfprintf+0x522>
    30ac:	88 37       	cpi	r24, 0x78	; 120
    30ae:	11 f0       	breq	.+4      	; 0x30b4 <vfprintf+0x524>
    30b0:	be c0       	rjmp	.+380    	; 0x322e <vfprintf+0x69e>
    30b2:	00 61       	ori	r16, 0x10	; 16
    30b4:	04 ff       	sbrs	r16, 4
    30b6:	09 c0       	rjmp	.+18     	; 0x30ca <vfprintf+0x53a>
    30b8:	04 60       	ori	r16, 0x04	; 4
    30ba:	07 c0       	rjmp	.+14     	; 0x30ca <vfprintf+0x53a>
    30bc:	94 fe       	sbrs	r9, 4
    30be:	08 c0       	rjmp	.+16     	; 0x30d0 <vfprintf+0x540>
    30c0:	06 60       	ori	r16, 0x06	; 6
    30c2:	06 c0       	rjmp	.+12     	; 0x30d0 <vfprintf+0x540>
    30c4:	28 e0       	ldi	r18, 0x08	; 8
    30c6:	30 e0       	ldi	r19, 0x00	; 0
    30c8:	05 c0       	rjmp	.+10     	; 0x30d4 <vfprintf+0x544>
    30ca:	20 e1       	ldi	r18, 0x10	; 16
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	02 c0       	rjmp	.+4      	; 0x30d4 <vfprintf+0x544>
    30d0:	20 e1       	ldi	r18, 0x10	; 16
    30d2:	32 e0       	ldi	r19, 0x02	; 2
    30d4:	56 01       	movw	r10, r12
    30d6:	07 ff       	sbrs	r16, 7
    30d8:	09 c0       	rjmp	.+18     	; 0x30ec <vfprintf+0x55c>
    30da:	84 e0       	ldi	r24, 0x04	; 4
    30dc:	a8 0e       	add	r10, r24
    30de:	b1 1c       	adc	r11, r1
    30e0:	f6 01       	movw	r30, r12
    30e2:	60 81       	ld	r22, Z
    30e4:	71 81       	ldd	r23, Z+1	; 0x01
    30e6:	82 81       	ldd	r24, Z+2	; 0x02
    30e8:	93 81       	ldd	r25, Z+3	; 0x03
    30ea:	08 c0       	rjmp	.+16     	; 0x30fc <vfprintf+0x56c>
    30ec:	f2 e0       	ldi	r31, 0x02	; 2
    30ee:	af 0e       	add	r10, r31
    30f0:	b1 1c       	adc	r11, r1
    30f2:	f6 01       	movw	r30, r12
    30f4:	60 81       	ld	r22, Z
    30f6:	71 81       	ldd	r23, Z+1	; 0x01
    30f8:	80 e0       	ldi	r24, 0x00	; 0
    30fa:	90 e0       	ldi	r25, 0x00	; 0
    30fc:	a3 01       	movw	r20, r6
    30fe:	0e 94 a0 1b 	call	0x3740	; 0x3740 <__ultoa_invert>
    3102:	c8 2e       	mov	r12, r24
    3104:	c6 18       	sub	r12, r6
    3106:	0f 77       	andi	r16, 0x7F	; 127
    3108:	90 2e       	mov	r9, r16
    310a:	96 fe       	sbrs	r9, 6
    310c:	0b c0       	rjmp	.+22     	; 0x3124 <vfprintf+0x594>
    310e:	09 2d       	mov	r16, r9
    3110:	0e 7f       	andi	r16, 0xFE	; 254
    3112:	c1 16       	cp	r12, r17
    3114:	50 f4       	brcc	.+20     	; 0x312a <vfprintf+0x59a>
    3116:	94 fe       	sbrs	r9, 4
    3118:	0a c0       	rjmp	.+20     	; 0x312e <vfprintf+0x59e>
    311a:	92 fc       	sbrc	r9, 2
    311c:	08 c0       	rjmp	.+16     	; 0x312e <vfprintf+0x59e>
    311e:	09 2d       	mov	r16, r9
    3120:	0e 7e       	andi	r16, 0xEE	; 238
    3122:	05 c0       	rjmp	.+10     	; 0x312e <vfprintf+0x59e>
    3124:	dc 2c       	mov	r13, r12
    3126:	09 2d       	mov	r16, r9
    3128:	03 c0       	rjmp	.+6      	; 0x3130 <vfprintf+0x5a0>
    312a:	dc 2c       	mov	r13, r12
    312c:	01 c0       	rjmp	.+2      	; 0x3130 <vfprintf+0x5a0>
    312e:	d1 2e       	mov	r13, r17
    3130:	04 ff       	sbrs	r16, 4
    3132:	0d c0       	rjmp	.+26     	; 0x314e <vfprintf+0x5be>
    3134:	fe 01       	movw	r30, r28
    3136:	ec 0d       	add	r30, r12
    3138:	f1 1d       	adc	r31, r1
    313a:	80 81       	ld	r24, Z
    313c:	80 33       	cpi	r24, 0x30	; 48
    313e:	11 f4       	brne	.+4      	; 0x3144 <vfprintf+0x5b4>
    3140:	09 7e       	andi	r16, 0xE9	; 233
    3142:	09 c0       	rjmp	.+18     	; 0x3156 <vfprintf+0x5c6>
    3144:	02 ff       	sbrs	r16, 2
    3146:	06 c0       	rjmp	.+12     	; 0x3154 <vfprintf+0x5c4>
    3148:	d3 94       	inc	r13
    314a:	d3 94       	inc	r13
    314c:	04 c0       	rjmp	.+8      	; 0x3156 <vfprintf+0x5c6>
    314e:	80 2f       	mov	r24, r16
    3150:	86 78       	andi	r24, 0x86	; 134
    3152:	09 f0       	breq	.+2      	; 0x3156 <vfprintf+0x5c6>
    3154:	d3 94       	inc	r13
    3156:	03 fd       	sbrc	r16, 3
    3158:	11 c0       	rjmp	.+34     	; 0x317c <vfprintf+0x5ec>
    315a:	00 ff       	sbrs	r16, 0
    315c:	06 c0       	rjmp	.+12     	; 0x316a <vfprintf+0x5da>
    315e:	1c 2d       	mov	r17, r12
    3160:	d5 14       	cp	r13, r5
    3162:	80 f4       	brcc	.+32     	; 0x3184 <vfprintf+0x5f4>
    3164:	15 0d       	add	r17, r5
    3166:	1d 19       	sub	r17, r13
    3168:	0d c0       	rjmp	.+26     	; 0x3184 <vfprintf+0x5f4>
    316a:	d5 14       	cp	r13, r5
    316c:	58 f4       	brcc	.+22     	; 0x3184 <vfprintf+0x5f4>
    316e:	b7 01       	movw	r22, r14
    3170:	80 e2       	ldi	r24, 0x20	; 32
    3172:	90 e0       	ldi	r25, 0x00	; 0
    3174:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    3178:	d3 94       	inc	r13
    317a:	f7 cf       	rjmp	.-18     	; 0x316a <vfprintf+0x5da>
    317c:	d5 14       	cp	r13, r5
    317e:	10 f4       	brcc	.+4      	; 0x3184 <vfprintf+0x5f4>
    3180:	5d 18       	sub	r5, r13
    3182:	01 c0       	rjmp	.+2      	; 0x3186 <vfprintf+0x5f6>
    3184:	51 2c       	mov	r5, r1
    3186:	04 ff       	sbrs	r16, 4
    3188:	10 c0       	rjmp	.+32     	; 0x31aa <vfprintf+0x61a>
    318a:	b7 01       	movw	r22, r14
    318c:	80 e3       	ldi	r24, 0x30	; 48
    318e:	90 e0       	ldi	r25, 0x00	; 0
    3190:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    3194:	02 ff       	sbrs	r16, 2
    3196:	17 c0       	rjmp	.+46     	; 0x31c6 <vfprintf+0x636>
    3198:	01 fd       	sbrc	r16, 1
    319a:	03 c0       	rjmp	.+6      	; 0x31a2 <vfprintf+0x612>
    319c:	88 e7       	ldi	r24, 0x78	; 120
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	02 c0       	rjmp	.+4      	; 0x31a6 <vfprintf+0x616>
    31a2:	88 e5       	ldi	r24, 0x58	; 88
    31a4:	90 e0       	ldi	r25, 0x00	; 0
    31a6:	b7 01       	movw	r22, r14
    31a8:	0c c0       	rjmp	.+24     	; 0x31c2 <vfprintf+0x632>
    31aa:	80 2f       	mov	r24, r16
    31ac:	86 78       	andi	r24, 0x86	; 134
    31ae:	59 f0       	breq	.+22     	; 0x31c6 <vfprintf+0x636>
    31b0:	01 ff       	sbrs	r16, 1
    31b2:	02 c0       	rjmp	.+4      	; 0x31b8 <vfprintf+0x628>
    31b4:	8b e2       	ldi	r24, 0x2B	; 43
    31b6:	01 c0       	rjmp	.+2      	; 0x31ba <vfprintf+0x62a>
    31b8:	80 e2       	ldi	r24, 0x20	; 32
    31ba:	07 fd       	sbrc	r16, 7
    31bc:	8d e2       	ldi	r24, 0x2D	; 45
    31be:	b7 01       	movw	r22, r14
    31c0:	90 e0       	ldi	r25, 0x00	; 0
    31c2:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    31c6:	c1 16       	cp	r12, r17
    31c8:	38 f4       	brcc	.+14     	; 0x31d8 <vfprintf+0x648>
    31ca:	b7 01       	movw	r22, r14
    31cc:	80 e3       	ldi	r24, 0x30	; 48
    31ce:	90 e0       	ldi	r25, 0x00	; 0
    31d0:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    31d4:	11 50       	subi	r17, 0x01	; 1
    31d6:	f7 cf       	rjmp	.-18     	; 0x31c6 <vfprintf+0x636>
    31d8:	ca 94       	dec	r12
    31da:	f3 01       	movw	r30, r6
    31dc:	ec 0d       	add	r30, r12
    31de:	f1 1d       	adc	r31, r1
    31e0:	80 81       	ld	r24, Z
    31e2:	b7 01       	movw	r22, r14
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    31ea:	c1 10       	cpse	r12, r1
    31ec:	f5 cf       	rjmp	.-22     	; 0x31d8 <vfprintf+0x648>
    31ee:	15 c0       	rjmp	.+42     	; 0x321a <vfprintf+0x68a>
    31f0:	f4 e0       	ldi	r31, 0x04	; 4
    31f2:	f5 15       	cp	r31, r5
    31f4:	60 f5       	brcc	.+88     	; 0x324e <vfprintf+0x6be>
    31f6:	84 e0       	ldi	r24, 0x04	; 4
    31f8:	58 1a       	sub	r5, r24
    31fa:	93 fe       	sbrs	r9, 3
    31fc:	1f c0       	rjmp	.+62     	; 0x323c <vfprintf+0x6ac>
    31fe:	01 11       	cpse	r16, r1
    3200:	27 c0       	rjmp	.+78     	; 0x3250 <vfprintf+0x6c0>
    3202:	2c 85       	ldd	r18, Y+12	; 0x0c
    3204:	23 ff       	sbrs	r18, 3
    3206:	2a c0       	rjmp	.+84     	; 0x325c <vfprintf+0x6cc>
    3208:	08 e7       	ldi	r16, 0x78	; 120
    320a:	10 e0       	ldi	r17, 0x00	; 0
    320c:	39 2d       	mov	r19, r9
    320e:	30 71       	andi	r19, 0x10	; 16
    3210:	93 2e       	mov	r9, r19
    3212:	f8 01       	movw	r30, r16
    3214:	84 91       	lpm	r24, Z
    3216:	81 11       	cpse	r24, r1
    3218:	24 c0       	rjmp	.+72     	; 0x3262 <vfprintf+0x6d2>
    321a:	55 20       	and	r5, r5
    321c:	09 f4       	brne	.+2      	; 0x3220 <vfprintf+0x690>
    321e:	e4 cc       	rjmp	.-1592   	; 0x2be8 <vfprintf+0x58>
    3220:	b7 01       	movw	r22, r14
    3222:	80 e2       	ldi	r24, 0x20	; 32
    3224:	90 e0       	ldi	r25, 0x00	; 0
    3226:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    322a:	5a 94       	dec	r5
    322c:	f6 cf       	rjmp	.-20     	; 0x321a <vfprintf+0x68a>
    322e:	f7 01       	movw	r30, r14
    3230:	86 81       	ldd	r24, Z+6	; 0x06
    3232:	97 81       	ldd	r25, Z+7	; 0x07
    3234:	26 c0       	rjmp	.+76     	; 0x3282 <vfprintf+0x6f2>
    3236:	8f ef       	ldi	r24, 0xFF	; 255
    3238:	9f ef       	ldi	r25, 0xFF	; 255
    323a:	23 c0       	rjmp	.+70     	; 0x3282 <vfprintf+0x6f2>
    323c:	b7 01       	movw	r22, r14
    323e:	80 e2       	ldi	r24, 0x20	; 32
    3240:	90 e0       	ldi	r25, 0x00	; 0
    3242:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    3246:	5a 94       	dec	r5
    3248:	51 10       	cpse	r5, r1
    324a:	f8 cf       	rjmp	.-16     	; 0x323c <vfprintf+0x6ac>
    324c:	d8 cf       	rjmp	.-80     	; 0x31fe <vfprintf+0x66e>
    324e:	51 2c       	mov	r5, r1
    3250:	b7 01       	movw	r22, r14
    3252:	80 2f       	mov	r24, r16
    3254:	90 e0       	ldi	r25, 0x00	; 0
    3256:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    325a:	d3 cf       	rjmp	.-90     	; 0x3202 <vfprintf+0x672>
    325c:	0c e7       	ldi	r16, 0x7C	; 124
    325e:	10 e0       	ldi	r17, 0x00	; 0
    3260:	d5 cf       	rjmp	.-86     	; 0x320c <vfprintf+0x67c>
    3262:	91 10       	cpse	r9, r1
    3264:	80 52       	subi	r24, 0x20	; 32
    3266:	b7 01       	movw	r22, r14
    3268:	90 e0       	ldi	r25, 0x00	; 0
    326a:	0e 94 1c 1b 	call	0x3638	; 0x3638 <fputc>
    326e:	0f 5f       	subi	r16, 0xFF	; 255
    3270:	1f 4f       	sbci	r17, 0xFF	; 255
    3272:	cf cf       	rjmp	.-98     	; 0x3212 <vfprintf+0x682>
    3274:	23 e0       	ldi	r18, 0x03	; 3
    3276:	25 15       	cp	r18, r5
    3278:	10 f4       	brcc	.+4      	; 0x327e <vfprintf+0x6ee>
    327a:	83 e0       	ldi	r24, 0x03	; 3
    327c:	bd cf       	rjmp	.-134    	; 0x31f8 <vfprintf+0x668>
    327e:	51 2c       	mov	r5, r1
    3280:	c0 cf       	rjmp	.-128    	; 0x3202 <vfprintf+0x672>
    3282:	60 96       	adiw	r28, 0x10	; 16
    3284:	e2 e1       	ldi	r30, 0x12	; 18
    3286:	0c 94 5e 19 	jmp	0x32bc	; 0x32bc <__epilogue_restores__>

0000328a <__prologue_saves__>:
    328a:	2f 92       	push	r2
    328c:	3f 92       	push	r3
    328e:	4f 92       	push	r4
    3290:	5f 92       	push	r5
    3292:	6f 92       	push	r6
    3294:	7f 92       	push	r7
    3296:	8f 92       	push	r8
    3298:	9f 92       	push	r9
    329a:	af 92       	push	r10
    329c:	bf 92       	push	r11
    329e:	cf 92       	push	r12
    32a0:	df 92       	push	r13
    32a2:	ef 92       	push	r14
    32a4:	ff 92       	push	r15
    32a6:	0f 93       	push	r16
    32a8:	1f 93       	push	r17
    32aa:	cf 93       	push	r28
    32ac:	df 93       	push	r29
    32ae:	cd b7       	in	r28, 0x3d	; 61
    32b0:	de b7       	in	r29, 0x3e	; 62
    32b2:	ca 1b       	sub	r28, r26
    32b4:	db 0b       	sbc	r29, r27
    32b6:	cd bf       	out	0x3d, r28	; 61
    32b8:	de bf       	out	0x3e, r29	; 62
    32ba:	09 94       	ijmp

000032bc <__epilogue_restores__>:
    32bc:	2a 88       	ldd	r2, Y+18	; 0x12
    32be:	39 88       	ldd	r3, Y+17	; 0x11
    32c0:	48 88       	ldd	r4, Y+16	; 0x10
    32c2:	5f 84       	ldd	r5, Y+15	; 0x0f
    32c4:	6e 84       	ldd	r6, Y+14	; 0x0e
    32c6:	7d 84       	ldd	r7, Y+13	; 0x0d
    32c8:	8c 84       	ldd	r8, Y+12	; 0x0c
    32ca:	9b 84       	ldd	r9, Y+11	; 0x0b
    32cc:	aa 84       	ldd	r10, Y+10	; 0x0a
    32ce:	b9 84       	ldd	r11, Y+9	; 0x09
    32d0:	c8 84       	ldd	r12, Y+8	; 0x08
    32d2:	df 80       	ldd	r13, Y+7	; 0x07
    32d4:	ee 80       	ldd	r14, Y+6	; 0x06
    32d6:	fd 80       	ldd	r15, Y+5	; 0x05
    32d8:	0c 81       	ldd	r16, Y+4	; 0x04
    32da:	1b 81       	ldd	r17, Y+3	; 0x03
    32dc:	aa 81       	ldd	r26, Y+2	; 0x02
    32de:	b9 81       	ldd	r27, Y+1	; 0x01
    32e0:	ce 0f       	add	r28, r30
    32e2:	d1 1d       	adc	r29, r1
    32e4:	cd bf       	out	0x3d, r28	; 61
    32e6:	de bf       	out	0x3e, r29	; 62
    32e8:	ed 01       	movw	r28, r26
    32ea:	08 95       	ret

000032ec <__ftoa_engine>:
    32ec:	28 30       	cpi	r18, 0x08	; 8
    32ee:	08 f0       	brcs	.+2      	; 0x32f2 <__ftoa_engine+0x6>
    32f0:	27 e0       	ldi	r18, 0x07	; 7
    32f2:	33 27       	eor	r19, r19
    32f4:	da 01       	movw	r26, r20
    32f6:	99 0f       	add	r25, r25
    32f8:	31 1d       	adc	r19, r1
    32fa:	87 fd       	sbrc	r24, 7
    32fc:	91 60       	ori	r25, 0x01	; 1
    32fe:	00 96       	adiw	r24, 0x00	; 0
    3300:	61 05       	cpc	r22, r1
    3302:	71 05       	cpc	r23, r1
    3304:	39 f4       	brne	.+14     	; 0x3314 <__ftoa_engine+0x28>
    3306:	32 60       	ori	r19, 0x02	; 2
    3308:	2e 5f       	subi	r18, 0xFE	; 254
    330a:	3d 93       	st	X+, r19
    330c:	30 e3       	ldi	r19, 0x30	; 48
    330e:	2a 95       	dec	r18
    3310:	e1 f7       	brne	.-8      	; 0x330a <__ftoa_engine+0x1e>
    3312:	08 95       	ret
    3314:	9f 3f       	cpi	r25, 0xFF	; 255
    3316:	30 f0       	brcs	.+12     	; 0x3324 <__ftoa_engine+0x38>
    3318:	80 38       	cpi	r24, 0x80	; 128
    331a:	71 05       	cpc	r23, r1
    331c:	61 05       	cpc	r22, r1
    331e:	09 f0       	breq	.+2      	; 0x3322 <__ftoa_engine+0x36>
    3320:	3c 5f       	subi	r19, 0xFC	; 252
    3322:	3c 5f       	subi	r19, 0xFC	; 252
    3324:	3d 93       	st	X+, r19
    3326:	91 30       	cpi	r25, 0x01	; 1
    3328:	08 f0       	brcs	.+2      	; 0x332c <__ftoa_engine+0x40>
    332a:	80 68       	ori	r24, 0x80	; 128
    332c:	91 1d       	adc	r25, r1
    332e:	df 93       	push	r29
    3330:	cf 93       	push	r28
    3332:	1f 93       	push	r17
    3334:	0f 93       	push	r16
    3336:	ff 92       	push	r15
    3338:	ef 92       	push	r14
    333a:	19 2f       	mov	r17, r25
    333c:	98 7f       	andi	r25, 0xF8	; 248
    333e:	96 95       	lsr	r25
    3340:	e9 2f       	mov	r30, r25
    3342:	96 95       	lsr	r25
    3344:	96 95       	lsr	r25
    3346:	e9 0f       	add	r30, r25
    3348:	ff 27       	eor	r31, r31
    334a:	e6 52       	subi	r30, 0x26	; 38
    334c:	ff 4f       	sbci	r31, 0xFF	; 255
    334e:	99 27       	eor	r25, r25
    3350:	33 27       	eor	r19, r19
    3352:	ee 24       	eor	r14, r14
    3354:	ff 24       	eor	r15, r15
    3356:	a7 01       	movw	r20, r14
    3358:	e7 01       	movw	r28, r14
    335a:	05 90       	lpm	r0, Z+
    335c:	08 94       	sec
    335e:	07 94       	ror	r0
    3360:	28 f4       	brcc	.+10     	; 0x336c <__ftoa_engine+0x80>
    3362:	36 0f       	add	r19, r22
    3364:	e7 1e       	adc	r14, r23
    3366:	f8 1e       	adc	r15, r24
    3368:	49 1f       	adc	r20, r25
    336a:	51 1d       	adc	r21, r1
    336c:	66 0f       	add	r22, r22
    336e:	77 1f       	adc	r23, r23
    3370:	88 1f       	adc	r24, r24
    3372:	99 1f       	adc	r25, r25
    3374:	06 94       	lsr	r0
    3376:	a1 f7       	brne	.-24     	; 0x3360 <__ftoa_engine+0x74>
    3378:	05 90       	lpm	r0, Z+
    337a:	07 94       	ror	r0
    337c:	28 f4       	brcc	.+10     	; 0x3388 <__ftoa_engine+0x9c>
    337e:	e7 0e       	add	r14, r23
    3380:	f8 1e       	adc	r15, r24
    3382:	49 1f       	adc	r20, r25
    3384:	56 1f       	adc	r21, r22
    3386:	c1 1d       	adc	r28, r1
    3388:	77 0f       	add	r23, r23
    338a:	88 1f       	adc	r24, r24
    338c:	99 1f       	adc	r25, r25
    338e:	66 1f       	adc	r22, r22
    3390:	06 94       	lsr	r0
    3392:	a1 f7       	brne	.-24     	; 0x337c <__ftoa_engine+0x90>
    3394:	05 90       	lpm	r0, Z+
    3396:	07 94       	ror	r0
    3398:	28 f4       	brcc	.+10     	; 0x33a4 <__ftoa_engine+0xb8>
    339a:	f8 0e       	add	r15, r24
    339c:	49 1f       	adc	r20, r25
    339e:	56 1f       	adc	r21, r22
    33a0:	c7 1f       	adc	r28, r23
    33a2:	d1 1d       	adc	r29, r1
    33a4:	88 0f       	add	r24, r24
    33a6:	99 1f       	adc	r25, r25
    33a8:	66 1f       	adc	r22, r22
    33aa:	77 1f       	adc	r23, r23
    33ac:	06 94       	lsr	r0
    33ae:	a1 f7       	brne	.-24     	; 0x3398 <__ftoa_engine+0xac>
    33b0:	05 90       	lpm	r0, Z+
    33b2:	07 94       	ror	r0
    33b4:	20 f4       	brcc	.+8      	; 0x33be <__ftoa_engine+0xd2>
    33b6:	49 0f       	add	r20, r25
    33b8:	56 1f       	adc	r21, r22
    33ba:	c7 1f       	adc	r28, r23
    33bc:	d8 1f       	adc	r29, r24
    33be:	99 0f       	add	r25, r25
    33c0:	66 1f       	adc	r22, r22
    33c2:	77 1f       	adc	r23, r23
    33c4:	88 1f       	adc	r24, r24
    33c6:	06 94       	lsr	r0
    33c8:	a9 f7       	brne	.-22     	; 0x33b4 <__ftoa_engine+0xc8>
    33ca:	84 91       	lpm	r24, Z
    33cc:	10 95       	com	r17
    33ce:	17 70       	andi	r17, 0x07	; 7
    33d0:	41 f0       	breq	.+16     	; 0x33e2 <__ftoa_engine+0xf6>
    33d2:	d6 95       	lsr	r29
    33d4:	c7 95       	ror	r28
    33d6:	57 95       	ror	r21
    33d8:	47 95       	ror	r20
    33da:	f7 94       	ror	r15
    33dc:	e7 94       	ror	r14
    33de:	1a 95       	dec	r17
    33e0:	c1 f7       	brne	.-16     	; 0x33d2 <__ftoa_engine+0xe6>
    33e2:	e0 e8       	ldi	r30, 0x80	; 128
    33e4:	f0 e0       	ldi	r31, 0x00	; 0
    33e6:	68 94       	set
    33e8:	15 90       	lpm	r1, Z+
    33ea:	15 91       	lpm	r17, Z+
    33ec:	35 91       	lpm	r19, Z+
    33ee:	65 91       	lpm	r22, Z+
    33f0:	95 91       	lpm	r25, Z+
    33f2:	05 90       	lpm	r0, Z+
    33f4:	7f e2       	ldi	r23, 0x2F	; 47
    33f6:	73 95       	inc	r23
    33f8:	e1 18       	sub	r14, r1
    33fa:	f1 0a       	sbc	r15, r17
    33fc:	43 0b       	sbc	r20, r19
    33fe:	56 0b       	sbc	r21, r22
    3400:	c9 0b       	sbc	r28, r25
    3402:	d0 09       	sbc	r29, r0
    3404:	c0 f7       	brcc	.-16     	; 0x33f6 <__ftoa_engine+0x10a>
    3406:	e1 0c       	add	r14, r1
    3408:	f1 1e       	adc	r15, r17
    340a:	43 1f       	adc	r20, r19
    340c:	56 1f       	adc	r21, r22
    340e:	c9 1f       	adc	r28, r25
    3410:	d0 1d       	adc	r29, r0
    3412:	7e f4       	brtc	.+30     	; 0x3432 <__ftoa_engine+0x146>
    3414:	70 33       	cpi	r23, 0x30	; 48
    3416:	11 f4       	brne	.+4      	; 0x341c <__ftoa_engine+0x130>
    3418:	8a 95       	dec	r24
    341a:	e6 cf       	rjmp	.-52     	; 0x33e8 <__ftoa_engine+0xfc>
    341c:	e8 94       	clt
    341e:	01 50       	subi	r16, 0x01	; 1
    3420:	30 f0       	brcs	.+12     	; 0x342e <__ftoa_engine+0x142>
    3422:	08 0f       	add	r16, r24
    3424:	0a f4       	brpl	.+2      	; 0x3428 <__ftoa_engine+0x13c>
    3426:	00 27       	eor	r16, r16
    3428:	02 17       	cp	r16, r18
    342a:	08 f4       	brcc	.+2      	; 0x342e <__ftoa_engine+0x142>
    342c:	20 2f       	mov	r18, r16
    342e:	23 95       	inc	r18
    3430:	02 2f       	mov	r16, r18
    3432:	7a 33       	cpi	r23, 0x3A	; 58
    3434:	28 f0       	brcs	.+10     	; 0x3440 <__ftoa_engine+0x154>
    3436:	79 e3       	ldi	r23, 0x39	; 57
    3438:	7d 93       	st	X+, r23
    343a:	2a 95       	dec	r18
    343c:	e9 f7       	brne	.-6      	; 0x3438 <__ftoa_engine+0x14c>
    343e:	10 c0       	rjmp	.+32     	; 0x3460 <__ftoa_engine+0x174>
    3440:	7d 93       	st	X+, r23
    3442:	2a 95       	dec	r18
    3444:	89 f6       	brne	.-94     	; 0x33e8 <__ftoa_engine+0xfc>
    3446:	06 94       	lsr	r0
    3448:	97 95       	ror	r25
    344a:	67 95       	ror	r22
    344c:	37 95       	ror	r19
    344e:	17 95       	ror	r17
    3450:	17 94       	ror	r1
    3452:	e1 18       	sub	r14, r1
    3454:	f1 0a       	sbc	r15, r17
    3456:	43 0b       	sbc	r20, r19
    3458:	56 0b       	sbc	r21, r22
    345a:	c9 0b       	sbc	r28, r25
    345c:	d0 09       	sbc	r29, r0
    345e:	98 f0       	brcs	.+38     	; 0x3486 <__ftoa_engine+0x19a>
    3460:	23 95       	inc	r18
    3462:	7e 91       	ld	r23, -X
    3464:	73 95       	inc	r23
    3466:	7a 33       	cpi	r23, 0x3A	; 58
    3468:	08 f0       	brcs	.+2      	; 0x346c <__ftoa_engine+0x180>
    346a:	70 e3       	ldi	r23, 0x30	; 48
    346c:	7c 93       	st	X, r23
    346e:	20 13       	cpse	r18, r16
    3470:	b8 f7       	brcc	.-18     	; 0x3460 <__ftoa_engine+0x174>
    3472:	7e 91       	ld	r23, -X
    3474:	70 61       	ori	r23, 0x10	; 16
    3476:	7d 93       	st	X+, r23
    3478:	30 f0       	brcs	.+12     	; 0x3486 <__ftoa_engine+0x19a>
    347a:	83 95       	inc	r24
    347c:	71 e3       	ldi	r23, 0x31	; 49
    347e:	7d 93       	st	X+, r23
    3480:	70 e3       	ldi	r23, 0x30	; 48
    3482:	2a 95       	dec	r18
    3484:	e1 f7       	brne	.-8      	; 0x347e <__ftoa_engine+0x192>
    3486:	11 24       	eor	r1, r1
    3488:	ef 90       	pop	r14
    348a:	ff 90       	pop	r15
    348c:	0f 91       	pop	r16
    348e:	1f 91       	pop	r17
    3490:	cf 91       	pop	r28
    3492:	df 91       	pop	r29
    3494:	99 27       	eor	r25, r25
    3496:	87 fd       	sbrc	r24, 7
    3498:	90 95       	com	r25
    349a:	08 95       	ret

0000349c <isspace>:
    349c:	91 11       	cpse	r25, r1
    349e:	0c 94 fe 1b 	jmp	0x37fc	; 0x37fc <__ctype_isfalse>
    34a2:	80 32       	cpi	r24, 0x20	; 32
    34a4:	19 f0       	breq	.+6      	; 0x34ac <isspace+0x10>
    34a6:	89 50       	subi	r24, 0x09	; 9
    34a8:	85 50       	subi	r24, 0x05	; 5
    34aa:	c8 f7       	brcc	.-14     	; 0x349e <isspace+0x2>
    34ac:	08 95       	ret

000034ae <tolower>:
    34ae:	91 11       	cpse	r25, r1
    34b0:	08 95       	ret
    34b2:	81 54       	subi	r24, 0x41	; 65
    34b4:	8a 51       	subi	r24, 0x1A	; 26
    34b6:	08 f4       	brcc	.+2      	; 0x34ba <tolower+0xc>
    34b8:	80 5e       	subi	r24, 0xE0	; 224
    34ba:	85 5a       	subi	r24, 0xA5	; 165
    34bc:	08 95       	ret

000034be <strchr_P>:
    34be:	fc 01       	movw	r30, r24
    34c0:	05 90       	lpm	r0, Z+
    34c2:	06 16       	cp	r0, r22
    34c4:	21 f0       	breq	.+8      	; 0x34ce <strchr_P+0x10>
    34c6:	00 20       	and	r0, r0
    34c8:	d9 f7       	brne	.-10     	; 0x34c0 <strchr_P+0x2>
    34ca:	c0 01       	movw	r24, r0
    34cc:	08 95       	ret
    34ce:	31 97       	sbiw	r30, 0x01	; 1
    34d0:	cf 01       	movw	r24, r30
    34d2:	08 95       	ret

000034d4 <strnlen_P>:
    34d4:	fc 01       	movw	r30, r24
    34d6:	05 90       	lpm	r0, Z+
    34d8:	61 50       	subi	r22, 0x01	; 1
    34da:	70 40       	sbci	r23, 0x00	; 0
    34dc:	01 10       	cpse	r0, r1
    34de:	d8 f7       	brcc	.-10     	; 0x34d6 <strnlen_P+0x2>
    34e0:	80 95       	com	r24
    34e2:	90 95       	com	r25
    34e4:	8e 0f       	add	r24, r30
    34e6:	9f 1f       	adc	r25, r31
    34e8:	08 95       	ret

000034ea <strtok>:
    34ea:	40 e4       	ldi	r20, 0x40	; 64
    34ec:	58 e3       	ldi	r21, 0x38	; 56
    34ee:	0e 94 b7 1a 	call	0x356e	; 0x356e <strtok_r>
    34f2:	08 95       	ret

000034f4 <strcmp>:
    34f4:	fb 01       	movw	r30, r22
    34f6:	dc 01       	movw	r26, r24
    34f8:	8d 91       	ld	r24, X+
    34fa:	01 90       	ld	r0, Z+
    34fc:	80 19       	sub	r24, r0
    34fe:	01 10       	cpse	r0, r1
    3500:	d9 f3       	breq	.-10     	; 0x34f8 <strcmp+0x4>
    3502:	99 0b       	sbc	r25, r25
    3504:	08 95       	ret

00003506 <strncpy>:
    3506:	fb 01       	movw	r30, r22
    3508:	dc 01       	movw	r26, r24
    350a:	41 50       	subi	r20, 0x01	; 1
    350c:	50 40       	sbci	r21, 0x00	; 0
    350e:	48 f0       	brcs	.+18     	; 0x3522 <strncpy+0x1c>
    3510:	01 90       	ld	r0, Z+
    3512:	0d 92       	st	X+, r0
    3514:	00 20       	and	r0, r0
    3516:	c9 f7       	brne	.-14     	; 0x350a <strncpy+0x4>
    3518:	01 c0       	rjmp	.+2      	; 0x351c <strncpy+0x16>
    351a:	1d 92       	st	X+, r1
    351c:	41 50       	subi	r20, 0x01	; 1
    351e:	50 40       	sbci	r21, 0x00	; 0
    3520:	e0 f7       	brcc	.-8      	; 0x351a <strncpy+0x14>
    3522:	08 95       	ret

00003524 <strnlen>:
    3524:	fc 01       	movw	r30, r24
    3526:	61 50       	subi	r22, 0x01	; 1
    3528:	70 40       	sbci	r23, 0x00	; 0
    352a:	01 90       	ld	r0, Z+
    352c:	01 10       	cpse	r0, r1
    352e:	d8 f7       	brcc	.-10     	; 0x3526 <strnlen+0x2>
    3530:	80 95       	com	r24
    3532:	90 95       	com	r25
    3534:	8e 0f       	add	r24, r30
    3536:	9f 1f       	adc	r25, r31
    3538:	08 95       	ret

0000353a <strstr>:
    353a:	fb 01       	movw	r30, r22
    353c:	51 91       	ld	r21, Z+
    353e:	55 23       	and	r21, r21
    3540:	a9 f0       	breq	.+42     	; 0x356c <strstr+0x32>
    3542:	bf 01       	movw	r22, r30
    3544:	dc 01       	movw	r26, r24
    3546:	4d 91       	ld	r20, X+
    3548:	45 17       	cp	r20, r21
    354a:	41 11       	cpse	r20, r1
    354c:	e1 f7       	brne	.-8      	; 0x3546 <strstr+0xc>
    354e:	59 f4       	brne	.+22     	; 0x3566 <strstr+0x2c>
    3550:	cd 01       	movw	r24, r26
    3552:	01 90       	ld	r0, Z+
    3554:	00 20       	and	r0, r0
    3556:	49 f0       	breq	.+18     	; 0x356a <strstr+0x30>
    3558:	4d 91       	ld	r20, X+
    355a:	40 15       	cp	r20, r0
    355c:	41 11       	cpse	r20, r1
    355e:	c9 f3       	breq	.-14     	; 0x3552 <strstr+0x18>
    3560:	fb 01       	movw	r30, r22
    3562:	41 11       	cpse	r20, r1
    3564:	ef cf       	rjmp	.-34     	; 0x3544 <strstr+0xa>
    3566:	81 e0       	ldi	r24, 0x01	; 1
    3568:	90 e0       	ldi	r25, 0x00	; 0
    356a:	01 97       	sbiw	r24, 0x01	; 1
    356c:	08 95       	ret

0000356e <strtok_r>:
    356e:	fa 01       	movw	r30, r20
    3570:	a1 91       	ld	r26, Z+
    3572:	b0 81       	ld	r27, Z
    3574:	00 97       	sbiw	r24, 0x00	; 0
    3576:	19 f4       	brne	.+6      	; 0x357e <strtok_r+0x10>
    3578:	10 97       	sbiw	r26, 0x00	; 0
    357a:	e1 f0       	breq	.+56     	; 0x35b4 <strtok_r+0x46>
    357c:	cd 01       	movw	r24, r26
    357e:	dc 01       	movw	r26, r24
    3580:	cd 01       	movw	r24, r26
    3582:	0d 90       	ld	r0, X+
    3584:	00 20       	and	r0, r0
    3586:	11 f4       	brne	.+4      	; 0x358c <strtok_r+0x1e>
    3588:	c0 01       	movw	r24, r0
    358a:	13 c0       	rjmp	.+38     	; 0x35b2 <strtok_r+0x44>
    358c:	fb 01       	movw	r30, r22
    358e:	21 91       	ld	r18, Z+
    3590:	22 23       	and	r18, r18
    3592:	19 f0       	breq	.+6      	; 0x359a <strtok_r+0x2c>
    3594:	20 15       	cp	r18, r0
    3596:	d9 f7       	brne	.-10     	; 0x358e <strtok_r+0x20>
    3598:	f3 cf       	rjmp	.-26     	; 0x3580 <strtok_r+0x12>
    359a:	fb 01       	movw	r30, r22
    359c:	21 91       	ld	r18, Z+
    359e:	20 15       	cp	r18, r0
    35a0:	19 f4       	brne	.+6      	; 0x35a8 <strtok_r+0x3a>
    35a2:	1e 92       	st	-X, r1
    35a4:	11 96       	adiw	r26, 0x01	; 1
    35a6:	06 c0       	rjmp	.+12     	; 0x35b4 <strtok_r+0x46>
    35a8:	22 23       	and	r18, r18
    35aa:	c1 f7       	brne	.-16     	; 0x359c <strtok_r+0x2e>
    35ac:	0d 90       	ld	r0, X+
    35ae:	00 20       	and	r0, r0
    35b0:	a1 f7       	brne	.-24     	; 0x359a <strtok_r+0x2c>
    35b2:	d0 01       	movw	r26, r0
    35b4:	fa 01       	movw	r30, r20
    35b6:	a1 93       	st	Z+, r26
    35b8:	b0 83       	st	Z, r27
    35ba:	08 95       	ret

000035bc <fgetc>:
    35bc:	cf 93       	push	r28
    35be:	df 93       	push	r29
    35c0:	ec 01       	movw	r28, r24
    35c2:	2b 81       	ldd	r18, Y+3	; 0x03
    35c4:	20 ff       	sbrs	r18, 0
    35c6:	33 c0       	rjmp	.+102    	; 0x362e <fgetc+0x72>
    35c8:	26 ff       	sbrs	r18, 6
    35ca:	0a c0       	rjmp	.+20     	; 0x35e0 <fgetc+0x24>
    35cc:	2f 7b       	andi	r18, 0xBF	; 191
    35ce:	2b 83       	std	Y+3, r18	; 0x03
    35d0:	8e 81       	ldd	r24, Y+6	; 0x06
    35d2:	9f 81       	ldd	r25, Y+7	; 0x07
    35d4:	01 96       	adiw	r24, 0x01	; 1
    35d6:	8e 83       	std	Y+6, r24	; 0x06
    35d8:	9f 83       	std	Y+7, r25	; 0x07
    35da:	8a 81       	ldd	r24, Y+2	; 0x02
    35dc:	90 e0       	ldi	r25, 0x00	; 0
    35de:	29 c0       	rjmp	.+82     	; 0x3632 <fgetc+0x76>
    35e0:	22 ff       	sbrs	r18, 2
    35e2:	0f c0       	rjmp	.+30     	; 0x3602 <fgetc+0x46>
    35e4:	e8 81       	ld	r30, Y
    35e6:	f9 81       	ldd	r31, Y+1	; 0x01
    35e8:	80 81       	ld	r24, Z
    35ea:	08 2e       	mov	r0, r24
    35ec:	00 0c       	add	r0, r0
    35ee:	99 0b       	sbc	r25, r25
    35f0:	00 97       	sbiw	r24, 0x00	; 0
    35f2:	19 f4       	brne	.+6      	; 0x35fa <fgetc+0x3e>
    35f4:	20 62       	ori	r18, 0x20	; 32
    35f6:	2b 83       	std	Y+3, r18	; 0x03
    35f8:	1a c0       	rjmp	.+52     	; 0x362e <fgetc+0x72>
    35fa:	31 96       	adiw	r30, 0x01	; 1
    35fc:	e8 83       	st	Y, r30
    35fe:	f9 83       	std	Y+1, r31	; 0x01
    3600:	0e c0       	rjmp	.+28     	; 0x361e <fgetc+0x62>
    3602:	ea 85       	ldd	r30, Y+10	; 0x0a
    3604:	fb 85       	ldd	r31, Y+11	; 0x0b
    3606:	09 95       	icall
    3608:	97 ff       	sbrs	r25, 7
    360a:	09 c0       	rjmp	.+18     	; 0x361e <fgetc+0x62>
    360c:	2b 81       	ldd	r18, Y+3	; 0x03
    360e:	01 96       	adiw	r24, 0x01	; 1
    3610:	11 f0       	breq	.+4      	; 0x3616 <fgetc+0x5a>
    3612:	80 e2       	ldi	r24, 0x20	; 32
    3614:	01 c0       	rjmp	.+2      	; 0x3618 <fgetc+0x5c>
    3616:	80 e1       	ldi	r24, 0x10	; 16
    3618:	82 2b       	or	r24, r18
    361a:	8b 83       	std	Y+3, r24	; 0x03
    361c:	08 c0       	rjmp	.+16     	; 0x362e <fgetc+0x72>
    361e:	2e 81       	ldd	r18, Y+6	; 0x06
    3620:	3f 81       	ldd	r19, Y+7	; 0x07
    3622:	2f 5f       	subi	r18, 0xFF	; 255
    3624:	3f 4f       	sbci	r19, 0xFF	; 255
    3626:	2e 83       	std	Y+6, r18	; 0x06
    3628:	3f 83       	std	Y+7, r19	; 0x07
    362a:	99 27       	eor	r25, r25
    362c:	02 c0       	rjmp	.+4      	; 0x3632 <fgetc+0x76>
    362e:	8f ef       	ldi	r24, 0xFF	; 255
    3630:	9f ef       	ldi	r25, 0xFF	; 255
    3632:	df 91       	pop	r29
    3634:	cf 91       	pop	r28
    3636:	08 95       	ret

00003638 <fputc>:
    3638:	0f 93       	push	r16
    363a:	1f 93       	push	r17
    363c:	cf 93       	push	r28
    363e:	df 93       	push	r29
    3640:	fb 01       	movw	r30, r22
    3642:	23 81       	ldd	r18, Z+3	; 0x03
    3644:	21 fd       	sbrc	r18, 1
    3646:	03 c0       	rjmp	.+6      	; 0x364e <fputc+0x16>
    3648:	8f ef       	ldi	r24, 0xFF	; 255
    364a:	9f ef       	ldi	r25, 0xFF	; 255
    364c:	2c c0       	rjmp	.+88     	; 0x36a6 <fputc+0x6e>
    364e:	22 ff       	sbrs	r18, 2
    3650:	16 c0       	rjmp	.+44     	; 0x367e <fputc+0x46>
    3652:	46 81       	ldd	r20, Z+6	; 0x06
    3654:	57 81       	ldd	r21, Z+7	; 0x07
    3656:	24 81       	ldd	r18, Z+4	; 0x04
    3658:	35 81       	ldd	r19, Z+5	; 0x05
    365a:	42 17       	cp	r20, r18
    365c:	53 07       	cpc	r21, r19
    365e:	44 f4       	brge	.+16     	; 0x3670 <fputc+0x38>
    3660:	a0 81       	ld	r26, Z
    3662:	b1 81       	ldd	r27, Z+1	; 0x01
    3664:	9d 01       	movw	r18, r26
    3666:	2f 5f       	subi	r18, 0xFF	; 255
    3668:	3f 4f       	sbci	r19, 0xFF	; 255
    366a:	20 83       	st	Z, r18
    366c:	31 83       	std	Z+1, r19	; 0x01
    366e:	8c 93       	st	X, r24
    3670:	26 81       	ldd	r18, Z+6	; 0x06
    3672:	37 81       	ldd	r19, Z+7	; 0x07
    3674:	2f 5f       	subi	r18, 0xFF	; 255
    3676:	3f 4f       	sbci	r19, 0xFF	; 255
    3678:	26 83       	std	Z+6, r18	; 0x06
    367a:	37 83       	std	Z+7, r19	; 0x07
    367c:	14 c0       	rjmp	.+40     	; 0x36a6 <fputc+0x6e>
    367e:	8b 01       	movw	r16, r22
    3680:	ec 01       	movw	r28, r24
    3682:	fb 01       	movw	r30, r22
    3684:	00 84       	ldd	r0, Z+8	; 0x08
    3686:	f1 85       	ldd	r31, Z+9	; 0x09
    3688:	e0 2d       	mov	r30, r0
    368a:	09 95       	icall
    368c:	89 2b       	or	r24, r25
    368e:	e1 f6       	brne	.-72     	; 0x3648 <fputc+0x10>
    3690:	d8 01       	movw	r26, r16
    3692:	16 96       	adiw	r26, 0x06	; 6
    3694:	8d 91       	ld	r24, X+
    3696:	9c 91       	ld	r25, X
    3698:	17 97       	sbiw	r26, 0x07	; 7
    369a:	01 96       	adiw	r24, 0x01	; 1
    369c:	16 96       	adiw	r26, 0x06	; 6
    369e:	8d 93       	st	X+, r24
    36a0:	9c 93       	st	X, r25
    36a2:	17 97       	sbiw	r26, 0x07	; 7
    36a4:	ce 01       	movw	r24, r28
    36a6:	df 91       	pop	r29
    36a8:	cf 91       	pop	r28
    36aa:	1f 91       	pop	r17
    36ac:	0f 91       	pop	r16
    36ae:	08 95       	ret

000036b0 <printf>:
    36b0:	a0 e0       	ldi	r26, 0x00	; 0
    36b2:	b0 e0       	ldi	r27, 0x00	; 0
    36b4:	ee e5       	ldi	r30, 0x5E	; 94
    36b6:	fb e1       	ldi	r31, 0x1B	; 27
    36b8:	0c 94 55 19 	jmp	0x32aa	; 0x32aa <__prologue_saves__+0x20>
    36bc:	ae 01       	movw	r20, r28
    36be:	4b 5f       	subi	r20, 0xFB	; 251
    36c0:	5f 4f       	sbci	r21, 0xFF	; 255
    36c2:	fa 01       	movw	r30, r20
    36c4:	61 91       	ld	r22, Z+
    36c6:	71 91       	ld	r23, Z+
    36c8:	af 01       	movw	r20, r30
    36ca:	80 91 0c 39 	lds	r24, 0x390C	; 0x80390c <__iob+0x2>
    36ce:	90 91 0d 39 	lds	r25, 0x390D	; 0x80390d <__iob+0x3>
    36d2:	0e 94 c8 15 	call	0x2b90	; 0x2b90 <vfprintf>
    36d6:	e2 e0       	ldi	r30, 0x02	; 2
    36d8:	0c 94 6e 19 	jmp	0x32dc	; 0x32dc <__epilogue_restores__+0x20>

000036dc <sscanf>:
    36dc:	ae e0       	ldi	r26, 0x0E	; 14
    36de:	b0 e0       	ldi	r27, 0x00	; 0
    36e0:	e4 e7       	ldi	r30, 0x74	; 116
    36e2:	fb e1       	ldi	r31, 0x1B	; 27
    36e4:	0c 94 55 19 	jmp	0x32aa	; 0x32aa <__prologue_saves__+0x20>
    36e8:	85 e0       	ldi	r24, 0x05	; 5
    36ea:	8c 83       	std	Y+4, r24	; 0x04
    36ec:	8b 89       	ldd	r24, Y+19	; 0x13
    36ee:	9c 89       	ldd	r25, Y+20	; 0x14
    36f0:	89 83       	std	Y+1, r24	; 0x01
    36f2:	9a 83       	std	Y+2, r25	; 0x02
    36f4:	ae 01       	movw	r20, r28
    36f6:	49 5e       	subi	r20, 0xE9	; 233
    36f8:	5f 4f       	sbci	r21, 0xFF	; 255
    36fa:	6d 89       	ldd	r22, Y+21	; 0x15
    36fc:	7e 89       	ldd	r23, Y+22	; 0x16
    36fe:	ce 01       	movw	r24, r28
    3700:	01 96       	adiw	r24, 0x01	; 1
    3702:	0e 94 96 14 	call	0x292c	; 0x292c <vfscanf>
    3706:	2e 96       	adiw	r28, 0x0e	; 14
    3708:	e2 e0       	ldi	r30, 0x02	; 2
    370a:	0c 94 6e 19 	jmp	0x32dc	; 0x32dc <__epilogue_restores__+0x20>

0000370e <ungetc>:
    370e:	fb 01       	movw	r30, r22
    3710:	23 81       	ldd	r18, Z+3	; 0x03
    3712:	20 ff       	sbrs	r18, 0
    3714:	12 c0       	rjmp	.+36     	; 0x373a <ungetc+0x2c>
    3716:	26 fd       	sbrc	r18, 6
    3718:	10 c0       	rjmp	.+32     	; 0x373a <ungetc+0x2c>
    371a:	8f 3f       	cpi	r24, 0xFF	; 255
    371c:	3f ef       	ldi	r19, 0xFF	; 255
    371e:	93 07       	cpc	r25, r19
    3720:	61 f0       	breq	.+24     	; 0x373a <ungetc+0x2c>
    3722:	82 83       	std	Z+2, r24	; 0x02
    3724:	2f 7d       	andi	r18, 0xDF	; 223
    3726:	20 64       	ori	r18, 0x40	; 64
    3728:	23 83       	std	Z+3, r18	; 0x03
    372a:	26 81       	ldd	r18, Z+6	; 0x06
    372c:	37 81       	ldd	r19, Z+7	; 0x07
    372e:	21 50       	subi	r18, 0x01	; 1
    3730:	31 09       	sbc	r19, r1
    3732:	26 83       	std	Z+6, r18	; 0x06
    3734:	37 83       	std	Z+7, r19	; 0x07
    3736:	99 27       	eor	r25, r25
    3738:	08 95       	ret
    373a:	8f ef       	ldi	r24, 0xFF	; 255
    373c:	9f ef       	ldi	r25, 0xFF	; 255
    373e:	08 95       	ret

00003740 <__ultoa_invert>:
    3740:	fa 01       	movw	r30, r20
    3742:	aa 27       	eor	r26, r26
    3744:	28 30       	cpi	r18, 0x08	; 8
    3746:	51 f1       	breq	.+84     	; 0x379c <__ultoa_invert+0x5c>
    3748:	20 31       	cpi	r18, 0x10	; 16
    374a:	81 f1       	breq	.+96     	; 0x37ac <__ultoa_invert+0x6c>
    374c:	e8 94       	clt
    374e:	6f 93       	push	r22
    3750:	6e 7f       	andi	r22, 0xFE	; 254
    3752:	6e 5f       	subi	r22, 0xFE	; 254
    3754:	7f 4f       	sbci	r23, 0xFF	; 255
    3756:	8f 4f       	sbci	r24, 0xFF	; 255
    3758:	9f 4f       	sbci	r25, 0xFF	; 255
    375a:	af 4f       	sbci	r26, 0xFF	; 255
    375c:	b1 e0       	ldi	r27, 0x01	; 1
    375e:	3e d0       	rcall	.+124    	; 0x37dc <__ultoa_invert+0x9c>
    3760:	b4 e0       	ldi	r27, 0x04	; 4
    3762:	3c d0       	rcall	.+120    	; 0x37dc <__ultoa_invert+0x9c>
    3764:	67 0f       	add	r22, r23
    3766:	78 1f       	adc	r23, r24
    3768:	89 1f       	adc	r24, r25
    376a:	9a 1f       	adc	r25, r26
    376c:	a1 1d       	adc	r26, r1
    376e:	68 0f       	add	r22, r24
    3770:	79 1f       	adc	r23, r25
    3772:	8a 1f       	adc	r24, r26
    3774:	91 1d       	adc	r25, r1
    3776:	a1 1d       	adc	r26, r1
    3778:	6a 0f       	add	r22, r26
    377a:	71 1d       	adc	r23, r1
    377c:	81 1d       	adc	r24, r1
    377e:	91 1d       	adc	r25, r1
    3780:	a1 1d       	adc	r26, r1
    3782:	20 d0       	rcall	.+64     	; 0x37c4 <__ultoa_invert+0x84>
    3784:	09 f4       	brne	.+2      	; 0x3788 <__ultoa_invert+0x48>
    3786:	68 94       	set
    3788:	3f 91       	pop	r19
    378a:	2a e0       	ldi	r18, 0x0A	; 10
    378c:	26 9f       	mul	r18, r22
    378e:	11 24       	eor	r1, r1
    3790:	30 19       	sub	r19, r0
    3792:	30 5d       	subi	r19, 0xD0	; 208
    3794:	31 93       	st	Z+, r19
    3796:	de f6       	brtc	.-74     	; 0x374e <__ultoa_invert+0xe>
    3798:	cf 01       	movw	r24, r30
    379a:	08 95       	ret
    379c:	46 2f       	mov	r20, r22
    379e:	47 70       	andi	r20, 0x07	; 7
    37a0:	40 5d       	subi	r20, 0xD0	; 208
    37a2:	41 93       	st	Z+, r20
    37a4:	b3 e0       	ldi	r27, 0x03	; 3
    37a6:	0f d0       	rcall	.+30     	; 0x37c6 <__ultoa_invert+0x86>
    37a8:	c9 f7       	brne	.-14     	; 0x379c <__ultoa_invert+0x5c>
    37aa:	f6 cf       	rjmp	.-20     	; 0x3798 <__ultoa_invert+0x58>
    37ac:	46 2f       	mov	r20, r22
    37ae:	4f 70       	andi	r20, 0x0F	; 15
    37b0:	40 5d       	subi	r20, 0xD0	; 208
    37b2:	4a 33       	cpi	r20, 0x3A	; 58
    37b4:	18 f0       	brcs	.+6      	; 0x37bc <__ultoa_invert+0x7c>
    37b6:	49 5d       	subi	r20, 0xD9	; 217
    37b8:	31 fd       	sbrc	r19, 1
    37ba:	40 52       	subi	r20, 0x20	; 32
    37bc:	41 93       	st	Z+, r20
    37be:	02 d0       	rcall	.+4      	; 0x37c4 <__ultoa_invert+0x84>
    37c0:	a9 f7       	brne	.-22     	; 0x37ac <__ultoa_invert+0x6c>
    37c2:	ea cf       	rjmp	.-44     	; 0x3798 <__ultoa_invert+0x58>
    37c4:	b4 e0       	ldi	r27, 0x04	; 4
    37c6:	a6 95       	lsr	r26
    37c8:	97 95       	ror	r25
    37ca:	87 95       	ror	r24
    37cc:	77 95       	ror	r23
    37ce:	67 95       	ror	r22
    37d0:	ba 95       	dec	r27
    37d2:	c9 f7       	brne	.-14     	; 0x37c6 <__ultoa_invert+0x86>
    37d4:	00 97       	sbiw	r24, 0x00	; 0
    37d6:	61 05       	cpc	r22, r1
    37d8:	71 05       	cpc	r23, r1
    37da:	08 95       	ret
    37dc:	9b 01       	movw	r18, r22
    37de:	ac 01       	movw	r20, r24
    37e0:	0a 2e       	mov	r0, r26
    37e2:	06 94       	lsr	r0
    37e4:	57 95       	ror	r21
    37e6:	47 95       	ror	r20
    37e8:	37 95       	ror	r19
    37ea:	27 95       	ror	r18
    37ec:	ba 95       	dec	r27
    37ee:	c9 f7       	brne	.-14     	; 0x37e2 <__ultoa_invert+0xa2>
    37f0:	62 0f       	add	r22, r18
    37f2:	73 1f       	adc	r23, r19
    37f4:	84 1f       	adc	r24, r20
    37f6:	95 1f       	adc	r25, r21
    37f8:	a0 1d       	adc	r26, r0
    37fa:	08 95       	ret

000037fc <__ctype_isfalse>:
    37fc:	99 27       	eor	r25, r25
    37fe:	88 27       	eor	r24, r24

00003800 <__ctype_istrue>:
    3800:	08 95       	ret

00003802 <_exit>:
    3802:	f8 94       	cli

00003804 <__stop_program>:
    3804:	ff cf       	rjmp	.-2      	; 0x3804 <__stop_program>
