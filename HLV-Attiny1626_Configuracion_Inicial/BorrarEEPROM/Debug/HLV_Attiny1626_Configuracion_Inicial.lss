
HLV_Attiny1626_Configuracion_Inicial.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  00000219  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000196  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000f  00008196  00000196  0000020a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .comment      00000030  00000000  00000000  00000219  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000024c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  0000028c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001dcd  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000019c1  00000000  00000000  00002099  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000483  00000000  00000000  00003a5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00003ee0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ed4  00000000  00000000  00003f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000291  00000000  00000000  00004e40  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000050d1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  68:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  6c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  70:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  74:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	df e3       	ldi	r29, 0x3F	; 63
  82:	de bf       	out	0x3e, r29	; 62
  84:	0e 94 9e 00 	call	0x13c	; 0x13c <main>
  88:	0c 94 c9 00 	jmp	0x192	; 0x192 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <CLOCK32K_init>:
			CPU_CCP = CCP_SPM_gc;
			NVMCTRL.CTRLA = NVMCTRL_CMD_PAGEERASEWRITE_gc;
			
		}
	}
}
  90:	88 ed       	ldi	r24, 0xD8	; 216
  92:	84 bf       	out	0x34, r24	; 52
  94:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
  98:	84 bf       	out	0x34, r24	; 52
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__RODATA_PM_OFFSET__+0x7f8060>
  a0:	08 95       	ret

000000a2 <erase_EEPROM>:
  a2:	e0 e0       	ldi	r30, 0x00	; 0
  a4:	f4 e1       	ldi	r31, 0x14	; 20
  a6:	06 c0       	rjmp	.+12     	; 0xb4 <erase_EEPROM+0x12>
  a8:	11 92       	st	Z+, r1
  aa:	8d e9       	ldi	r24, 0x9D	; 157
  ac:	84 bf       	out	0x34, r24	; 52
  ae:	83 e0       	ldi	r24, 0x03	; 3
  b0:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
  b4:	e1 15       	cp	r30, r1
  b6:	85 e1       	ldi	r24, 0x15	; 21
  b8:	f8 07       	cpc	r31, r24
  ba:	b4 f3       	brlt	.-20     	; 0xa8 <erase_EEPROM+0x6>
  bc:	08 95       	ret

000000be <config_Sensors>:
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	80 93 e4 14 	sts	0x14E4, r24	; 0x8014e4 <__RODATA_PM_OFFSET__+0x7f94e4>
  c6:	9d e9       	ldi	r25, 0x9D	; 157
  c8:	94 bf       	out	0x34, r25	; 52
  ca:	e0 e0       	ldi	r30, 0x00	; 0
  cc:	f0 e1       	ldi	r31, 0x10	; 16
  ce:	83 e0       	ldi	r24, 0x03	; 3
  d0:	80 83       	st	Z, r24
  d2:	60 93 e5 14 	sts	0x14E5, r22	; 0x8014e5 <__RODATA_PM_OFFSET__+0x7f94e5>
  d6:	94 bf       	out	0x34, r25	; 52
  d8:	80 83       	st	Z, r24
  da:	20 93 ec 14 	sts	0x14EC, r18	; 0x8014ec <__RODATA_PM_OFFSET__+0x7f94ec>
  de:	94 bf       	out	0x34, r25	; 52
  e0:	80 83       	st	Z, r24
  e2:	30 93 ed 14 	sts	0x14ED, r19	; 0x8014ed <__RODATA_PM_OFFSET__+0x7f94ed>
  e6:	94 bf       	out	0x34, r25	; 52
  e8:	80 83       	st	Z, r24
  ea:	40 93 ee 14 	sts	0x14EE, r20	; 0x8014ee <__RODATA_PM_OFFSET__+0x7f94ee>
  ee:	94 bf       	out	0x34, r25	; 52
  f0:	80 83       	st	Z, r24
  f2:	50 93 ef 14 	sts	0x14EF, r21	; 0x8014ef <__RODATA_PM_OFFSET__+0x7f94ef>
  f6:	94 bf       	out	0x34, r25	; 52
  f8:	80 83       	st	Z, r24
  fa:	66 e9       	ldi	r22, 0x96	; 150
  fc:	71 e8       	ldi	r23, 0x81	; 129
  fe:	c8 01       	movw	r24, r16
 100:	0e 94 af 00 	call	0x15e	; 0x15e <strstr>
 104:	89 2b       	or	r24, r25
 106:	41 f0       	breq	.+16     	; 0x118 <__EEPROM_REGION_LENGTH__+0x18>
 108:	10 92 eb 14 	sts	0x14EB, r1	; 0x8014eb <__RODATA_PM_OFFSET__+0x7f94eb>
 10c:	8d e9       	ldi	r24, 0x9D	; 157
 10e:	84 bf       	out	0x34, r24	; 52
 110:	83 e0       	ldi	r24, 0x03	; 3
 112:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
 116:	0f c0       	rjmp	.+30     	; 0x136 <__EEPROM_REGION_LENGTH__+0x36>
 118:	6e e9       	ldi	r22, 0x9E	; 158
 11a:	71 e8       	ldi	r23, 0x81	; 129
 11c:	c8 01       	movw	r24, r16
 11e:	0e 94 af 00 	call	0x15e	; 0x15e <strstr>
 122:	89 2b       	or	r24, r25
 124:	41 f0       	breq	.+16     	; 0x136 <__EEPROM_REGION_LENGTH__+0x36>
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	80 93 eb 14 	sts	0x14EB, r24	; 0x8014eb <__RODATA_PM_OFFSET__+0x7f94eb>
 12c:	8d e9       	ldi	r24, 0x9D	; 157
 12e:	84 bf       	out	0x34, r24	; 52
 130:	83 e0       	ldi	r24, 0x03	; 3
 132:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__RODATA_PM_OFFSET__+0x7f9000>
 136:	1f 91       	pop	r17
 138:	0f 91       	pop	r16
 13a:	08 95       	ret

0000013c <main>:
 * @brief Funcion principal para el manejo de registros
 *
 */
int main()
{
	CLOCK32K_init();
 13c:	0e 94 48 00 	call	0x90	; 0x90 <CLOCK32K_init>
	erase_EEPROM();
 140:	0e 94 51 00 	call	0xa2	; 0xa2 <erase_EEPROM>
	config_Sensors('A','A',100,"Caudal");
 144:	0e e9       	ldi	r16, 0x9E	; 158
 146:	11 e8       	ldi	r17, 0x81	; 129
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	48 ec       	ldi	r20, 0xC8	; 200
 14e:	52 e4       	ldi	r21, 0x42	; 66
 150:	61 e4       	ldi	r22, 0x41	; 65
 152:	70 e0       	ldi	r23, 0x00	; 0
 154:	81 e4       	ldi	r24, 0x41	; 65
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e 94 5f 00 	call	0xbe	; 0xbe <config_Sensors>
 15c:	ff cf       	rjmp	.-2      	; 0x15c <main+0x20>

0000015e <strstr>:
 15e:	fb 01       	movw	r30, r22
 160:	51 91       	ld	r21, Z+
 162:	55 23       	and	r21, r21
 164:	a9 f0       	breq	.+42     	; 0x190 <strstr+0x32>
 166:	bf 01       	movw	r22, r30
 168:	dc 01       	movw	r26, r24
 16a:	4d 91       	ld	r20, X+
 16c:	45 17       	cp	r20, r21
 16e:	41 11       	cpse	r20, r1
 170:	e1 f7       	brne	.-8      	; 0x16a <strstr+0xc>
 172:	59 f4       	brne	.+22     	; 0x18a <strstr+0x2c>
 174:	cd 01       	movw	r24, r26
 176:	01 90       	ld	r0, Z+
 178:	00 20       	and	r0, r0
 17a:	49 f0       	breq	.+18     	; 0x18e <strstr+0x30>
 17c:	4d 91       	ld	r20, X+
 17e:	40 15       	cp	r20, r0
 180:	41 11       	cpse	r20, r1
 182:	c9 f3       	breq	.-14     	; 0x176 <strstr+0x18>
 184:	fb 01       	movw	r30, r22
 186:	41 11       	cpse	r20, r1
 188:	ef cf       	rjmp	.-34     	; 0x168 <strstr+0xa>
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	08 95       	ret

00000192 <_exit>:
 192:	f8 94       	cli

00000194 <__stop_program>:
 194:	ff cf       	rjmp	.-2      	; 0x194 <__stop_program>
